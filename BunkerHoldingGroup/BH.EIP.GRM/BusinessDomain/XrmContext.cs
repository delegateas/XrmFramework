//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]


namespace DG.XrmFramework.BusinessDomain.ServiceContext {
    
    
    /// <summary>
    /// <para>Business that represents a customer or potential customer. The company that is billed in business transactions.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [EntityLogicalName("account")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Account : ExtendedEntity<AccountState, Account_StatusCode> {
        
        public const string EntityLogicalName = "account";
        
        public const int EntityTypeCode = 1;
        
        public Account() : 
                base(EntityLogicalName) {
        }
        
        public Account(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("accountid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public Guid? AccountId {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Select a category to indicate whether the customer account is standard or preferred.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("accountcategorycode")]
        [DisplayName("Category")]
        public Account_AccountCategoryCode? AccountCategoryCode {
            get {
                return GetOptionSetValue<Account_AccountCategoryCode>("accountcategorycode");
            }
            set {
                SetOptionSetValue("accountcategorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.</para>
        /// <para>Display Name: Classification</para>
        /// </summary>
        [AttributeLogicalName("accountclassificationcode")]
        [DisplayName("Classification")]
        public Account_AccountClassificationCode? AccountClassificationCode {
            get {
                return GetOptionSetValue<Account_AccountClassificationCode>("accountclassificationcode");
            }
            set {
                SetOptionSetValue("accountclassificationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type an ID number or code for the account to quickly search and identify the account in system views.</para>
        /// <para>Display Name: Account Number</para>
        /// </summary>
        [AttributeLogicalName("accountnumber")]
        [DisplayName("Account Number")]
        [MaxLength(20)]
        public string AccountNumber {
            get {
                return GetAttributeValue<string>("accountnumber");
            }
            set {
                SetAttributeValue("accountnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select a rating to indicate the value of the customer account.</para>
        /// <para>Display Name: Account Rating</para>
        /// </summary>
        [AttributeLogicalName("accountratingcode")]
        [DisplayName("Account Rating")]
        public Account_AccountRatingCode? AccountRatingCode {
            get {
                return GetOptionSetValue<Account_AccountRatingCode>("accountratingcode");
            }
            set {
                SetOptionSetValue("accountratingcode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Account_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Address 1: City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Address 1: Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Address 1: Freight Terms")]
        public Account_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Address 1: Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Address 1: Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Address 1: Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Address 1: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Address 1: Primary Contact Name")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Address 1: State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Account_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Address 2: Freight Terms")]
        public Account_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(200)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Address 2: Primary Contact Name")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aging 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 30 field.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aging 30 (Base)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aging 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 60 field.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aging 60 (Base)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aging 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 90 field.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aging 90 (Base)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Select the legal designation or other business type of the account for contracts or reporting purposes.</para>
        /// <para>Display Name: Business Type</para>
        /// </summary>
        [AttributeLogicalName("businesstypecode")]
        [DisplayName("Business Type")]
        public Account_BusinessTypeCode? BusinessTypeCode {
            get {
                return GetOptionSetValue<Account_BusinessTypeCode>("businesstypecode");
            }
            set {
                SetOptionSetValue("businesstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the credit limit converted to the system's default base currency for reporting purposes.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Credit Limit (Base)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Credit Hold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size category or range of the account for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Customer Size")]
        public Account_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Account_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the account and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationship Type")]
        public Account_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Account_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the default price list associated with the account to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("defaultpricelevelid")]
        [DisplayName("Price List")]
        public EntityReference DefaultPriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("defaultpricelevelid");
            }
            set {
                SetAttributeValue("defaultpricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the account, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Do not allow Bulk Mails")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct email sent from Microsoft Dynamics 365.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account accepts marketing materials, such as brochures or catalogs.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Send Marketing Materials")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the account.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the account.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Email Address 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the account.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the account.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the account's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteURL {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's primary industry for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("industrycode")]
        [DisplayName("Industry")]
        public Account_IndustryCode? IndustryCode {
            get {
                return GetOptionSetValue<Account_IndustryCode>("industrycode");
            }
            set {
                SetOptionSetValue("industrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the account was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Date Included in Campaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Market Capitalization</para>
        /// </summary>
        [AttributeLogicalName("marketcap")]
        [DisplayName("Market Capitalization")]
        public decimal? MarketCap {
            get {
                return GetMoneyValue("marketcap");
            }
            set {
                SetMoneyValue("marketcap", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the market capitalization converted to the system's default base currency.</para>
        /// <para>Display Name: Market Capitalization (Base)</para>
        /// </summary>
        [AttributeLogicalName("marketcap_base")]
        [DisplayName("Market Capitalization (Base)")]
        public decimal? MarketCap_Base {
            get {
                return GetMoneyValue("marketcap_base");
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Marketing Only")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the master account that the account was merged with.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with another account.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Company Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Number of Employees</para>
        /// </summary>
        [AttributeLogicalName("numberofemployees")]
        [DisplayName("Number of Employees")]
        [Range(0, 1000000000)]
        public int? NumberOfEmployees {
            get {
                return GetAttributeValue<int?>("numberofemployees");
            }
            set {
                SetAttributeValue("numberofemployees", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Number of open opportunities against an account and its child accounts.</para>
        /// <para>Display Name: Open Deals</para>
        /// </summary>
        [AttributeLogicalName("opendeals")]
        [DisplayName("Open Deals")]
        [Range(-2147483648, 2147483647)]
        public int? OpenDeals {
            get {
                return GetAttributeValue<int?>("opendeals");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Open Deals.</para>
        /// <para>Display Name: Open Deals (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("opendeals_date")]
        [DisplayName("Open Deals (Last Updated On)")]
        public DateTime? OpenDeals_Date {
            get {
                return GetAttributeValue<DateTime?>("opendeals_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Open Deals.</para>
        /// <para>Display Name: Open Deals (State)</para>
        /// </summary>
        [AttributeLogicalName("opendeals_state")]
        [DisplayName("Open Deals (State)")]
        [Range(-2147483648, 2147483647)]
        public int? OpenDeals_State {
            get {
                return GetAttributeValue<int?>("opendeals_state");
            }
        }
        
        /// <summary>
        /// <para>Sum of open revenue against an account and its child accounts.</para>
        /// <para>Display Name: Open Revenue</para>
        /// </summary>
        [AttributeLogicalName("openrevenue")]
        [DisplayName("Open Revenue")]
        public decimal? OpenRevenue {
            get {
                return GetMoneyValue("openrevenue");
            }
        }
        
        /// <summary>
        /// <para>Value of the Open Revenue in base currency.</para>
        /// <para>Display Name: Open Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_base")]
        [DisplayName("Open Revenue (Base)")]
        public decimal? OpenRevenue_Base {
            get {
                return GetMoneyValue("openrevenue_base");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Open Revenue.</para>
        /// <para>Display Name: Open Revenue (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_date")]
        [DisplayName("Open Revenue (Last Updated On)")]
        public DateTime? OpenRevenue_Date {
            get {
                return GetAttributeValue<DateTime?>("openrevenue_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Open Revenue.</para>
        /// <para>Display Name: Open Revenue (State)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_state")]
        [DisplayName("Open Revenue (State)")]
        [Range(-2147483648, 2147483647)]
        public int? OpenRevenue_State {
            get {
                return GetAttributeValue<int?>("openrevenue_state");
            }
        }
        
        /// <summary>
        /// <para>Shows the lead that the account was created from if the account was created by converting a lead in Microsoft Dynamics 365. This is used to relate the account to data on the originating lead for use in reporting and analytics.</para>
        /// <para>Display Name: Originating Lead</para>
        /// </summary>
        [AttributeLogicalName("originatingleadid")]
        [DisplayName("Originating Lead")]
        public EntityReference OriginatingLeadId {
            get {
                return GetAttributeValue<EntityReference>("originatingleadid");
            }
            set {
                SetAttributeValue("originatingleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's ownership structure, such as public or private.</para>
        /// <para>Display Name: Ownership</para>
        /// </summary>
        [AttributeLogicalName("ownershipcode")]
        [DisplayName("Ownership")]
        public Account_OwnershipCode? OwnershipCode {
            get {
                return GetOptionSetValue<Account_OwnershipCode>("ownershipcode");
            }
            set {
                SetOptionSetValue("ownershipcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the account.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the account.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.</para>
        /// <para>Display Name: Parent Account</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Parent Account")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Account_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Account_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Preferred Day")]
        public Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Preferred Time")]
        public Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Preferred Method of Contact")]
        public Account_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Account_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the account's preferred service facility or equipment to make sure services are scheduled correctly for the customer.</para>
        /// <para>Display Name: Preferred Facility/Equipment</para>
        /// </summary>
        [AttributeLogicalName("preferredequipmentid")]
        [DisplayName("Preferred Facility/Equipment")]
        public EntityReference PreferredEquipmentId {
            get {
                return GetAttributeValue<EntityReference>("preferredequipmentid");
            }
            set {
                SetAttributeValue("preferredequipmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the account's preferred service for reference when you schedule service activities.</para>
        /// <para>Display Name: Preferred Service</para>
        /// </summary>
        [AttributeLogicalName("preferredserviceid")]
        [DisplayName("Preferred Service")]
        public EntityReference PreferredServiceId {
            get {
                return GetAttributeValue<EntityReference>("preferredserviceid");
            }
            set {
                SetAttributeValue("preferredserviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the preferred service representative for reference when you schedule service activities for the account.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Preferred User")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the primary contact for the account to provide quick access to contact details.</para>
        /// <para>Display Name: Primary Contact</para>
        /// </summary>
        [AttributeLogicalName("primarycontactid")]
        [DisplayName("Primary Contact")]
        public EntityReference PrimaryContactId {
            get {
                return GetAttributeValue<EntityReference>("primarycontactid");
            }
            set {
                SetAttributeValue("primarycontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Company Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Satori ID for Account</para>
        /// <para>Display Name: Primary Satori ID</para>
        /// </summary>
        [AttributeLogicalName("primarysatoriid")]
        [DisplayName("Primary Satori ID")]
        [MaxLength(200)]
        public string PrimarySatoriId {
            get {
                return GetAttributeValue<string>("primarysatoriid");
            }
            set {
                SetAttributeValue("primarysatoriid", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Twitter ID for Account</para>
        /// <para>Display Name: Primary Twitter ID</para>
        /// </summary>
        [AttributeLogicalName("primarytwitterid")]
        [DisplayName("Primary Twitter ID")]
        [MaxLength(128)]
        public string PrimaryTwitterId {
            get {
                return GetAttributeValue<string>("primarytwitterid");
            }
            set {
                SetAttributeValue("primarytwitterid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the annual revenue for the account, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Annual Revenue</para>
        /// </summary>
        [AttributeLogicalName("revenue")]
        [DisplayName("Annual Revenue")]
        public decimal? Revenue {
            get {
                return GetMoneyValue("revenue");
            }
            set {
                SetMoneyValue("revenue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("revenue_base")]
        [DisplayName("Annual Revenue (Base)")]
        public decimal? Revenue_Base {
            get {
                return GetMoneyValue("revenue_base");
            }
        }
        
        /// <summary>
        /// <para>Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: SIC Code</para>
        /// </summary>
        [AttributeLogicalName("sic")]
        [DisplayName("SIC Code")]
        [MaxLength(24)]
        public string SIC {
            get {
                return GetAttributeValue<string>("sic");
            }
            set {
                SetAttributeValue("sic", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Account record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Shares Outstanding</para>
        /// </summary>
        [AttributeLogicalName("sharesoutstanding")]
        [DisplayName("Shares Outstanding")]
        [Range(0, 1000000000)]
        public int? SharesOutstanding {
            get {
                return GetAttributeValue<int?>("sharesoutstanding");
            }
            set {
                SetAttributeValue("sharesoutstanding", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Account_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AccountState? StateCode {
            get {
                return GetOptionSetValue<AccountState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Account_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Account_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange at which the account is listed to track their stock and financial performance of the company.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Stock Exchange")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this account.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this account.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this account.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the account for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory Code</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Territory Code")]
        public Account_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Account_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the sales region or territory for the account to make sure the account is assigned to the correct representative and for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Ticker Symbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to account record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the account.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the account's website URL to get quick details about the company profile.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteURL {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
        /// <para>Display Name: Yomi Account Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        [DisplayName("Yomi Account Name")]
        [MaxLength(160)]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Approved status</para>
        /// </summary>
        [AttributeLogicalName("grm_approvedstatus")]
        [DisplayName("Approved status")]
        public bool? grm_Approvedstatus {
            get {
                return GetAttributeValue<bool?>("grm_approvedstatus");
            }
            set {
                SetAttributeValue("grm_approvedstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusion - Product Risk</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusionproductrisk")]
        [DisplayName("Conclusion - Product Risk")]
        public grm_conclusion? grm_ConclusionProductRisk {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusionproductrisk");
            }
            set {
                SetOptionSetValue("grm_conclusionproductrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusions - client’s trading</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusionsclientstrading")]
        [DisplayName("Conclusions - client’s trading")]
        public grm_conclusion? grm_Conclusionsclientstrading {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusionsclientstrading");
            }
            set {
                SetOptionSetValue("grm_conclusionsclientstrading", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusions - expected scope</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusionsexpectedscope")]
        [DisplayName("Conclusions - expected scope")]
        public grm_conclusion? grm_Conclusionsexpectedscope {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusionsexpectedscope");
            }
            set {
                SetOptionSetValue("grm_conclusionsexpectedscope", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Task/investigation - Contemplated frequency</para>
        /// </summary>
        [AttributeLogicalName("grm_contemplatedfrequency")]
        [DisplayName("Task/investigation - Contemplated frequency")]
        public string grm_Contemplatedfrequency {
            get {
                return GetAttributeValue<string>("grm_contemplatedfrequency");
            }
            set {
                SetAttributeValue("grm_contemplatedfrequency", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Industry associated with Account.</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("grm_industryid")]
        [DisplayName("Industry")]
        public EntityReference grm_IndustryId {
            get {
                return GetAttributeValue<EntityReference>("grm_industryid");
            }
            set {
                SetAttributeValue("grm_industryid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC status</para>
        /// </summary>
        [AttributeLogicalName("grm_kycstatus")]
        [DisplayName("KYC status")]
        public bool? grm_KYCstatus {
            get {
                return GetAttributeValue<bool?>("grm_kycstatus");
            }
            set {
                SetAttributeValue("grm_kycstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Legal Structure associated with Account.</para>
        /// <para>Display Name: Legal Structure</para>
        /// </summary>
        [AttributeLogicalName("grm_legalstructureid")]
        [DisplayName("Legal Structure")]
        public EntityReference grm_LegalStructureId {
            get {
                return GetAttributeValue<EntityReference>("grm_legalstructureid");
            }
            set {
                SetAttributeValue("grm_legalstructureid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: MiFID status</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidstatus")]
        [DisplayName("MiFID status")]
        public bool? grm_MiFIDstatus {
            get {
                return GetAttributeValue<bool?>("grm_mifidstatus");
            }
            set {
                SetAttributeValue("grm_mifidstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Ownership Structure associated with Account.</para>
        /// <para>Display Name: Ownership Structure</para>
        /// </summary>
        [AttributeLogicalName("grm_ownershipstructureid")]
        [DisplayName("Ownership Structure")]
        public EntityReference grm_OwnershipStructureId {
            get {
                return GetAttributeValue<EntityReference>("grm_ownershipstructureid");
            }
            set {
                SetAttributeValue("grm_ownershipstructureid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: PEP Screening</para>
        /// </summary>
        [AttributeLogicalName("grm_pepscreening")]
        [DisplayName("PEP Screening")]
        public grm_receiveddone? grm_PEPScreening {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_pepscreening");
            }
            set {
                SetOptionSetValue("grm_pepscreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: PEP screening</para>
        /// </summary>
        [AttributeLogicalName("grm_pepscreeninghighrisk")]
        [DisplayName("PEP screening")]
        public grm_receiveddone? grm_PEPscreeninghighrisk {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_pepscreeninghighrisk");
            }
            set {
                SetOptionSetValue("grm_pepscreeninghighrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Products status</para>
        /// </summary>
        [AttributeLogicalName("grm_productsstatus")]
        [DisplayName("Products status")]
        public bool? grm_Productsstatus {
            get {
                return GetAttributeValue<bool?>("grm_productsstatus");
            }
            set {
                SetAttributeValue("grm_productsstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Ownership structure - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforownershipstructureweighted")]
        [DisplayName("Risk Level for Ownership structure - Weighted")]
        public decimal? grm_RiskLevelforOwnershipstructureweighted {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforownershipstructureweighted");
            }
            set {
                SetAttributeValue("grm_risklevelforownershipstructureweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk status</para>
        /// </summary>
        [AttributeLogicalName("grm_riskstatus")]
        [DisplayName("Risk status")]
        public bool? grm_Riskstatus {
            get {
                return GetAttributeValue<bool?>("grm_riskstatus");
            }
            set {
                SetAttributeValue("grm_riskstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Trading Pattern status</para>
        /// </summary>
        [AttributeLogicalName("grm_tradingpatternstatus")]
        [DisplayName("Trading Pattern status")]
        public bool? grm_TradingPatternstatus {
            get {
                return GetAttributeValue<bool?>("grm_tradingpatternstatus");
            }
            set {
                SetAttributeValue("grm_tradingpatternstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Adverse Media screening</para>
        /// </summary>
        [AttributeLogicalName("grm_adversemediascreening")]
        [DisplayName("Adverse Media screening")]
        public grm_receiveddone? grm_adversemediascreening {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_adversemediascreening");
            }
            set {
                SetOptionSetValue("grm_adversemediascreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Articles of association</para>
        /// </summary>
        [AttributeLogicalName("grm_articlesofassociation")]
        [DisplayName("Articles of association")]
        public grm_receiveddone? grm_articlesofassociation {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_articlesofassociation");
            }
            set {
                SetOptionSetValue("grm_articlesofassociation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Certificate of incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_certificateofincorporation")]
        [DisplayName("Certificate of incorporation")]
        public grm_receiveddone? grm_certificateofincorporation {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_certificateofincorporation");
            }
            set {
                SetOptionSetValue("grm_certificateofincorporation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Certificate of incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_certificateofincorporationhighrisk")]
        [DisplayName("Certificate of incorporation")]
        public grm_receiveddone? grm_certificateofincorporationhighrisk {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_certificateofincorporationhighrisk");
            }
            set {
                SetOptionSetValue("grm_certificateofincorporationhighrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Change to Calculated Risk</para>
        /// </summary>
        [AttributeLogicalName("grm_changetocalculatedrisk")]
        [DisplayName("Change to Calculated Risk")]
        public bool? grm_changetocalculatedrisk {
            get {
                return GetAttributeValue<bool?>("grm_changetocalculatedrisk");
            }
            set {
                SetAttributeValue("grm_changetocalculatedrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Change to High Risk Level</para>
        /// </summary>
        [AttributeLogicalName("grm_changetohighrisklevel")]
        [DisplayName("Change to High Risk Level")]
        public bool? grm_changetohighrisklevel {
            get {
                return GetAttributeValue<bool?>("grm_changetohighrisklevel");
            }
            set {
                SetAttributeValue("grm_changetohighrisklevel", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Change to Medium Risk Level</para>
        /// </summary>
        [AttributeLogicalName("grm_changetomediumrisklevel")]
        [DisplayName("Change to Medium Risk Level")]
        public bool? grm_changetomediumrisklevel {
            get {
                return GetAttributeValue<bool?>("grm_changetomediumrisklevel");
            }
            set {
                SetAttributeValue("grm_changetomediumrisklevel", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Clients trading pattern</para>
        /// </summary>
        [AttributeLogicalName("grm_clientstradingpattern")]
        [DisplayName("Clients trading pattern")]
        public grm_receiveddone? grm_clientstradingpattern {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_clientstradingpattern");
            }
            set {
                SetOptionSetValue("grm_clientstradingpattern", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusion - Client risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusionclientriskfactors")]
        [DisplayName("Conclusion - Client risk factors")]
        public grm_conclusion? grm_conclusionclientriskfactors {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusionclientriskfactors");
            }
            set {
                SetOptionSetValue("grm_conclusionclientriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusion - Contemplated Duration</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusioncontemplatedduration")]
        [DisplayName("Conclusion - Contemplated Duration")]
        public grm_conclusion? grm_conclusioncontemplatedduration {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusioncontemplatedduration");
            }
            set {
                SetOptionSetValue("grm_conclusioncontemplatedduration", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusion - Contemplated frequency</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusioncontemplatedfrequency")]
        [DisplayName("Conclusion - Contemplated frequency")]
        public grm_conclusion? grm_conclusioncontemplatedfrequency {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusioncontemplatedfrequency");
            }
            set {
                SetOptionSetValue("grm_conclusioncontemplatedfrequency", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusion - Geographic risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusiongeographicriskfactors")]
        [DisplayName("Conclusion - Geographic risk factors")]
        public grm_conclusion? grm_conclusiongeographicriskfactors {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusiongeographicriskfactors");
            }
            set {
                SetOptionSetValue("grm_conclusiongeographicriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusion on final risk assessment</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusiononfinalriskassessment")]
        [DisplayName("Conclusion on final risk assessment")]
        public string grm_conclusiononfinalriskassessment {
            get {
                return GetAttributeValue<string>("grm_conclusiononfinalriskassessment");
            }
            set {
                SetAttributeValue("grm_conclusiononfinalriskassessment", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("grm_country")]
        [DisplayName("Country")]
        public EntityReference grm_country {
            get {
                return GetAttributeValue<EntityReference>("grm_country");
            }
            set {
                SetAttributeValue("grm_country", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country of Incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_countryofincorporation")]
        [DisplayName("Country of Incorporation")]
        public EntityReference grm_countryofincorporation {
            get {
                return GetAttributeValue<EntityReference>("grm_countryofincorporation");
            }
            set {
                SetAttributeValue("grm_countryofincorporation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country of Incorporation - Weigthed</para>
        /// </summary>
        [AttributeLogicalName("grm_countryofincorporationweigthed")]
        [DisplayName("Country of Incorporation - Weigthed")]
        public decimal? grm_countryofincorporationweigthed {
            get {
                return GetAttributeValue<decimal?>("grm_countryofincorporationweigthed");
            }
            set {
                SetAttributeValue("grm_countryofincorporationweigthed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country of Nationality</para>
        /// </summary>
        [AttributeLogicalName("grm_countryofnationality")]
        [DisplayName("Country of Nationality")]
        public EntityReference grm_countryofnationality {
            get {
                return GetAttributeValue<EntityReference>("grm_countryofnationality");
            }
            set {
                SetAttributeValue("grm_countryofnationality", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country of Nationality - Weigthed</para>
        /// </summary>
        [AttributeLogicalName("grm_countryofnationalityweigthed")]
        [DisplayName("Country of Nationality - Weigthed")]
        public decimal? grm_countryofnationalityweigthed {
            get {
                return GetAttributeValue<decimal?>("grm_countryofnationalityweigthed");
            }
            set {
                SetAttributeValue("grm_countryofnationalityweigthed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country of Operation</para>
        /// </summary>
        [AttributeLogicalName("grm_countryofoperation")]
        [DisplayName("Country of Operation")]
        public EntityReference grm_countryofoperation {
            get {
                return GetAttributeValue<EntityReference>("grm_countryofoperation");
            }
            set {
                SetAttributeValue("grm_countryofoperation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country of Operation - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_countryofoperationweighted")]
        [DisplayName("Country of Operation - Weighted")]
        public decimal? grm_countryofoperationweighted {
            get {
                return GetAttributeValue<decimal?>("grm_countryofoperationweighted");
            }
            set {
                SetAttributeValue("grm_countryofoperationweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country of Residency - Weigthed</para>
        /// </summary>
        [AttributeLogicalName("grm_countryofresidencyweigthed")]
        [DisplayName("Country of Residency - Weigthed")]
        public decimal? grm_countryofresidencyweigthed {
            get {
                return GetAttributeValue<decimal?>("grm_countryofresidencyweigthed");
            }
            set {
                SetAttributeValue("grm_countryofresidencyweigthed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Customer short name</para>
        /// </summary>
        [AttributeLogicalName("grm_customershortname")]
        [DisplayName("Customer short name")]
        [MaxLength(100)]
        public string grm_customershortname {
            get {
                return GetAttributeValue<string>("grm_customershortname");
            }
            set {
                SetAttributeValue("grm_customershortname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Decribe Findings - Contemplated Duration</para>
        /// </summary>
        [AttributeLogicalName("grm_decribefindingscontemplatedduration")]
        [DisplayName("Decribe Findings - Contemplated Duration")]
        public string grm_decribefindingscontemplatedduration {
            get {
                return GetAttributeValue<string>("grm_decribefindingscontemplatedduration");
            }
            set {
                SetAttributeValue("grm_decribefindingscontemplatedduration", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Decribe findings - Contemplated frequency</para>
        /// </summary>
        [AttributeLogicalName("grm_decribefindingscontemplatedfrequency")]
        [DisplayName("Decribe findings - Contemplated frequency")]
        public string grm_decribefindingscontemplatedfrequency {
            get {
                return GetAttributeValue<string>("grm_decribefindingscontemplatedfrequency");
            }
            set {
                SetAttributeValue("grm_decribefindingscontemplatedfrequency", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Decribe findings - Product Risk</para>
        /// </summary>
        [AttributeLogicalName("grm_decribefindingsproductrisk")]
        [DisplayName("Decribe findings - Product Risk")]
        public string grm_decribefindingsproductRisk {
            get {
                return GetAttributeValue<string>("grm_decribefindingsproductrisk");
            }
            set {
                SetAttributeValue("grm_decribefindingsproductrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Derivatives</para>
        /// </summary>
        [AttributeLogicalName("grm_derivatives")]
        [DisplayName("Derivatives")]
        public IEnumerable<Account_grm_derivatives> grm_derivatives {
            get {
                return GetOptionSetCollectionValue<Account_grm_derivatives>("grm_derivatives");
            }
            set {
                SetOptionSetCollectionValue("grm_derivatives", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Describe findings - Client risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_describefindingsclientriskfactors")]
        [DisplayName("Describe findings - Client risk factors")]
        public string grm_describefindingsclientriskfactors {
            get {
                return GetAttributeValue<string>("grm_describefindingsclientriskfactors");
            }
            set {
                SetAttributeValue("grm_describefindingsclientriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Describe findings - client’s relationship</para>
        /// </summary>
        [AttributeLogicalName("grm_describefindingsclientsrelationship")]
        [DisplayName("Describe findings - client’s relationship")]
        public string grm_describefindingsclientsrelationship {
            get {
                return GetAttributeValue<string>("grm_describefindingsclientsrelationship");
            }
            set {
                SetAttributeValue("grm_describefindingsclientsrelationship", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Describe findings - expected scope</para>
        /// </summary>
        [AttributeLogicalName("grm_describefindingsexpectedscope")]
        [DisplayName("Describe findings - expected scope")]
        public string grm_describefindingsexpectedscope {
            get {
                return GetAttributeValue<string>("grm_describefindingsexpectedscope");
            }
            set {
                SetAttributeValue("grm_describefindingsexpectedscope", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Describe findings - Geographic risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_describefindingsgeographicriskfactors")]
        [DisplayName("Describe findings - Geographic risk factors")]
        public string grm_describefindingsgeographicriskfactors {
            get {
                return GetAttributeValue<string>("grm_describefindingsgeographicriskfactors");
            }
            set {
                SetAttributeValue("grm_describefindingsgeographicriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Documents</para>
        /// </summary>
        [AttributeLogicalName("grm_documents")]
        [DisplayName("Documents")]
        public grm_documents? grm_documents {
            get {
                return GetOptionSetValue<grm_documents>("grm_documents");
            }
            set {
                SetOptionSetValue("grm_documents", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Dow Jones Risk and Compliance Database</para>
        /// </summary>
        [AttributeLogicalName("grm_dowjonesriskandcompliancedatabase")]
        [DisplayName("Dow Jones Risk and Compliance Database")]
        public grm_receiveddone? grm_dowjonesriskandcompliancedatabase {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_dowjonesriskandcompliancedatabase");
            }
            set {
                SetOptionSetValue("grm_dowjonesriskandcompliancedatabase", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Expected profit USD/MT</para>
        /// </summary>
        [AttributeLogicalName("grm_expectedprofitusdmt")]
        [DisplayName("Expected profit USD/MT")]
        [Range(-2147483648, 2147483647)]
        public int? grm_expectedprofitusdmt {
            get {
                return GetAttributeValue<int?>("grm_expectedprofitusdmt");
            }
            set {
                SetAttributeValue("grm_expectedprofitusdmt", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Expected trades pr. month</para>
        /// </summary>
        [AttributeLogicalName("grm_expectedtradesprmonth")]
        [DisplayName("Expected trades pr. month")]
        public Account_grm_expectedtradesprmonth? grm_expectedtradesprmonth {
            get {
                return GetOptionSetValue<Account_grm_expectedtradesprmonth>("grm_expectedtradesprmonth");
            }
            set {
                SetOptionSetValue("grm_expectedtradesprmonth", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Final approval</para>
        /// </summary>
        [AttributeLogicalName("grm_finalapprovalacc")]
        [DisplayName("Final approval")]
        public DateTime? grm_finalapprovalacc {
            get {
                return GetAttributeValue<DateTime?>("grm_finalapprovalacc");
            }
            set {
                SetAttributeValue("grm_finalapprovalacc", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Final approval user</para>
        /// </summary>
        [AttributeLogicalName("grm_finalapprovaluserid")]
        [DisplayName("Final approval user")]
        public EntityReference grm_finalapprovaluserid {
            get {
                return GetAttributeValue<EntityReference>("grm_finalapprovaluserid");
            }
            set {
                SetAttributeValue("grm_finalapprovaluserid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Financials</para>
        /// </summary>
        [AttributeLogicalName("grm_financials")]
        [DisplayName("Financials")]
        public Account_grm_financials? grm_financials {
            get {
                return GetOptionSetValue<Account_grm_financials>("grm_financials");
            }
            set {
                SetOptionSetValue("grm_financials", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - Articles of association</para>
        /// </summary>
        [AttributeLogicalName("grm_findingsarticlesofassociation")]
        [DisplayName("Findings - Articles of association")]
        public string grm_findingsarticlesofassociation {
            get {
                return GetAttributeValue<string>("grm_findingsarticlesofassociation");
            }
            set {
                SetAttributeValue("grm_findingsarticlesofassociation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - Certificate of incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_findingscertificateofincorporation")]
        [DisplayName("Findings - Certificate of incorporation")]
        public string grm_findingscertificateofincorporation {
            get {
                return GetAttributeValue<string>("grm_findingscertificateofincorporation");
            }
            set {
                SetAttributeValue("grm_findingscertificateofincorporation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - Certificate of incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_findingscertificateofincorporationhighris")]
        [DisplayName("Findings - Certificate of incorporation")]
        public string grm_findingscertificateofincorporationhighris {
            get {
                return GetAttributeValue<string>("grm_findingscertificateofincorporationhighris");
            }
            set {
                SetAttributeValue("grm_findingscertificateofincorporationhighris", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - clients trading pattern</para>
        /// </summary>
        [AttributeLogicalName("grm_findingsclientstradingpattern")]
        [DisplayName("Findings - clients trading pattern")]
        public string grm_findingsclientstradingpattern {
            get {
                return GetAttributeValue<string>("grm_findingsclientstradingpattern");
            }
            set {
                SetAttributeValue("grm_findingsclientstradingpattern", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - Identity of Directors</para>
        /// </summary>
        [AttributeLogicalName("grm_findingsidentityofdirectors")]
        [DisplayName("Findings - Identity of Directors")]
        public string grm_findingsidentityofdirectors {
            get {
                return GetAttributeValue<string>("grm_findingsidentityofdirectors");
            }
            set {
                SetAttributeValue("grm_findingsidentityofdirectors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - Overview of the ownership structure</para>
        /// </summary>
        [AttributeLogicalName("grm_findingsoverviewoftheownershipstructure")]
        [DisplayName("Findings - Overview of the ownership structure")]
        public string grm_findingsoverviewoftheownershipstructure {
            get {
                return GetAttributeValue<string>("grm_findingsoverviewoftheownershipstructure");
            }
            set {
                SetAttributeValue("grm_findingsoverviewoftheownershipstructure", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - Overview of the ownership structure</para>
        /// </summary>
        [AttributeLogicalName("grm_findingsownershipstructurehighrisk")]
        [DisplayName("Findings - Overview of the ownership structure")]
        public string grm_findingsownershipstructurehighrisk {
            get {
                return GetAttributeValue<string>("grm_findingsownershipstructurehighrisk");
            }
            set {
                SetAttributeValue("grm_findingsownershipstructurehighrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - PEP Screening</para>
        /// </summary>
        [AttributeLogicalName("grm_findingspepscreening")]
        [DisplayName("Findings - PEP Screening")]
        public string grm_findingspepscreening {
            get {
                return GetAttributeValue<string>("grm_findingspepscreening");
            }
            set {
                SetAttributeValue("grm_findingspepscreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - Sign on behalf of the company</para>
        /// </summary>
        [AttributeLogicalName("grm_findingssignonbehalfofthecompany")]
        [DisplayName("Findings - Sign on behalf of the company")]
        public string grm_findingssignonbehalfofthecompany {
            get {
                return GetAttributeValue<string>("grm_findingssignonbehalfofthecompany");
            }
            set {
                SetAttributeValue("grm_findingssignonbehalfofthecompany", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Former Responsible</para>
        /// </summary>
        [AttributeLogicalName("grm_formerresponsible")]
        [DisplayName("Former Responsible")]
        public EntityReference grm_formerresponsible {
            get {
                return GetAttributeValue<EntityReference>("grm_formerresponsible");
            }
            set {
                SetAttributeValue("grm_formerresponsible", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fuel surcharge</para>
        /// </summary>
        [AttributeLogicalName("grm_fuelsurcharge")]
        [DisplayName("Fuel surcharge")]
        public Account_grm_fuelsurcharge? grm_fuelsurcharge {
            get {
                return GetOptionSetValue<Account_grm_fuelsurcharge>("grm_fuelsurcharge");
            }
            set {
                SetOptionSetValue("grm_fuelsurcharge", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Future</para>
        /// </summary>
        [AttributeLogicalName("grm_future")]
        [DisplayName("Future")]
        public bool? grm_future {
            get {
                return GetAttributeValue<bool?>("grm_future");
            }
            set {
                SetAttributeValue("grm_future", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Global Dep.</para>
        /// </summary>
        [AttributeLogicalName("grm_globaldep")]
        [DisplayName("Global Dep.")]
        public Account_grm_globaldep? grm_globaldep {
            get {
                return GetOptionSetValue<Account_grm_globaldep>("grm_globaldep");
            }
            set {
                SetOptionSetValue("grm_globaldep", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: GRM share of hedgin (%)</para>
        /// </summary>
        [AttributeLogicalName("grm_grmshareofhedgin")]
        [DisplayName("GRM share of hedgin (%)")]
        public Account_grm_grmshareofhedgin? grm_grmshareofhedgin {
            get {
                return GetOptionSetValue<Account_grm_grmshareofhedgin>("grm_grmshareofhedgin");
            }
            set {
                SetOptionSetValue("grm_grmshareofhedgin", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Groups</para>
        /// </summary>
        [AttributeLogicalName("grm_groups")]
        [DisplayName("Groups")]
        public IEnumerable<Account_grm_groups> grm_groups {
            get {
                return GetOptionSetCollectionValue<Account_grm_groups>("grm_groups");
            }
            set {
                SetOptionSetCollectionValue("grm_groups", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Guidance on risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_guidanceonriskfactors")]
        [DisplayName("Guidance on risk factors")]
        public string grm_guidanceonriskfactors {
            get {
                return GetAttributeValue<string>("grm_guidanceonriskfactors");
            }
            set {
                SetAttributeValue("grm_guidanceonriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Have we met the client</para>
        /// </summary>
        [AttributeLogicalName("grm_havewemettheclient")]
        [DisplayName("Have we met the client")]
        public bool? grm_havewemettheclient {
            get {
                return GetAttributeValue<bool?>("grm_havewemettheclient");
            }
            set {
                SetAttributeValue("grm_havewemettheclient", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Hedging period - up to</para>
        /// </summary>
        [AttributeLogicalName("grm_hedgingperiodupto")]
        [DisplayName("Hedging period - up to")]
        public Account_grm_hedgingperiodupto? grm_hedgingperiodupto {
            get {
                return GetOptionSetValue<Account_grm_hedgingperiodupto>("grm_hedgingperiodupto");
            }
            set {
                SetOptionSetValue("grm_hedgingperiodupto", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Identity of the Directors</para>
        /// </summary>
        [AttributeLogicalName("grm_identityofthedirectors")]
        [DisplayName("Identity of the Directors")]
        public grm_receiveddone? grm_identityofthedirectors {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_identityofthedirectors");
            }
            set {
                SetOptionSetValue("grm_identityofthedirectors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ID on controlling persons</para>
        /// </summary>
        [AttributeLogicalName("grm_idoncontrollingpersons")]
        [DisplayName("ID on controlling persons")]
        public grm_receiveddone? grm_idoncontrollingpersons {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_idoncontrollingpersons");
            }
            set {
                SetOptionSetValue("grm_idoncontrollingpersons", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ID on controlling persons</para>
        /// </summary>
        [AttributeLogicalName("grm_idoncontrollingpersonshighrisk")]
        [DisplayName("ID on controlling persons")]
        public grm_receiveddone? grm_idoncontrollingpersonshighrisk {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_idoncontrollingpersonshighrisk");
            }
            set {
                SetOptionSetValue("grm_idoncontrollingpersonshighrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Industry - Weigthed</para>
        /// </summary>
        [AttributeLogicalName("grm_industryweigthed")]
        [DisplayName("Industry - Weigthed")]
        public decimal? grm_industryweigthed {
            get {
                return GetAttributeValue<decimal?>("grm_industryweigthed");
            }
            set {
                SetAttributeValue("grm_industryweigthed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Initial approval</para>
        /// </summary>
        [AttributeLogicalName("grm_initialapprovalacc")]
        [DisplayName("Initial approval")]
        public DateTime? grm_initialapprovalacc {
            get {
                return GetAttributeValue<DateTime?>("grm_initialapprovalacc");
            }
            set {
                SetAttributeValue("grm_initialapprovalacc", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Initial approval user</para>
        /// </summary>
        [AttributeLogicalName("grm_initialapprovaluserid")]
        [DisplayName("Initial approval user")]
        public EntityReference grm_initialapprovaluserid {
            get {
                return GetAttributeValue<EntityReference>("grm_initialapprovaluserid");
            }
            set {
                SetAttributeValue("grm_initialapprovaluserid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC complete</para>
        /// </summary>
        [AttributeLogicalName("grm_kyccompleteacc")]
        [DisplayName("KYC complete")]
        public DateTime? grm_kyccompleteacc {
            get {
                return GetAttributeValue<DateTime?>("grm_kyccompleteacc");
            }
            set {
                SetAttributeValue("grm_kyccompleteacc", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Last KYC Update completed on</para>
        /// </summary>
        [AttributeLogicalName("grm_lastkycupdatecompletedon")]
        [DisplayName("Last KYC Update completed on")]
        public DateTime? grm_lastkycupdatecompletedon {
            get {
                return GetAttributeValue<DateTime?>("grm_lastkycupdatecompletedon");
            }
            set {
                SetAttributeValue("grm_lastkycupdatecompletedon", value);
            }
        }
        
        /// <summary>
        /// <para>Time stamp for the last time data was synchronized from Profisee to this account.</para>
        /// <para>Display Name: Last Master Data Sync</para>
        /// </summary>
        [AttributeLogicalName("grm_lastmasterdatasync")]
        [DisplayName("Last Master Data Sync")]
        public DateTime? grm_lastmasterdatasync {
            get {
                return GetAttributeValue<DateTime?>("grm_lastmasterdatasync");
            }
            set {
                SetAttributeValue("grm_lastmasterdatasync", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Legal Country</para>
        /// </summary>
        [AttributeLogicalName("grm_legal_country")]
        [DisplayName("Legal Country")]
        public EntityReference grm_legal_country {
            get {
                return GetAttributeValue<EntityReference>("grm_legal_country");
            }
            set {
                SetAttributeValue("grm_legal_country", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Legal Counterpart</para>
        /// </summary>
        [AttributeLogicalName("grm_legalcounterpartid")]
        [DisplayName("Legal Counterpart")]
        public EntityReference grm_legalcounterpartid {
            get {
                return GetAttributeValue<EntityReference>("grm_legalcounterpartid");
            }
            set {
                SetAttributeValue("grm_legalcounterpartid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Legal Structure - Weigthed</para>
        /// </summary>
        [AttributeLogicalName("grm_legalstructureweigthed")]
        [DisplayName("Legal Structure - Weigthed")]
        public decimal? grm_legalstructureweigthed {
            get {
                return GetAttributeValue<decimal?>("grm_legalstructureweigthed");
            }
            set {
                SetAttributeValue("grm_legalstructureweigthed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: LEI ID</para>
        /// </summary>
        [AttributeLogicalName("grm_leiid")]
        [DisplayName("LEI ID")]
        [MaxLength(100)]
        public string grm_leiid {
            get {
                return GetAttributeValue<string>("grm_leiid");
            }
            set {
                SetAttributeValue("grm_leiid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: LEI status</para>
        /// </summary>
        [AttributeLogicalName("grm_leistatus")]
        [DisplayName("LEI status")]
        public Account_grm_leistatus? grm_leistatus {
            get {
                return GetOptionSetValue<Account_grm_leistatus>("grm_leistatus");
            }
            set {
                SetOptionSetValue("grm_leistatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Management - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_managementweighted")]
        [DisplayName("Management - Weighted")]
        public decimal? grm_managementweighted {
            get {
                return GetAttributeValue<decimal?>("grm_managementweighted");
            }
            set {
                SetAttributeValue("grm_managementweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Master Data ID</para>
        /// </summary>
        [AttributeLogicalName("grm_mdid")]
        [DisplayName("Master Data ID")]
        [MaxLength(100)]
        public string grm_mdid {
            get {
                return GetAttributeValue<string>("grm_mdid");
            }
            set {
                SetAttributeValue("grm_mdid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Met Client - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_metclientweighted")]
        [DisplayName("Met Client - Weighted")]
        public decimal? grm_metclientweighted {
            get {
                return GetAttributeValue<decimal?>("grm_metclientweighted");
            }
            set {
                SetAttributeValue("grm_metclientweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navision ID</para>
        /// </summary>
        [AttributeLogicalName("grm_navisionid")]
        [DisplayName("Navision ID")]
        [MaxLength(100)]
        public string grm_navisionid {
            get {
                return GetAttributeValue<string>("grm_navisionid");
            }
            set {
                SetAttributeValue("grm_navisionid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Oil consumption MT/year</para>
        /// </summary>
        [AttributeLogicalName("grm_oilconsumptionmtyear")]
        [DisplayName("Oil consumption MT/year")]
        public Account_grm_oilconsumptionmtyear? grm_oilconsumptionmtyear {
            get {
                return GetOptionSetValue<Account_grm_oilconsumptionmtyear>("grm_oilconsumptionmtyear");
            }
            set {
                SetOptionSetValue("grm_oilconsumptionmtyear", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Option</para>
        /// </summary>
        [AttributeLogicalName("grm_option")]
        [DisplayName("Option")]
        public bool? grm_option {
            get {
                return GetAttributeValue<bool?>("grm_option");
            }
            set {
                SetAttributeValue("grm_option", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Overview of the ownership structure</para>
        /// </summary>
        [AttributeLogicalName("grm_overviewoftheownershipstructure")]
        [DisplayName("Overview of the ownership structure")]
        public grm_receiveddone? grm_overviewoftheownershipstructure {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_overviewoftheownershipstructure");
            }
            set {
                SetOptionSetValue("grm_overviewoftheownershipstructure", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Overview of the ownership structure</para>
        /// </summary>
        [AttributeLogicalName("grm_overviewoftheownershipstructurehigh")]
        [DisplayName("Overview of the ownership structure")]
        public grm_receiveddone? grm_overviewoftheownershipstructurehigh {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_overviewoftheownershipstructurehigh");
            }
            set {
                SetOptionSetValue("grm_overviewoftheownershipstructurehigh", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Former responsible</para>
        /// </summary>
        [AttributeLogicalName("grm_owentoformerresponsible")]
        [DisplayName("Former responsible")]
        [MaxLength(100)]
        public string grm_owentoformerresponsible {
            get {
                return GetAttributeValue<string>("grm_owentoformerresponsible");
            }
            set {
                SetAttributeValue("grm_owentoformerresponsible", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ownership structure - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_ownershipstructureweighted")]
        [DisplayName("Ownership structure - Weighted")]
        public decimal? grm_ownershipstructureweighted {
            get {
                return GetAttributeValue<decimal?>("grm_ownershipstructureweighted");
            }
            set {
                SetAttributeValue("grm_ownershipstructureweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Owners - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_ownersweighted")]
        [DisplayName("Owners - Weighted")]
        public decimal? grm_ownersweighted {
            get {
                return GetAttributeValue<decimal?>("grm_ownersweighted");
            }
            set {
                SetAttributeValue("grm_ownersweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Adverse Media screening</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckadversemediascreening")]
        [DisplayName("Please check - Adverse Media screening")]
        public string grm_pleasecheckadversemediascreening {
            get {
                return GetAttributeValue<string>("grm_pleasecheckadversemediascreening");
            }
            set {
                SetAttributeValue("grm_pleasecheckadversemediascreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Articles of association</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckarticlesofassociation")]
        [DisplayName("Please check - Articles of association")]
        public string grm_pleasecheckarticlesofassociation {
            get {
                return GetAttributeValue<string>("grm_pleasecheckarticlesofassociation");
            }
            set {
                SetAttributeValue("grm_pleasecheckarticlesofassociation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Certificate of incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckcertificateofincorporation")]
        [DisplayName("Please check - Certificate of incorporation")]
        public string grm_pleasecheckcertificateofincorporation {
            get {
                return GetAttributeValue<string>("grm_pleasecheckcertificateofincorporation");
            }
            set {
                SetAttributeValue("grm_pleasecheckcertificateofincorporation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please Check - Certificate of incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckcertificateofincorporationhigh")]
        [DisplayName("Please Check - Certificate of incorporation")]
        public string grm_pleasecheckcertificateofincorporationhigh {
            get {
                return GetAttributeValue<string>("grm_pleasecheckcertificateofincorporationhigh");
            }
            set {
                SetAttributeValue("grm_pleasecheckcertificateofincorporationhigh", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Clients trading pattern</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckclientstradingpattern")]
        [DisplayName("Please check - Clients trading pattern")]
        public string grm_pleasecheckclientstradingpattern {
            get {
                return GetAttributeValue<string>("grm_pleasecheckclientstradingpattern");
            }
            set {
                SetAttributeValue("grm_pleasecheckclientstradingpattern", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Identity of Directors</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckidentityofdirectors")]
        [DisplayName("Please check - Identity of Directors")]
        public string grm_pleasecheckidentityofdirectors {
            get {
                return GetAttributeValue<string>("grm_pleasecheckidentityofdirectors");
            }
            set {
                SetAttributeValue("grm_pleasecheckidentityofdirectors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - ID on controlling persons</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckidoncontrollingpersons")]
        [DisplayName("Please check - ID on controlling persons")]
        public string grm_pleasecheckidoncontrollingpersons {
            get {
                return GetAttributeValue<string>("grm_pleasecheckidoncontrollingpersons");
            }
            set {
                SetAttributeValue("grm_pleasecheckidoncontrollingpersons", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - ID on controlling persons</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckidoncontrollingpersonshigh")]
        [DisplayName("Please check - ID on controlling persons")]
        public string grm_pleasecheckidoncontrollingpersonshigh {
            get {
                return GetAttributeValue<string>("grm_pleasecheckidoncontrollingpersonshigh");
            }
            set {
                SetAttributeValue("grm_pleasecheckidoncontrollingpersonshigh", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Overview of the ownership structure</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckoverviewoftheownershipstructur")]
        [DisplayName("Please check - Overview of the ownership structure")]
        public string grm_pleasecheckoverviewoftheownershipstructur {
            get {
                return GetAttributeValue<string>("grm_pleasecheckoverviewoftheownershipstructur");
            }
            set {
                SetAttributeValue("grm_pleasecheckoverviewoftheownershipstructur", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please Check - Overview of the ownership structure</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckownershipstructurehighrisk")]
        [DisplayName("Please Check - Overview of the ownership structure")]
        public string grm_pleasecheckownershipstructurehighrisk {
            get {
                return GetAttributeValue<string>("grm_pleasecheckownershipstructurehighrisk");
            }
            set {
                SetAttributeValue("grm_pleasecheckownershipstructurehighrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - PEP Screening</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckpepscreening")]
        [DisplayName("Please check - PEP Screening")]
        public string grm_pleasecheckpepscreening {
            get {
                return GetAttributeValue<string>("grm_pleasecheckpepscreening");
            }
            set {
                SetAttributeValue("grm_pleasecheckpepscreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - PEP screening</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckpepscreeninghighrisk")]
        [DisplayName("Please check - PEP screening")]
        public string grm_pleasecheckpepscreeninghighrisk {
            get {
                return GetAttributeValue<string>("grm_pleasecheckpepscreeninghighrisk");
            }
            set {
                SetAttributeValue("grm_pleasecheckpepscreeninghighrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Proof of residency</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckproofofresidency")]
        [DisplayName("Please check - Proof of residency")]
        public string grm_pleasecheckproofofresidency {
            get {
                return GetAttributeValue<string>("grm_pleasecheckproofofresidency");
            }
            set {
                SetAttributeValue("grm_pleasecheckproofofresidency", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Screen the client</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasecheckscreentheclient")]
        [DisplayName("Please check - Screen the client")]
        public string grm_pleasecheckscreentheclient {
            get {
                return GetAttributeValue<string>("grm_pleasecheckscreentheclient");
            }
            set {
                SetAttributeValue("grm_pleasecheckscreentheclient", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Search for evidence of bearer share</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasechecksearchforevidenceofbearershare")]
        [DisplayName("Please check - Search for evidence of bearer share")]
        public string grm_pleasechecksearchforevidenceofbearershare {
            get {
                return GetAttributeValue<string>("grm_pleasechecksearchforevidenceofbearershare");
            }
            set {
                SetAttributeValue("grm_pleasechecksearchforevidenceofbearershare", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please check - Sign on behalf of the company</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasechecksignonbehalfofthecompany")]
        [DisplayName("Please check - Sign on behalf of the company")]
        public string grm_pleasechecksignonbehalfofthecompany {
            get {
                return GetAttributeValue<string>("grm_pleasechecksignonbehalfofthecompany");
            }
            set {
                SetAttributeValue("grm_pleasechecksignonbehalfofthecompany", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please note - Client risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasenoteclientriskfactors")]
        [DisplayName("Please note - Client risk factors")]
        public string grm_pleasenoteClientriskfactors {
            get {
                return GetAttributeValue<string>("grm_pleasenoteclientriskfactors");
            }
            set {
                SetAttributeValue("grm_pleasenoteclientriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please note - client’s tradin</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasenoteclientstradin")]
        [DisplayName("Please note - client’s tradin")]
        public string grm_pleasenoteclientstradin {
            get {
                return GetAttributeValue<string>("grm_pleasenoteclientstradin");
            }
            set {
                SetAttributeValue("grm_pleasenoteclientstradin", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please note - Contemplated Duration</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasenotecontemplatedduration")]
        [DisplayName("Please note - Contemplated Duration")]
        public string grm_pleasenotecontemplatedduration {
            get {
                return GetAttributeValue<string>("grm_pleasenotecontemplatedduration");
            }
            set {
                SetAttributeValue("grm_pleasenotecontemplatedduration", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please note - Contemplated frequency</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasenotecontemplatedfrequency")]
        [DisplayName("Please note - Contemplated frequency")]
        public string grm_pleasenotecontemplatedfrequency {
            get {
                return GetAttributeValue<string>("grm_pleasenotecontemplatedfrequency");
            }
            set {
                SetAttributeValue("grm_pleasenotecontemplatedfrequency", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please note - expected scope</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasenoteexpectedscope")]
        [DisplayName("Please note - expected scope")]
        public string grm_pleasenoteexpectedscope {
            get {
                return GetAttributeValue<string>("grm_pleasenoteexpectedscope");
            }
            set {
                SetAttributeValue("grm_pleasenoteexpectedscope", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please note - Geographic risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasenotegeographicriskfactors")]
        [DisplayName("Please note - Geographic risk factors")]
        public string grm_pleasenotegeographicriskfactors {
            get {
                return GetAttributeValue<string>("grm_pleasenotegeographicriskfactors");
            }
            set {
                SetAttributeValue("grm_pleasenotegeographicriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Please note - Product Risk</para>
        /// </summary>
        [AttributeLogicalName("grm_pleasenoteproductrisk")]
        [DisplayName("Please note - Product Risk")]
        public string grm_pleasenoteproductRisk {
            get {
                return GetAttributeValue<string>("grm_pleasenoteproductrisk");
            }
            set {
                SetAttributeValue("grm_pleasenoteproductrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Postition</para>
        /// </summary>
        [AttributeLogicalName("grm_postition")]
        [DisplayName("Postition")]
        public Account_grm_postition? grm_postition {
            get {
                return GetOptionSetValue<Account_grm_postition>("grm_postition");
            }
            set {
                SetOptionSetValue("grm_postition", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Potential MT/year</para>
        /// </summary>
        [AttributeLogicalName("grm_potentialmtyear")]
        [DisplayName("Potential MT/year")]
        public Account_grm_potentialmtyear? grm_potentialmtyear {
            get {
                return GetOptionSetValue<Account_grm_potentialmtyear>("grm_potentialmtyear");
            }
            set {
                SetOptionSetValue("grm_potentialmtyear", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Product info given</para>
        /// </summary>
        [AttributeLogicalName("grm_productinfogiven")]
        [DisplayName("Product info given")]
        public bool? grm_productinfogiven {
            get {
                return GetAttributeValue<bool?>("grm_productinfogiven");
            }
            set {
                SetAttributeValue("grm_productinfogiven", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Product type - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_producttypeweighted")]
        [DisplayName("Product type - Weighted")]
        public decimal? grm_producttypeweighted {
            get {
                return GetAttributeValue<decimal?>("grm_producttypeweighted");
            }
            set {
                SetAttributeValue("grm_producttypeweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Proof of residency</para>
        /// </summary>
        [AttributeLogicalName("grm_proofofresidency")]
        [DisplayName("Proof of residency")]
        public grm_receiveddone? grm_proofofresidency {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_proofofresidency");
            }
            set {
                SetOptionSetValue("grm_proofofresidency", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Purpose of account</para>
        /// </summary>
        [AttributeLogicalName("grm_purposeofaccount")]
        [DisplayName("Purpose of account")]
        public Account_grm_purposeofaccount? grm_purposeofaccount {
            get {
                return GetOptionSetValue<Account_grm_purposeofaccount>("grm_purposeofaccount");
            }
            set {
                SetOptionSetValue("grm_purposeofaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Purpose of Account - Weigthed</para>
        /// </summary>
        [AttributeLogicalName("grm_purposeofaccountweigthed")]
        [DisplayName("Purpose of Account - Weigthed")]
        public decimal? grm_purposeofaccountweigthed {
            get {
                return GetAttributeValue<decimal?>("grm_purposeofaccountweigthed");
            }
            set {
                SetAttributeValue("grm_purposeofaccountweigthed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Purpose of hedging</para>
        /// </summary>
        [AttributeLogicalName("grm_purposeofhedging")]
        [DisplayName("Purpose of hedging")]
        public Account_grm_purposeofhedging? grm_purposeofhedging {
            get {
                return GetOptionSetValue<Account_grm_purposeofhedging>("grm_purposeofhedging");
            }
            set {
                SetOptionSetValue("grm_purposeofhedging", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Red Flag</para>
        /// </summary>
        [AttributeLogicalName("grm_redflag")]
        [DisplayName("Red Flag")]
        public Account_grm_redflag? grm_redflag {
            get {
                return GetOptionSetValue<Account_grm_redflag>("grm_redflag");
            }
            set {
                SetOptionSetValue("grm_redflag", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Residual Risk Level</para>
        /// </summary>
        [AttributeLogicalName("grm_residualrisklevel")]
        [DisplayName("Residual Risk Level")]
        public grm_risklevel? grm_residualrisklevel {
            get {
                return GetOptionSetValue<grm_risklevel>("grm_residualrisklevel");
            }
            set {
                SetOptionSetValue("grm_residualrisklevel", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Country of Incorporation - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_risklcountryofincorporationweighted")]
        [DisplayName("Risk Level for Country of Incorporation - Weighted")]
        public decimal? grm_risklcountryofincorporationweighted {
            get {
                return GetAttributeValue<decimal?>("grm_risklcountryofincorporationweighted");
            }
            set {
                SetAttributeValue("grm_risklcountryofincorporationweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevel")]
        [DisplayName("Risk Level")]
        public grm_risklevel? grm_risklevel {
            get {
                return GetOptionSetValue<grm_risklevel>("grm_risklevel");
            }
            set {
                SetOptionSetValue("grm_risklevel", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Country of Incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforcountryofincorporation")]
        [DisplayName("Risk Level for Country of Incorporation")]
        public decimal? grm_risklevelforcountryofincorporation {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforcountryofincorporation");
            }
            set {
                SetAttributeValue("grm_risklevelforcountryofincorporation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Country of Nationality</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforcountryofnationality")]
        [DisplayName("Risk Level for Country of Nationality")]
        public decimal? grm_risklevelforcountryofnationality {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforcountryofnationality");
            }
            set {
                SetAttributeValue("grm_risklevelforcountryofnationality", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Country of Operation</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforcountryofoperation")]
        [DisplayName("Risk Level for Country of Operation")]
        public decimal? grm_risklevelforcountryofoperation {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforcountryofoperation");
            }
            set {
                SetAttributeValue("grm_risklevelforcountryofoperation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Country of Operation - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforcountryofoperationweighted")]
        [DisplayName("Risk Level for Country of Operation - Weighted")]
        public decimal? grm_risklevelforcountryofoperationweighted {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforcountryofoperationweighted");
            }
            set {
                SetAttributeValue("grm_risklevelforcountryofoperationweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Country of Residency</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforcountryofresidency")]
        [DisplayName("Risk Level for Country of Residency")]
        public decimal? grm_risklevelforcountryofresidency {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforcountryofresidency");
            }
            set {
                SetAttributeValue("grm_risklevelforcountryofresidency", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Industry</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforindustry")]
        [DisplayName("Risk Level for Industry")]
        public decimal? grm_risklevelforindustry {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforindustry");
            }
            set {
                SetAttributeValue("grm_risklevelforindustry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Management</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelformanagement")]
        [DisplayName("Risk Level for Management")]
        public decimal? grm_risklevelformanagement {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelformanagement");
            }
            set {
                SetAttributeValue("grm_risklevelformanagement", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Met client</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelformetclient")]
        [DisplayName("Risk Level for Met client")]
        public decimal? grm_risklevelformetclient {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelformetclient");
            }
            set {
                SetAttributeValue("grm_risklevelformetclient", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Owners</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforowners")]
        [DisplayName("Risk Level for Owners")]
        public decimal? grm_risklevelforowners {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforowners");
            }
            set {
                SetAttributeValue("grm_risklevelforowners", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Ownership structure</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforownershipstructure")]
        [DisplayName("Risk Level for Ownership structure")]
        public decimal? grm_risklevelforownershipstructure {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforownershipstructure");
            }
            set {
                SetAttributeValue("grm_risklevelforownershipstructure", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Owners - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforownersweighted")]
        [DisplayName("Risk Level for Owners - Weighted")]
        public decimal? grm_risklevelforownersweighted {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforownersweighted");
            }
            set {
                SetAttributeValue("grm_risklevelforownersweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Product type</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforproducttype")]
        [DisplayName("Risk Level for Product type")]
        public decimal? grm_risklevelforproducttype {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforproducttype");
            }
            set {
                SetAttributeValue("grm_risklevelforproducttype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Product type - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforproducttypeweighted")]
        [DisplayName("Risk Level for Product type - Weighted")]
        public decimal? grm_risklevelforproducttypeweighted {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforproducttypeweighted");
            }
            set {
                SetAttributeValue("grm_risklevelforproducttypeweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Purpose of Account</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforpurposeofaccount")]
        [DisplayName("Risk Level for Purpose of Account")]
        public decimal? grm_risklevelforpurposeofaccount {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforpurposeofaccount");
            }
            set {
                SetAttributeValue("grm_risklevelforpurposeofaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level for Purpose of Account - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevelforpurposeofaccountweighted")]
        [DisplayName("Risk Level for Purpose of Account - Weighted")]
        public decimal? grm_risklevelforpurposeofaccountweighted {
            get {
                return GetAttributeValue<decimal?>("grm_risklevelforpurposeofaccountweighted");
            }
            set {
                SetAttributeValue("grm_risklevelforpurposeofaccountweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk of Legal Structure</para>
        /// </summary>
        [AttributeLogicalName("grm_riskoflegalstructure")]
        [DisplayName("Risk of Legal Structure")]
        public decimal? grm_riskoflegalstructure {
            get {
                return GetAttributeValue<decimal?>("grm_riskoflegalstructure");
            }
            set {
                SetAttributeValue("grm_riskoflegalstructure", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk of Legal Structure - Weighted</para>
        /// </summary>
        [AttributeLogicalName("grm_riskoflegalstructureweighted")]
        [DisplayName("Risk of Legal Structure - Weighted")]
        public decimal? grm_riskoflegalstructureweighted {
            get {
                return GetAttributeValue<decimal?>("grm_riskoflegalstructureweighted");
            }
            set {
                SetAttributeValue("grm_riskoflegalstructureweighted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sanctions screening</para>
        /// </summary>
        [AttributeLogicalName("grm_sanctionsscreening")]
        [DisplayName("Sanctions screening")]
        public grm_receiveddone? grm_sanctionsscreening {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_sanctionsscreening");
            }
            set {
                SetOptionSetValue("grm_sanctionsscreening", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Screen the client</para>
        /// </summary>
        [AttributeLogicalName("grm_screentheclienthighrisk")]
        [DisplayName("Screen the client")]
        public grm_receiveddone? grm_screentheclienthighrisk {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_screentheclienthighrisk");
            }
            set {
                SetOptionSetValue("grm_screentheclienthighrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Search for evidence of bearer shares</para>
        /// </summary>
        [AttributeLogicalName("grm_searchforevidenceofbearershares")]
        [DisplayName("Search for evidence of bearer shares")]
        public grm_receiveddone? grm_searchforevidenceofbearershares {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_searchforevidenceofbearershares");
            }
            set {
                SetOptionSetValue("grm_searchforevidenceofbearershares", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sign on behalf of the company</para>
        /// </summary>
        [AttributeLogicalName("grm_signonbehalfofthecompany")]
        [DisplayName("Sign on behalf of the company")]
        public grm_receiveddone? grm_signonbehalfofthecompany {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_signonbehalfofthecompany");
            }
            set {
                SetOptionSetValue("grm_signonbehalfofthecompany", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Simple Average</para>
        /// </summary>
        [AttributeLogicalName("grm_simpleaverage")]
        [DisplayName("Simple Average")]
        public decimal? grm_simpleaverage {
            get {
                return GetAttributeValue<decimal?>("grm_simpleaverage");
            }
            set {
                SetAttributeValue("grm_simpleaverage", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Swap</para>
        /// </summary>
        [AttributeLogicalName("grm_swap")]
        [DisplayName("Swap")]
        public bool? grm_swap {
            get {
                return GetAttributeValue<bool?>("grm_swap");
            }
            set {
                SetAttributeValue("grm_swap", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Task/Investigation - Geographic risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_taskinvestigationgeographicriskfactors")]
        [DisplayName("Task/Investigation - Geographic risk factors")]
        public string grm_taskInvestigationgeographicriskfactors {
            get {
                return GetAttributeValue<string>("grm_taskinvestigationgeographicriskfactors");
            }
            set {
                SetAttributeValue("grm_taskinvestigationgeographicriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Task/investigation - Client risk factors</para>
        /// </summary>
        [AttributeLogicalName("grm_taskinvestigationclientriskfactors")]
        [DisplayName("Task/investigation - Client risk factors")]
        public string grm_taskinvestigationclientriskfactors {
            get {
                return GetAttributeValue<string>("grm_taskinvestigationclientriskfactors");
            }
            set {
                SetAttributeValue("grm_taskinvestigationclientriskfactors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Task/investigation - client’s relationship</para>
        /// </summary>
        [AttributeLogicalName("grm_taskinvestigationclientsrelationship")]
        [DisplayName("Task/investigation - client’s relationship")]
        public string grm_taskinvestigationclientsrelationship {
            get {
                return GetAttributeValue<string>("grm_taskinvestigationclientsrelationship");
            }
            set {
                SetAttributeValue("grm_taskinvestigationclientsrelationship", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Task/investigation - Contemplated Duration</para>
        /// </summary>
        [AttributeLogicalName("grm_taskinvestigationcontemplatedduration")]
        [DisplayName("Task/investigation - Contemplated Duration")]
        public string grm_taskinvestigationcontemplatedduration {
            get {
                return GetAttributeValue<string>("grm_taskinvestigationcontemplatedduration");
            }
            set {
                SetAttributeValue("grm_taskinvestigationcontemplatedduration", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Task/investigation - expected scope</para>
        /// </summary>
        [AttributeLogicalName("grm_taskinvestigationexpectedscope")]
        [DisplayName("Task/investigation - expected scope")]
        public string grm_taskinvestigationexpectedscope {
            get {
                return GetAttributeValue<string>("grm_taskinvestigationexpectedscope");
            }
            set {
                SetAttributeValue("grm_taskinvestigationexpectedscope", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Task/investigation - Product risk</para>
        /// </summary>
        [AttributeLogicalName("grm_taskinvestigationproductrisk")]
        [DisplayName("Task/investigation - Product risk")]
        public string grm_taskinvestigationproductrisk {
            get {
                return GetAttributeValue<string>("grm_taskinvestigationproductrisk");
            }
            set {
                SetAttributeValue("grm_taskinvestigationproductrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Tenor</para>
        /// </summary>
        [AttributeLogicalName("grm_tenor")]
        [DisplayName("Tenor")]
        public IEnumerable<Account_grm_tenor> grm_tenor {
            get {
                return GetOptionSetCollectionValue<Account_grm_tenor>("grm_tenor");
            }
            set {
                SetOptionSetCollectionValue("grm_tenor", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: test</para>
        /// </summary>
        [AttributeLogicalName("grm_test")]
        [DisplayName("test")]
        public decimal? grm_test {
            get {
                return GetAttributeValue<decimal?>("grm_test");
            }
            set {
                SetAttributeValue("grm_test", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Trade direction</para>
        /// </summary>
        [AttributeLogicalName("grm_tradedirection")]
        [DisplayName("Trade direction")]
        public Account_grm_tradedirection? grm_tradedirection {
            get {
                return GetOptionSetValue<Account_grm_tradedirection>("grm_tradedirection");
            }
            set {
                SetOptionSetValue("grm_tradedirection", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Valid UAE Trade License</para>
        /// </summary>
        [AttributeLogicalName("grm_validuaetradelicense")]
        [DisplayName("Valid UAE Trade License")]
        public grm_receiveddone? grm_validuaetradelicense {
            get {
                return GetOptionSetValue<grm_receiveddone>("grm_validuaetradelicense");
            }
            set {
                SetOptionSetValue("grm_validuaetradelicense", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Weighted Average</para>
        /// </summary>
        [AttributeLogicalName("grm_weightedaverage")]
        [DisplayName("Weighted Average")]
        public decimal? grm_weightedaverage {
            get {
                return GetAttributeValue<decimal?>("grm_weightedaverage");
            }
            set {
                SetAttributeValue("grm_weightedaverage", value);
            }
        }
        
        [RelationshipSchemaName("Account_Tasks")]
        public IEnumerable<Task> Account_Tasks {
            get {
                return GetRelatedEntities<Task>("Account_Tasks", null);
            }
            set {
                SetRelatedEntities("Account_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("account_master_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_master_account {
            get {
                return GetRelatedEntities<Account>("account_master_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_master_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("account_parent_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_parent_account {
            get {
                return GetRelatedEntities<Account>("account_parent_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_parent_account", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("account_master_account", EntityRole.Referencing)]
        public Account Referencingaccount_master_account {
            get {
                return GetRelatedEntity<Account>("account_master_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_master_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("account_parent_account", EntityRole.Referencing)]
        public Account Referencingaccount_parent_account {
            get {
                return GetRelatedEntity<Account>("account_parent_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_parent_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("primarycontactid")]
        [RelationshipSchemaName("account_primary_contact")]
        public Contact account_primary_contact {
            get {
                return GetRelatedEntity<Contact>("account_primary_contact", null);
            }
            set {
                SetRelatedEntity("account_primary_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("bpf_account_new_onboarding")]
        public IEnumerable<new_onboarding> bpf_account_new_onboarding {
            get {
                return GetRelatedEntities<new_onboarding>("bpf_account_new_onboarding", null);
            }
            set {
                SetRelatedEntities("bpf_account_new_onboarding", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_accounts")]
        public BusinessUnit business_unit_accounts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_accounts", null);
            }
            set {
                SetRelatedEntity("business_unit_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_accounts")]
        public IEnumerable<Contact> contact_customer_accounts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntities("contact_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_account_grm_assets")]
        public IEnumerable<grm_assets> grm_account_grm_assets {
            get {
                return GetRelatedEntities<grm_assets>("grm_account_grm_assets", null);
            }
            set {
                SetRelatedEntities("grm_account_grm_assets", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_account_grm_commodities_company")]
        public IEnumerable<grm_commodities> grm_account_grm_commodities_company {
            get {
                return GetRelatedEntities<grm_commodities>("grm_account_grm_commodities_company", null);
            }
            set {
                SetRelatedEntities("grm_account_grm_commodities_company", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_account_grm_kyclog_company")]
        public IEnumerable<grm_kyclog> grm_account_grm_kyclog_company {
            get {
                return GetRelatedEntities<grm_kyclog>("grm_account_grm_kyclog_company", null);
            }
            set {
                SetRelatedEntities("grm_account_grm_kyclog_company", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_account_grm_mifid_company")]
        public IEnumerable<grm_mifid> grm_account_grm_mifid_company {
            get {
                return GetRelatedEntities<grm_mifid>("grm_account_grm_mifid_company", null);
            }
            set {
                SetRelatedEntities("grm_account_grm_mifid_company", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_amlkycrelationship_sourcecompanyid_Ac")]
        public IEnumerable<grm_amlkycrelationship> grm_amlkycrelationship_sourcecompanyid_Ac {
            get {
                return GetRelatedEntities<grm_amlkycrelationship>("grm_amlkycrelationship_sourcecompanyid_Ac", null);
            }
            set {
                SetRelatedEntities("grm_amlkycrelationship_sourcecompanyid_Ac", null, value);
            }
        }
        
        [AttributeLogicalName("grm_legalcounterpartid")]
        [RelationshipSchemaName("grm_businessunit_account_legalcounterpartid")]
        public BusinessUnit grm_businessunit_account_legalcounterpartid {
            get {
                return GetRelatedEntity<BusinessUnit>("grm_businessunit_account_legalcounterpartid", null);
            }
            set {
                SetRelatedEntity("grm_businessunit_account_legalcounterpartid", null, value);
            }
        }
        
        [AttributeLogicalName("grm_country")]
        [RelationshipSchemaName("grm_grm_countries_account_country")]
        public grm_countries grm_grm_countries_account_country {
            get {
                return GetRelatedEntity<grm_countries>("grm_grm_countries_account_country", null);
            }
            set {
                SetRelatedEntity("grm_grm_countries_account_country", null, value);
            }
        }
        
        [AttributeLogicalName("grm_countryofincorporation")]
        [RelationshipSchemaName("grm_grm_countries_account_countryofincorporation")]
        public grm_countries grm_grm_countries_account_countryofincorporation {
            get {
                return GetRelatedEntity<grm_countries>("grm_grm_countries_account_countryofincorporation", null);
            }
            set {
                SetRelatedEntity("grm_grm_countries_account_countryofincorporation", null, value);
            }
        }
        
        [AttributeLogicalName("grm_countryofnationality")]
        [RelationshipSchemaName("grm_grm_countries_account_countryofnationality")]
        public grm_countries grm_grm_countries_account_countryofnationality {
            get {
                return GetRelatedEntity<grm_countries>("grm_grm_countries_account_countryofnationality", null);
            }
            set {
                SetRelatedEntity("grm_grm_countries_account_countryofnationality", null, value);
            }
        }
        
        [AttributeLogicalName("grm_countryofoperation")]
        [RelationshipSchemaName("grm_grm_countries_account_countryofoperation")]
        public grm_countries grm_grm_countries_account_countryofoperation {
            get {
                return GetRelatedEntity<grm_countries>("grm_grm_countries_account_countryofoperation", null);
            }
            set {
                SetRelatedEntity("grm_grm_countries_account_countryofoperation", null, value);
            }
        }
        
        [AttributeLogicalName("grm_legal_country")]
        [RelationshipSchemaName("grm_grm_countries_account_legal_country")]
        public grm_countries grm_grm_countries_account_legal_country {
            get {
                return GetRelatedEntity<grm_countries>("grm_grm_countries_account_legal_country", null);
            }
            set {
                SetRelatedEntity("grm_grm_countries_account_legal_country", null, value);
            }
        }
        
        [AttributeLogicalName("grm_industryid")]
        [RelationshipSchemaName("grm_grm_industry_account")]
        public grm_industry grm_grm_industry_account {
            get {
                return GetRelatedEntity<grm_industry>("grm_grm_industry_account", null);
            }
            set {
                SetRelatedEntity("grm_grm_industry_account", null, value);
            }
        }
        
        [AttributeLogicalName("grm_legalstructureid")]
        [RelationshipSchemaName("grm_grm_legalstructure_account")]
        public grm_legalstructure grm_grm_legalstructure_account {
            get {
                return GetRelatedEntity<grm_legalstructure>("grm_grm_legalstructure_account", null);
            }
            set {
                SetRelatedEntity("grm_grm_legalstructure_account", null, value);
            }
        }
        
        [AttributeLogicalName("grm_ownershipstructureid")]
        [RelationshipSchemaName("grm_grm_ownershipstructure_account")]
        public grm_ownershipstructure grm_grm_ownershipstructure_account {
            get {
                return GetRelatedEntity<grm_ownershipstructure>("grm_grm_ownershipstructure_account", null);
            }
            set {
                SetRelatedEntity("grm_grm_ownershipstructure_account", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_kyc_update_account_Account")]
        public IEnumerable<grm_kyc_update> grm_kyc_update_account_Account {
            get {
                return GetRelatedEntities<grm_kyc_update>("grm_kyc_update_account_Account", null);
            }
            set {
                SetRelatedEntities("grm_kyc_update_account_Account", null, value);
            }
        }
        
        [AttributeLogicalName("grm_finalapprovaluserid")]
        [RelationshipSchemaName("grm_systemuser_account_finalapprovaluserid")]
        public SystemUser grm_systemuser_account_finalapprovaluserid {
            get {
                return GetRelatedEntity<SystemUser>("grm_systemuser_account_finalapprovaluserid", null);
            }
            set {
                SetRelatedEntity("grm_systemuser_account_finalapprovaluserid", null, value);
            }
        }
        
        [AttributeLogicalName("grm_formerresponsible")]
        [RelationshipSchemaName("grm_systemuser_account_formerresponsible")]
        public SystemUser grm_systemuser_account_formerresponsible {
            get {
                return GetRelatedEntity<SystemUser>("grm_systemuser_account_formerresponsible", null);
            }
            set {
                SetRelatedEntity("grm_systemuser_account_formerresponsible", null, value);
            }
        }
        
        [AttributeLogicalName("grm_initialapprovaluserid")]
        [RelationshipSchemaName("grm_systemuser_account_initialapprovaluserid")]
        public SystemUser grm_systemuser_account_initialapprovaluserid {
            get {
                return GetRelatedEntity<SystemUser>("grm_systemuser_account_initialapprovaluserid", null);
            }
            set {
                SetRelatedEntity("grm_systemuser_account_initialapprovaluserid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public SystemUser lk_accountbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public SystemUser lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public SystemUser lk_accountbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public SystemUser lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_accounts")]
        public SystemUser system_user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_accounts", null);
            }
            set {
                SetRelatedEntity("system_user_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_accounts")]
        public SystemUser user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("user_accounts", null);
            }
            set {
                SetRelatedEntity("user_accounts", null, value);
            }
        }
        
        public static Account Retrieve(IOrganizationService service, Guid id, params Expression<Func<Account,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Business, division, or department in the Microsoft Dynamics 365 database.</para>
    /// <para>Display Name: Business Unit</para>
    /// </summary>
    [EntityLogicalName("businessunit")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BusinessUnit : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "businessunit";
        
        public const int EntityTypeCode = 10;
        
        public BusinessUnit() : 
                base(EntityLogicalName) {
        }
        
        public BusinessUnit(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public Guid? BusinessUnitId {
            get {
                return GetAttributeValue<Guid?>("businessunitid");
            }
            set {
                SetId("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public BusinessUnit_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: Bill To City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Bill To City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Country/region name for address 1.</para>
        /// <para>Display Name: Bill To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Bill To Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Bill To Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Bill To Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Bill To Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: Bill To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Bill To ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public BusinessUnit_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: Bill To State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Bill To State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public BusinessUnit_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Ship To City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Ship To City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Country/region name for address 2.</para>
        /// <para>Display Name: Ship To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Ship To Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Ship To Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Ship To Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Ship To Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Ship To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Ship To ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public BusinessUnit_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Ship To State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Ship To State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the business unit.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit cost center.</para>
        /// <para>Display Name: Cost Center</para>
        /// </summary>
        [AttributeLogicalName("costcenter")]
        [DisplayName("Cost Center")]
        [MaxLength(100)]
        public string CostCenter {
            get {
                return GetAttributeValue<string>("costcenter");
            }
            set {
                SetAttributeValue("costcenter", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the business unit.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the business unit was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the businessunit.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Credit limit for the business unit.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public double? CreditLimit {
            get {
                return GetAttributeValue<double?>("creditlimit");
            }
            set {
                SetAttributeValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the business unit.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the business unit.</para>
        /// <para>Display Name: Disable Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disable Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Name of the division to which the business unit belongs.</para>
        /// <para>Display Name: Division</para>
        /// </summary>
        [AttributeLogicalName("divisionname")]
        [DisplayName("Division")]
        [MaxLength(100)]
        public string DivisionName {
            get {
                return GetAttributeValue<string>("divisionname");
            }
            set {
                SetAttributeValue("divisionname", value);
            }
        }
        
        /// <summary>
        /// <para>Email address for the business unit.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the businessunit with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Alternative name under which the business unit can be filed.</para>
        /// <para>Display Name: File as Name</para>
        /// </summary>
        [AttributeLogicalName("fileasname")]
        [DisplayName("File as Name")]
        [MaxLength(100)]
        public string FileAsName {
            get {
                return GetAttributeValue<string>("fileasname");
            }
            set {
                SetAttributeValue("fileasname", value);
            }
        }
        
        /// <summary>
        /// <para>FTP site URL for the business unit.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Inheritance mask for the business unit.</para>
        /// <para>Display Name: Inheritance Mask</para>
        /// </summary>
        [AttributeLogicalName("inheritancemask")]
        [DisplayName("Inheritance Mask")]
        [Range(0, 1000000000)]
        public int? InheritanceMask {
            get {
                return GetAttributeValue<int?>("inheritancemask");
            }
            set {
                SetAttributeValue("inheritancemask", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the business unit is enabled or disabled.</para>
        /// <para>Display Name: Is Disabled</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Is Disabled")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the business unit.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the business unit was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the businessunit.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the business unit.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the parent business unit.</para>
        /// <para>Display Name: Parent Business</para>
        /// </summary>
        [AttributeLogicalName("parentbusinessunitid")]
        [DisplayName("Parent Business")]
        public EntityReference ParentBusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("parentbusinessunitid");
            }
            set {
                SetAttributeValue("parentbusinessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Picture or diagram of the business unit.</para>
        /// <para>Display Name: Picture</para>
        /// </summary>
        [AttributeLogicalName("picture")]
        [DisplayName("Picture")]
        public string Picture {
            get {
                return GetAttributeValue<string>("picture");
            }
            set {
                SetAttributeValue("picture", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Stock exchange on which the business is listed.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Stock Exchange")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Stock exchange ticker symbol for the business unit.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Ticker Symbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the businessunit.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for the business unit. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("utcoffset")]
        [DisplayName("UTC Offset")]
        [Range(-1500, 1500)]
        public int? UTCOffset {
            get {
                return GetAttributeValue<int?>("utcoffset");
            }
            set {
                SetAttributeValue("utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the business unit.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Website URL for the business unit.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether workflow or sales process rules have been suspended.</para>
        /// <para>Display Name: Workflow Suspended</para>
        /// </summary>
        [AttributeLogicalName("workflowsuspended")]
        [DisplayName("Workflow Suspended")]
        public bool? WorkflowSuspended {
            get {
                return GetAttributeValue<bool?>("workflowsuspended");
            }
            set {
                SetAttributeValue("workflowsuspended", value);
            }
        }
        
        [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referenced)]
        public IEnumerable<BusinessUnit> Referencedbusiness_unit_parent_business_unit {
            get {
                return GetRelatedEntities<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("business_unit_parent_business_unit", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentbusinessunitid")]
        [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referencing)]
        public BusinessUnit Referencingbusiness_unit_parent_business_unit {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("business_unit_parent_business_unit", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_accounts")]
        public IEnumerable<Account> business_unit_accounts {
            get {
                return GetRelatedEntities<Account>("business_unit_accounts", null);
            }
            set {
                SetRelatedEntities("business_unit_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_contacts")]
        public IEnumerable<Contact> business_unit_contacts {
            get {
                return GetRelatedEntities<Contact>("business_unit_contacts", null);
            }
            set {
                SetRelatedEntities("business_unit_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_grm_amlkycrelationship")]
        public IEnumerable<grm_amlkycrelationship> business_unit_grm_amlkycrelationship {
            get {
                return GetRelatedEntities<grm_amlkycrelationship>("business_unit_grm_amlkycrelationship", null);
            }
            set {
                SetRelatedEntities("business_unit_grm_amlkycrelationship", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_grm_assets")]
        public IEnumerable<grm_assets> business_unit_grm_assets {
            get {
                return GetRelatedEntities<grm_assets>("business_unit_grm_assets", null);
            }
            set {
                SetRelatedEntities("business_unit_grm_assets", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_grm_clientservice")]
        public IEnumerable<grm_clientservice> business_unit_grm_clientservice {
            get {
                return GetRelatedEntities<grm_clientservice>("business_unit_grm_clientservice", null);
            }
            set {
                SetRelatedEntities("business_unit_grm_clientservice", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_grm_commodities")]
        public IEnumerable<grm_commodities> business_unit_grm_commodities {
            get {
                return GetRelatedEntities<grm_commodities>("business_unit_grm_commodities", null);
            }
            set {
                SetRelatedEntities("business_unit_grm_commodities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_grm_kyc_update")]
        public IEnumerable<grm_kyc_update> business_unit_grm_kyc_update {
            get {
                return GetRelatedEntities<grm_kyc_update>("business_unit_grm_kyc_update", null);
            }
            set {
                SetRelatedEntities("business_unit_grm_kyc_update", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_grm_mifid")]
        public IEnumerable<grm_mifid> business_unit_grm_mifid {
            get {
                return GetRelatedEntities<grm_mifid>("business_unit_grm_mifid", null);
            }
            set {
                SetRelatedEntities("business_unit_grm_mifid", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_grm_mifidproduct")]
        public IEnumerable<grm_mifidproduct> business_unit_grm_mifidproduct {
            get {
                return GetRelatedEntities<grm_mifidproduct>("business_unit_grm_mifidproduct", null);
            }
            set {
                SetRelatedEntities("business_unit_grm_mifidproduct", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_grm_mifidservices")]
        public IEnumerable<grm_mifidservices> business_unit_grm_mifidservices {
            get {
                return GetRelatedEntities<grm_mifidservices>("business_unit_grm_mifidservices", null);
            }
            set {
                SetRelatedEntities("business_unit_grm_mifidservices", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_system_users")]
        public IEnumerable<SystemUser> business_unit_system_users {
            get {
                return GetRelatedEntities<SystemUser>("business_unit_system_users", null);
            }
            set {
                SetRelatedEntities("business_unit_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_task_activities")]
        public IEnumerable<Task> business_unit_task_activities {
            get {
                return GetRelatedEntities<Task>("business_unit_task_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_task_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_businessunit_account_legalcounterpartid")]
        public IEnumerable<Account> grm_businessunit_account_legalcounterpartid {
            get {
                return GetRelatedEntities<Account>("grm_businessunit_account_legalcounterpartid", null);
            }
            set {
                SetRelatedEntities("grm_businessunit_account_legalcounterpartid", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
        public SystemUser lk_businessunit_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunit_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_businessunit_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
        public SystemUser lk_businessunit_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunit_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_businessunit_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_businessunitbase_createdby")]
        public SystemUser lk_businessunitbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunitbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_businessunitbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
        public SystemUser lk_businessunitbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunitbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_businessunitbase_modifiedby", null, value);
            }
        }
        
        public static BusinessUnit Retrieve(IOrganizationService service, Guid id, params Expression<Func<BusinessUnit,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with whom a business unit has a relationship, such as customer, supplier, and colleague.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [EntityLogicalName("contact")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Contact : ExtendedEntity<ContactState, Contact_StatusCode> {
        
        public const string EntityLogicalName = "contact";
        
        public const int EntityTypeCode = 2;
        
        public Contact() : 
                base(EntityLogicalName) {
        }
        
        public Contact(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("contactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the contact is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.</para>
        /// <para>Display Name: Role</para>
        /// </summary>
        [AttributeLogicalName("accountrolecode")]
        [DisplayName("Role")]
        public Contact_AccountRoleCode? AccountRoleCode {
            get {
                return GetOptionSetValue<Contact_AccountRoleCode>("accountrolecode");
            }
            set {
                SetOptionSetValue("accountrolecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Contact_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Address 1: City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Address 1: Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Address 1: Freight Terms")]
        public Contact_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Address 1: Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Address 1: Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Address 1: Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Address 1: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Address 1: Primary Contact Name")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Address 1: State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address 1: Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Contact_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Address 2: Freight Terms")]
        public Contact_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Address 2: Primary Contact Name")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 3.</para>
        /// <para>Display Name: Address 3: ID</para>
        /// </summary>
        [AttributeLogicalName("address3_addressid")]
        [DisplayName("Address 3: ID")]
        public Guid? Address3_AddressId {
            get {
                return GetAttributeValue<Guid?>("address3_addressid");
            }
            set {
                SetAttributeValue("address3_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the third address type.</para>
        /// <para>Display Name: Address 3: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address3_addresstypecode")]
        [DisplayName("Address 3: Address Type")]
        public Contact_Address3_AddressTypeCode? Address3_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address3_AddressTypeCode>("address3_addresstypecode");
            }
            set {
                SetOptionSetValue("address3_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the 3rd address.</para>
        /// <para>Display Name: Address 3: City</para>
        /// </summary>
        [AttributeLogicalName("address3_city")]
        [DisplayName("Address 3: City")]
        [MaxLength(80)]
        public string Address3_City {
            get {
                return GetAttributeValue<string>("address3_city");
            }
            set {
                SetAttributeValue("address3_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete third address.</para>
        /// <para>Display Name: Address 3</para>
        /// </summary>
        [AttributeLogicalName("address3_composite")]
        [DisplayName("Address 3")]
        public string Address3_Composite {
            get {
                return GetAttributeValue<string>("address3_composite");
            }
        }
        
        /// <summary>
        /// <para>the country or region for the 3rd address.</para>
        /// <para>Display Name: Address3: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address3_country")]
        [DisplayName("Address3: Country/Region")]
        [MaxLength(80)]
        public string Address3_Country {
            get {
                return GetAttributeValue<string>("address3_country");
            }
            set {
                SetAttributeValue("address3_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the third address.</para>
        /// <para>Display Name: Address 3: County</para>
        /// </summary>
        [AttributeLogicalName("address3_county")]
        [DisplayName("Address 3: County")]
        [MaxLength(50)]
        public string Address3_County {
            get {
                return GetAttributeValue<string>("address3_county");
            }
            set {
                SetAttributeValue("address3_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the third address.</para>
        /// <para>Display Name: Address 3: Fax</para>
        /// </summary>
        [AttributeLogicalName("address3_fax")]
        [DisplayName("Address 3: Fax")]
        [MaxLength(50)]
        public string Address3_Fax {
            get {
                return GetAttributeValue<string>("address3_fax");
            }
            set {
                SetAttributeValue("address3_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the third address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 3: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address3_freighttermscode")]
        [DisplayName("Address 3: Freight Terms")]
        public Contact_Address3_FreightTermsCode? Address3_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address3_FreightTermsCode>("address3_freighttermscode");
            }
            set {
                SetOptionSetValue("address3_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address3_latitude")]
        [DisplayName("Address 3: Latitude")]
        public double? Address3_Latitude {
            get {
                return GetAttributeValue<double?>("address3_latitude");
            }
            set {
                SetAttributeValue("address3_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>the first line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address3_line1")]
        [DisplayName("Address3: Street 1")]
        [MaxLength(250)]
        public string Address3_Line1 {
            get {
                return GetAttributeValue<string>("address3_line1");
            }
            set {
                SetAttributeValue("address3_line1", value);
            }
        }
        
        /// <summary>
        /// <para>the second line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address3_line2")]
        [DisplayName("Address3: Street 2")]
        [MaxLength(250)]
        public string Address3_Line2 {
            get {
                return GetAttributeValue<string>("address3_line2");
            }
            set {
                SetAttributeValue("address3_line2", value);
            }
        }
        
        /// <summary>
        /// <para>the third line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address3_line3")]
        [DisplayName("Address3: Street 3")]
        [MaxLength(250)]
        public string Address3_Line3 {
            get {
                return GetAttributeValue<string>("address3_line3");
            }
            set {
                SetAttributeValue("address3_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address3_longitude")]
        [DisplayName("Address 3: Longitude")]
        public double? Address3_Longitude {
            get {
                return GetAttributeValue<double?>("address3_longitude");
            }
            set {
                SetAttributeValue("address3_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the third address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 3: Name</para>
        /// </summary>
        [AttributeLogicalName("address3_name")]
        [DisplayName("Address 3: Name")]
        [MaxLength(200)]
        public string Address3_Name {
            get {
                return GetAttributeValue<string>("address3_name");
            }
            set {
                SetAttributeValue("address3_name", value);
            }
        }
        
        /// <summary>
        /// <para>the post office box number of the 3rd address.</para>
        /// <para>Display Name: Address 3: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address3_postofficebox")]
        [DisplayName("Address 3: Post Office Box")]
        [MaxLength(20)]
        public string Address3_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address3_postofficebox");
            }
            set {
                SetAttributeValue("address3_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>the ZIP Code or postal code for the 3rd address.</para>
        /// <para>Display Name: Address3: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address3_postalcode")]
        [DisplayName("Address3: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address3_PostalCode {
            get {
                return GetAttributeValue<string>("address3_postalcode");
            }
            set {
                SetAttributeValue("address3_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's third address.</para>
        /// <para>Display Name: Address 3: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address3_primarycontactname")]
        [DisplayName("Address 3: Primary Contact Name")]
        [MaxLength(100)]
        public string Address3_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address3_primarycontactname");
            }
            set {
                SetAttributeValue("address3_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 3: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address3_shippingmethodcode")]
        [DisplayName("Address 3: Shipping Method")]
        public Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address3_ShippingMethodCode>("address3_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address3_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>the state or province of the third address.</para>
        /// <para>Display Name: Address3: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address3_stateorprovince")]
        [DisplayName("Address3: State/Province")]
        [MaxLength(50)]
        public string Address3_StateOrProvince {
            get {
                return GetAttributeValue<string>("address3_stateorprovince");
            }
            set {
                SetAttributeValue("address3_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone1</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone1")]
        [DisplayName("Address 3: Telephone1")]
        [MaxLength(50)]
        public string Address3_Telephone1 {
            get {
                return GetAttributeValue<string>("address3_telephone1");
            }
            set {
                SetAttributeValue("address3_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone2</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone2")]
        [DisplayName("Address 3: Telephone2")]
        [MaxLength(50)]
        public string Address3_Telephone2 {
            get {
                return GetAttributeValue<string>("address3_telephone2");
            }
            set {
                SetAttributeValue("address3_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 3: Telephone3</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone3")]
        [DisplayName("Address 3: Telephone3")]
        [MaxLength(50)]
        public string Address3_Telephone3 {
            get {
                return GetAttributeValue<string>("address3_telephone3");
            }
            set {
                SetAttributeValue("address3_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 3: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address3_upszone")]
        [DisplayName("Address 3: UPS Zone")]
        [MaxLength(4)]
        public string Address3_UPSZone {
            get {
                return GetAttributeValue<string>("address3_upszone");
            }
            set {
                SetAttributeValue("address3_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 3: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address3_utcoffset")]
        [DisplayName("Address 3: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address3_UTCOffset {
            get {
                return GetAttributeValue<int?>("address3_utcoffset");
            }
            set {
                SetAttributeValue("address3_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aging 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aging 30 (Base)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aging 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aging 60 (Base)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aging 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aging 90 (Base)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Anniversary</para>
        /// </summary>
        [AttributeLogicalName("anniversary")]
        [DisplayName("Anniversary")]
        public DateTime? Anniversary {
            get {
                return GetAttributeValue<DateTime?>("anniversary");
            }
            set {
                SetAttributeValue("anniversary", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's annual income for use in profiling and financial analysis.</para>
        /// <para>Display Name: Annual Income</para>
        /// </summary>
        [AttributeLogicalName("annualincome")]
        [DisplayName("Annual Income")]
        public decimal? AnnualIncome {
            get {
                return GetMoneyValue("annualincome");
            }
            set {
                SetMoneyValue("annualincome", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Income (Base)</para>
        /// </summary>
        [AttributeLogicalName("annualincome_base")]
        [DisplayName("Annual Income (Base)")]
        public decimal? AnnualIncome_Base {
            get {
                return GetMoneyValue("annualincome_base");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's assistant.</para>
        /// <para>Display Name: Assistant</para>
        /// </summary>
        [AttributeLogicalName("assistantname")]
        [DisplayName("Assistant")]
        [MaxLength(100)]
        public string AssistantName {
            get {
                return GetAttributeValue<string>("assistantname");
            }
            set {
                SetAttributeValue("assistantname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's assistant.</para>
        /// <para>Display Name: Assistant Phone</para>
        /// </summary>
        [AttributeLogicalName("assistantphone")]
        [DisplayName("Assistant Phone")]
        [MaxLength(50)]
        public string AssistantPhone {
            get {
                return GetAttributeValue<string>("assistantphone");
            }
            set {
                SetAttributeValue("assistantphone", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the contact's birthday for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Birthday</para>
        /// </summary>
        [AttributeLogicalName("birthdate")]
        [DisplayName("Birthday")]
        public DateTime? BirthDate {
            get {
                return GetAttributeValue<DateTime?>("birthdate");
            }
            set {
                SetAttributeValue("birthdate", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second business phone number for this contact.</para>
        /// <para>Display Name: Business Phone 2</para>
        /// </summary>
        [AttributeLogicalName("business2")]
        [DisplayName("Business Phone 2")]
        [MaxLength(50)]
        public string Business2 {
            get {
                return GetAttributeValue<string>("business2");
            }
            set {
                SetAttributeValue("business2", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Image of the Business Card</para>
        /// <para>Display Name: Business Card</para>
        /// </summary>
        [AttributeLogicalName("businesscard")]
        [DisplayName("Business Card")]
        public string BusinessCard {
            get {
                return GetAttributeValue<string>("businesscard");
            }
            set {
                SetAttributeValue("businesscard", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Business Card Control Properties.</para>
        /// <para>Display Name: BusinessCardAttributes</para>
        /// </summary>
        [AttributeLogicalName("businesscardattributes")]
        [DisplayName("BusinessCardAttributes")]
        [MaxLength(4000)]
        public string BusinessCardAttributes {
            get {
                return GetAttributeValue<string>("businesscardattributes");
            }
            set {
                SetAttributeValue("businesscardattributes", value);
            }
        }
        
        /// <summary>
        /// <para>Type a callback phone number for this contact.</para>
        /// <para>Display Name: Callback Number</para>
        /// </summary>
        [AttributeLogicalName("callback")]
        [DisplayName("Callback Number")]
        [MaxLength(50)]
        public string Callback {
            get {
                return GetAttributeValue<string>("callback");
            }
            set {
                SetAttributeValue("callback", value);
            }
        }
        
        /// <summary>
        /// <para>Type the names of the contact's children for reference in communications and client programs.</para>
        /// <para>Display Name: Children's Names</para>
        /// </summary>
        [AttributeLogicalName("childrensnames")]
        [DisplayName("Children\'s Names")]
        [MaxLength(255)]
        public string ChildrensNames {
            get {
                return GetAttributeValue<string>("childrensnames");
            }
            set {
                SetAttributeValue("childrensnames", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company phone of the contact.</para>
        /// <para>Display Name: Company Phone</para>
        /// </summary>
        [AttributeLogicalName("company")]
        [DisplayName("Company Phone")]
        [MaxLength(50)]
        public string Company {
            get {
                return GetAttributeValue<string>("company");
            }
            set {
                SetAttributeValue("company", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Credit Limit (Base)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Credit Hold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size of the contact's company for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Customer Size")]
        public Contact_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Contact_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the contact and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationship Type")]
        public Contact_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Contact_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the default price list associated with the contact to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("defaultpricelevelid")]
        [DisplayName("Price List")]
        public EntityReference DefaultPriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("defaultpricelevelid");
            }
            set {
                SetAttributeValue("defaultpricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the department or business unit where the contact works in the parent company or business.</para>
        /// <para>Display Name: Department</para>
        /// </summary>
        [AttributeLogicalName("department")]
        [DisplayName("Department")]
        [MaxLength(100)]
        public string Department {
            get {
                return GetAttributeValue<string>("department");
            }
            set {
                SetAttributeValue("department", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the contact, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Do not allow Bulk Mails")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Send Marketing Materials")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the contact.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the contact.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Email Address 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the contact.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contact's highest level of education for use in segmentation and analysis.</para>
        /// <para>Display Name: Education</para>
        /// </summary>
        [AttributeLogicalName("educationcode")]
        [DisplayName("Education")]
        public Contact_EducationCode? EducationCode {
            get {
                return GetOptionSetValue<Contact_EducationCode>("educationcode");
            }
            set {
                SetOptionSetValue("educationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(50)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Identifier for an external user.</para>
        /// <para>Display Name: External User Identifier</para>
        /// </summary>
        [AttributeLogicalName("externaluseridentifier")]
        [DisplayName("External User Identifier")]
        [MaxLength(50)]
        public string ExternalUserIdentifier {
            get {
                return GetAttributeValue<string>("externaluseridentifier");
            }
            set {
                SetAttributeValue("externaluseridentifier", value);
            }
        }
        
        /// <summary>
        /// <para>Select the marital status of the contact for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Marital Status</para>
        /// </summary>
        [AttributeLogicalName("familystatuscode")]
        [DisplayName("Marital Status")]
        public Contact_FamilyStatusCode? FamilyStatusCode {
            get {
                return GetOptionSetValue<Contact_FamilyStatusCode>("familystatuscode");
            }
            set {
                SetOptionSetValue("familystatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the contact.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(50)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the contact's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(160)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Gender</para>
        /// </summary>
        [AttributeLogicalName("gendercode")]
        [DisplayName("Gender")]
        public Contact_GenderCode? GenderCode {
            get {
                return GetOptionSetValue<Contact_GenderCode>("gendercode");
            }
            set {
                SetOptionSetValue("gendercode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the passport number or other government ID for the contact for use in documents or reports.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(50)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact has any children for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Has Children</para>
        /// </summary>
        [AttributeLogicalName("haschildrencode")]
        [DisplayName("Has Children")]
        public Contact_HasChildrenCode? HasChildrenCode {
            get {
                return GetOptionSetValue<Contact_HasChildrenCode>("haschildrencode");
            }
            set {
                SetOptionSetValue("haschildrencode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second home phone number for this contact.</para>
        /// <para>Display Name: Home Phone 2</para>
        /// </summary>
        [AttributeLogicalName("home2")]
        [DisplayName("Home Phone 2")]
        [MaxLength(50)]
        public string Home2 {
            get {
                return GetAttributeValue<string>("home2");
            }
            set {
                SetAttributeValue("home2", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.</para>
        /// <para>Display Name: Back Office Customer</para>
        /// </summary>
        [AttributeLogicalName("isbackofficecustomer")]
        [DisplayName("Back Office Customer")]
        public bool? IsBackofficeCustomer {
            get {
                return GetAttributeValue<bool?>("isbackofficecustomer");
            }
            set {
                SetAttributeValue("isbackofficecustomer", value);
            }
        }
        
        /// <summary>
        /// <para>Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(50)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the contact was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Date Included in Campaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary marketing source that directed the contact to your organization.</para>
        /// <para>Display Name: Lead Source</para>
        /// </summary>
        [AttributeLogicalName("leadsourcecode")]
        [DisplayName("Lead Source")]
        public Contact_LeadSourceCode? LeadSourceCode {
            get {
                return GetOptionSetValue<Contact_LeadSourceCode>("leadsourcecode");
            }
            set {
                SetOptionSetValue("leadsourcecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("managername")]
        [DisplayName("Manager")]
        [MaxLength(100)]
        public string ManagerName {
            get {
                return GetAttributeValue<string>("managername");
            }
            set {
                SetAttributeValue("managername", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's manager.</para>
        /// <para>Display Name: Manager Phone</para>
        /// </summary>
        [AttributeLogicalName("managerphone")]
        [DisplayName("Manager Phone")]
        [MaxLength(50)]
        public string ManagerPhone {
            get {
                return GetAttributeValue<string>("managerphone");
            }
            set {
                SetAttributeValue("managerphone", value);
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Marketing Only")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the master contact for merge.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with a master contact.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's middle name or initial to make sure the contact is addressed correctly.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type the mobile phone number for the contact.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(50)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's nickname.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(100)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of children the contact has for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: No. of Children</para>
        /// </summary>
        [AttributeLogicalName("numberofchildren")]
        [DisplayName("No. of Children")]
        [Range(0, 1000000000)]
        public int? NumberOfChildren {
            get {
                return GetAttributeValue<int?>("numberofchildren");
            }
            set {
                SetAttributeValue("numberofchildren", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Shows the lead that the contact was created if the contact was created by converting a lead in Microsoft Dynamics 365. This is used to relate the contact to the data on the originating lead for use in reporting and analytics.</para>
        /// <para>Display Name: Originating Lead</para>
        /// </summary>
        [AttributeLogicalName("originatingleadid")]
        [DisplayName("Originating Lead")]
        public EntityReference OriginatingLeadId {
            get {
                return GetAttributeValue<EntityReference>("originatingleadid");
            }
            set {
                SetAttributeValue("originatingleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the contact.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the contact.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the contact.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the pager number for the contact.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("pager")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Pager {
            get {
                return GetAttributeValue<string>("pager");
            }
            set {
                SetAttributeValue("pager", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent contact.</para>
        /// <para>Display Name: Parent Contact</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Parent Contact")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
        }
        
        /// <summary>
        /// <para>Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.</para>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("parentcustomerid")]
        [DisplayName("Company Name")]
        public EntityReference ParentCustomerId {
            get {
                return GetAttributeValue<EntityReference>("parentcustomerid");
            }
            set {
                SetAttributeValue("parentcustomerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Contact_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Contact_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Preferred Day")]
        public Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Preferred Time")]
        public Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Preferred Method of Contact")]
        public Contact_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Contact_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the contact's preferred service facility or equipment to make sure services are scheduled correctly for the customer.</para>
        /// <para>Display Name: Preferred Facility/Equipment</para>
        /// </summary>
        [AttributeLogicalName("preferredequipmentid")]
        [DisplayName("Preferred Facility/Equipment")]
        public EntityReference PreferredEquipmentId {
            get {
                return GetAttributeValue<EntityReference>("preferredequipmentid");
            }
            set {
                SetAttributeValue("preferredequipmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the contact's preferred service to make sure services are scheduled correctly for the customer.</para>
        /// <para>Display Name: Preferred Service</para>
        /// </summary>
        [AttributeLogicalName("preferredserviceid")]
        [DisplayName("Preferred Service")]
        public EntityReference PreferredServiceId {
            get {
                return GetAttributeValue<EntityReference>("preferredserviceid");
            }
            set {
                SetAttributeValue("preferredserviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Preferred User")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Contact record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(100)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Contact_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.</para>
        /// <para>Display Name: Spouse/Partner Name</para>
        /// </summary>
        [AttributeLogicalName("spousesname")]
        [DisplayName("Spouse/Partner Name")]
        [MaxLength(100)]
        public string SpousesName {
            get {
                return GetAttributeValue<string>("spousesname");
            }
            set {
                SetAttributeValue("spousesname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ContactState? StateCode {
            get {
                return GetOptionSetValue<ContactState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contact's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Contact_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Contact_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Suffix</para>
        /// </summary>
        [AttributeLogicalName("suffix")]
        [DisplayName("Suffix")]
        [MaxLength(10)]
        public string Suffix {
            get {
                return GetAttributeValue<string>("suffix");
            }
            set {
                SetAttributeValue("suffix", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this contact.</para>
        /// <para>Display Name: Business Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Business Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this contact.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this contact.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the contact for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Territory")]
        public Contact_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Contact_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the contact record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the contact.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's professional or personal website or blog URL.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(150)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(450)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(150)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(150)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Address ID Type</para>
        /// </summary>
        [AttributeLogicalName("grm_addressidtype")]
        [DisplayName("Address ID Type")]
        [MaxLength(100)]
        public string grm_addressidtype {
            get {
                return GetAttributeValue<string>("grm_addressidtype");
            }
            set {
                SetAttributeValue("grm_addressidtype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("grm_country")]
        [DisplayName("Country")]
        public EntityReference grm_country {
            get {
                return GetAttributeValue<EntityReference>("grm_country");
            }
            set {
                SetAttributeValue("grm_country", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Direct phone 2</para>
        /// </summary>
        [AttributeLogicalName("grm_directphone2")]
        [DisplayName("Direct phone 2")]
        [MaxLength(100)]
        public string grm_directphone2 {
            get {
                return GetAttributeValue<string>("grm_directphone2");
            }
            set {
                SetAttributeValue("grm_directphone2", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Email 2</para>
        /// </summary>
        [AttributeLogicalName("grm_email2")]
        [DisplayName("Email 2")]
        [MaxLength(100)]
        public string grm_email2 {
            get {
                return GetAttributeValue<string>("grm_email2");
            }
            set {
                SetAttributeValue("grm_email2", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Greetings</para>
        /// </summary>
        [AttributeLogicalName("grm_greetings")]
        [DisplayName("Greetings")]
        public Contact_grm_greetings? grm_greetings {
            get {
                return GetOptionSetValue<Contact_grm_greetings>("grm_greetings");
            }
            set {
                SetOptionSetValue("grm_greetings", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ICE Chat</para>
        /// </summary>
        [AttributeLogicalName("grm_icechat")]
        [DisplayName("ICE Chat")]
        [MaxLength(100)]
        public string grm_icechat {
            get {
                return GetAttributeValue<string>("grm_icechat");
            }
            set {
                SetAttributeValue("grm_icechat", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: PEP?</para>
        /// </summary>
        [AttributeLogicalName("grm_pep")]
        [DisplayName("PEP?")]
        public Contact_grm_pep? grm_pep {
            get {
                return GetOptionSetValue<Contact_grm_pep>("grm_pep");
            }
            set {
                SetOptionSetValue("grm_pep", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Reuters</para>
        /// </summary>
        [AttributeLogicalName("grm_reuters")]
        [DisplayName("Reuters")]
        [MaxLength(100)]
        public string grm_reuters {
            get {
                return GetAttributeValue<string>("grm_reuters");
            }
            set {
                SetAttributeValue("grm_reuters", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevel")]
        [DisplayName("Risk Level")]
        public decimal? grm_risklevel {
            get {
                return GetAttributeValue<decimal?>("grm_risklevel");
            }
            set {
                SetAttributeValue("grm_risklevel", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Skype</para>
        /// </summary>
        [AttributeLogicalName("grm_skype")]
        [DisplayName("Skype")]
        [MaxLength(100)]
        public string grm_skype {
            get {
                return GetAttributeValue<string>("grm_skype");
            }
            set {
                SetAttributeValue("grm_skype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Whatsapp</para>
        /// </summary>
        [AttributeLogicalName("grm_whatsapp")]
        [DisplayName("Whatsapp")]
        [MaxLength(100)]
        public string grm_whatsapp {
            get {
                return GetAttributeValue<string>("grm_whatsapp");
            }
            set {
                SetAttributeValue("grm_whatsapp", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether contact is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Whether or not the contact belongs to the associated account</para>
        /// <para>Display Name: Not at Company Flag</para>
        /// </summary>
        [AttributeLogicalName("msdyn_orgchangestatus")]
        [DisplayName("Not at Company Flag")]
        public Contact_msdyn_orgchangestatus? msdyn_orgchangestatus {
            get {
                return GetOptionSetValue<Contact_msdyn_orgchangestatus>("msdyn_orgchangestatus");
            }
            set {
                SetOptionSetValue("msdyn_orgchangestatus", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: parent_contactid</para>
        /// </summary>
        [AttributeLogicalName("parent_contactid")]
        [DisplayName("parent_contactid")]
        public EntityReference parent_contactid {
            get {
                return GetAttributeValue<EntityReference>("parent_contactid");
            }
            set {
                SetAttributeValue("parent_contactid", value);
            }
        }
        
        [RelationshipSchemaName("Contact_Tasks")]
        public IEnumerable<Task> Contact_Tasks {
            get {
                return GetRelatedEntities<Task>("Contact_Tasks", null);
            }
            set {
                SetRelatedEntities("Contact_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_customer_contacts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_contacts", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_customer_contacts", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_master_contact {
            get {
                return GetRelatedEntities<Contact>("contact_master_contact", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_master_contact", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("contact_parent_contact", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_parent_contact {
            get {
                return GetRelatedEntities<Contact>("contact_parent_contact", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_parent_contact", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referencing)]
        public Contact Referencingcontact_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("contact_customer_contacts", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_customer_contacts", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referencing)]
        public Contact Referencingcontact_master_contact {
            get {
                return GetRelatedEntity<Contact>("contact_master_contact", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_master_contact", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parent_contactid")]
        [RelationshipSchemaName("contact_parent_contact", EntityRole.Referencing)]
        public Contact Referencingcontact_parent_contact {
            get {
                return GetRelatedEntity<Contact>("contact_parent_contact", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_parent_contact", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("account_primary_contact")]
        public IEnumerable<Account> account_primary_contact {
            get {
                return GetRelatedEntities<Account>("account_primary_contact", null);
            }
            set {
                SetRelatedEntities("account_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_contacts")]
        public BusinessUnit business_unit_contacts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_contacts", null);
            }
            set {
                SetRelatedEntity("business_unit_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_accounts")]
        public Account contact_customer_accounts {
            get {
                return GetRelatedEntity<Account>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntity("contact_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("contact_owning_user")]
        public SystemUser contact_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("contact_owning_user", null);
            }
            set {
                SetRelatedEntity("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_amlkycrelationship_contactid_Contact")]
        public IEnumerable<grm_amlkycrelationship> grm_amlkycrelationship_contactid_Contact {
            get {
                return GetRelatedEntities<grm_amlkycrelationship>("grm_amlkycrelationship_contactid_Contact", null);
            }
            set {
                SetRelatedEntities("grm_amlkycrelationship_contactid_Contact", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_contact_grm_mifid_primarycontact")]
        public IEnumerable<grm_mifid> grm_contact_grm_mifid_primarycontact {
            get {
                return GetRelatedEntities<grm_mifid>("grm_contact_grm_mifid_primarycontact", null);
            }
            set {
                SetRelatedEntities("grm_contact_grm_mifid_primarycontact", null, value);
            }
        }
        
        [AttributeLogicalName("grm_country")]
        [RelationshipSchemaName("grm_grm_countries_contact_country")]
        public grm_countries grm_grm_countries_contact_country {
            get {
                return GetRelatedEntity<grm_countries>("grm_grm_countries_contact_country", null);
            }
            set {
                SetRelatedEntity("grm_grm_countries_contact_country", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public SystemUser lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public SystemUser lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public SystemUser lk_contactbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public SystemUser lk_contactbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_contacts")]
        public SystemUser system_user_contacts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_contacts", null);
            }
            set {
                SetRelatedEntity("system_user_contacts", null, value);
            }
        }
        
        public static Contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contact,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Information about products and their pricing information.</para>
    /// <para>Display Name: Product</para>
    /// </summary>
    [EntityLogicalName("product")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Product : ExtendedEntity<ProductState, Product_StatusCode> {
        
        public const string EntityLogicalName = "product";
        
        public const int EntityTypeCode = 1024;
        
        public Product() : 
                base(EntityLogicalName) {
        }
        
        public Product(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("productid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("productid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the product.</para>
        /// <para>Display Name: Product</para>
        /// </summary>
        [AttributeLogicalName("productid")]
        [DisplayName("Product")]
        public Guid? ProductId {
            get {
                return GetAttributeValue<Guid?>("productid");
            }
            set {
                SetId("productid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the product.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the product.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Current cost for the product item. Used in price calculations.</para>
        /// <para>Display Name: Current Cost</para>
        /// </summary>
        [AttributeLogicalName("currentcost")]
        [DisplayName("Current Cost")]
        public decimal? CurrentCost {
            get {
                return GetMoneyValue("currentcost");
            }
            set {
                SetMoneyValue("currentcost", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Current Cost in base currency.</para>
        /// <para>Display Name: Current Cost (Base)</para>
        /// </summary>
        [AttributeLogicalName("currentcost_base")]
        [DisplayName("Current Cost (Base)")]
        public decimal? CurrentCost_Base {
            get {
                return GetMoneyValue("currentcost_base");
            }
        }
        
        /// <summary>
        /// <para>Internal Use Only</para>
        /// <para>Display Name: Internal Use Only</para>
        /// </summary>
        [AttributeLogicalName("dmtimportstate")]
        [DisplayName("Internal Use Only")]
        [Range(-2147483648, 2147483647)]
        public int? DMTImportState {
            get {
                return GetAttributeValue<int?>("dmtimportstate");
            }
            set {
                SetAttributeValue("dmtimportstate", value);
            }
        }
        
        /// <summary>
        /// <para>Default unit for the product.</para>
        /// <para>Display Name: Default Unit</para>
        /// </summary>
        [AttributeLogicalName("defaultuomid")]
        [DisplayName("Default Unit")]
        public EntityReference DefaultUoMId {
            get {
                return GetAttributeValue<EntityReference>("defaultuomid");
            }
            set {
                SetAttributeValue("defaultuomid", value);
            }
        }
        
        /// <summary>
        /// <para>Default unit group for the product.</para>
        /// <para>Display Name: Unit Group</para>
        /// </summary>
        [AttributeLogicalName("defaultuomscheduleid")]
        [DisplayName("Unit Group")]
        public EntityReference DefaultUoMScheduleId {
            get {
                return GetAttributeValue<EntityReference>("defaultuomscheduleid");
            }
            set {
                SetAttributeValue("defaultuomscheduleid", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the product.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the product with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Hierarchy path of the product.</para>
        /// <para>Display Name: Hierarchy Path</para>
        /// </summary>
        [AttributeLogicalName("hierarchypath")]
        [DisplayName("Hierarchy Path")]
        [MaxLength(450)]
        public string HierarchyPath {
            get {
                return GetAttributeValue<string>("hierarchypath");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether the product is a kit.</para>
        /// <para>Display Name: Is Kit</para>
        /// </summary>
        [AttributeLogicalName("iskit")]
        [DisplayName("Is Kit")]
        public bool? IsKit {
            get {
                return GetAttributeValue<bool?>("iskit");
            }
            set {
                SetAttributeValue("iskit", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Is Reparented</para>
        /// </summary>
        [AttributeLogicalName("isreparented")]
        [DisplayName("Is Reparented")]
        public bool? IsReparented {
            get {
                return GetAttributeValue<bool?>("isreparented");
            }
            set {
                SetAttributeValue("isreparented", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the product is a stock item.</para>
        /// <para>Display Name: Stock Item</para>
        /// </summary>
        [AttributeLogicalName("isstockitem")]
        [DisplayName("Stock Item")]
        public bool? IsStockItem {
            get {
                return GetAttributeValue<bool?>("isstockitem");
            }
            set {
                SetAttributeValue("isstockitem", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the product.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the product.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the product.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies the parent product family hierarchy.</para>
        /// <para>Display Name: Parent</para>
        /// </summary>
        [AttributeLogicalName("parentproductid")]
        [DisplayName("Parent")]
        public EntityReference ParentProductId {
            get {
                return GetAttributeValue<EntityReference>("parentproductid");
            }
            set {
                SetAttributeValue("parentproductid", value);
            }
        }
        
        /// <summary>
        /// <para>List price for the product item. Used in price calculations.</para>
        /// <para>Display Name: List Price</para>
        /// </summary>
        [AttributeLogicalName("price")]
        [DisplayName("List Price")]
        public decimal? Price {
            get {
                return GetMoneyValue("price");
            }
            set {
                SetMoneyValue("price", value);
            }
        }
        
        /// <summary>
        /// <para>Select the default price list for the product.</para>
        /// <para>Display Name: Default Price List</para>
        /// </summary>
        [AttributeLogicalName("pricelevelid")]
        [DisplayName("Default Price List")]
        public EntityReference PriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("pricelevelid");
            }
            set {
                SetAttributeValue("pricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the List Price in base currency.</para>
        /// <para>Display Name: List Price (Base)</para>
        /// </summary>
        [AttributeLogicalName("price_base")]
        [DisplayName("List Price (Base)")]
        public decimal? Price_Base {
            get {
                return GetMoneyValue("price_base");
            }
        }
        
        /// <summary>
        /// <para>Name of the product.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the process associated with the entity.</para>
        /// <para>Display Name: Process Id</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process Id")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>User-defined product ID.</para>
        /// <para>Display Name: Product ID</para>
        /// </summary>
        [AttributeLogicalName("productnumber")]
        [DisplayName("Product ID")]
        [MaxLength(100)]
        public string ProductNumber {
            get {
                return GetAttributeValue<string>("productnumber");
            }
            set {
                SetAttributeValue("productnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Product Structure.</para>
        /// <para>Display Name: Product Structure</para>
        /// </summary>
        [AttributeLogicalName("productstructure")]
        [DisplayName("Product Structure")]
        public Product_ProductStructure? ProductStructure {
            get {
                return GetOptionSetValue<Product_ProductStructure>("productstructure");
            }
            set {
                SetOptionSetValue("productstructure", value);
            }
        }
        
        /// <summary>
        /// <para>Type of product.</para>
        /// <para>Display Name: Product Type</para>
        /// </summary>
        [AttributeLogicalName("producttypecode")]
        [DisplayName("Product Type")]
        public Product_ProductTypeCode? ProductTypeCode {
            get {
                return GetOptionSetValue<Product_ProductTypeCode>("producttypecode");
            }
            set {
                SetOptionSetValue("producttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the Website associated with the product.</para>
        /// <para>Display Name: URL</para>
        /// </summary>
        [AttributeLogicalName("producturl")]
        [DisplayName("URL")]
        [MaxLength(255)]
        public string ProductUrl {
            get {
                return GetAttributeValue<string>("producturl");
            }
            set {
                SetAttributeValue("producturl", value);
            }
        }
        
        /// <summary>
        /// <para>Number of decimal places that can be used in monetary amounts for the product.</para>
        /// <para>Display Name: Decimals Supported</para>
        /// </summary>
        [AttributeLogicalName("quantitydecimal")]
        [DisplayName("Decimals Supported")]
        [Range(0, 5)]
        public int? QuantityDecimal {
            get {
                return GetAttributeValue<int?>("quantitydecimal");
            }
            set {
                SetAttributeValue("quantitydecimal", value);
            }
        }
        
        /// <summary>
        /// <para>Quantity of the product in stock.</para>
        /// <para>Display Name: Quantity On Hand</para>
        /// </summary>
        [AttributeLogicalName("quantityonhand")]
        [DisplayName("Quantity On Hand")]
        public decimal? QuantityOnHand {
            get {
                return GetAttributeValue<decimal?>("quantityonhand");
            }
            set {
                SetAttributeValue("quantityonhand", value);
            }
        }
        
        /// <summary>
        /// <para>Product size.</para>
        /// <para>Display Name: Size</para>
        /// </summary>
        [AttributeLogicalName("size")]
        [DisplayName("Size")]
        [MaxLength(200)]
        public string Size {
            get {
                return GetAttributeValue<string>("size");
            }
            set {
                SetAttributeValue("size", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the stage where the entity is located.</para>
        /// <para>Display Name: (Deprecated) Stage Id</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Stage Id")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Standard cost for the product item. Used in price calculations.</para>
        /// <para>Display Name: Standard Cost</para>
        /// </summary>
        [AttributeLogicalName("standardcost")]
        [DisplayName("Standard Cost")]
        public decimal? StandardCost {
            get {
                return GetMoneyValue("standardcost");
            }
            set {
                SetMoneyValue("standardcost", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Standard Cost in base currency.</para>
        /// <para>Display Name: Standard Cost (Base)</para>
        /// </summary>
        [AttributeLogicalName("standardcost_base")]
        [DisplayName("Standard Cost (Base)")]
        public decimal? StandardCost_Base {
            get {
                return GetMoneyValue("standardcost_base");
            }
        }
        
        /// <summary>
        /// <para>Status of the product.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ProductState? StateCode {
            get {
                return GetOptionSetValue<ProductState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the product.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Product_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Product_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Stock volume of the product.</para>
        /// <para>Display Name: Stock Volume</para>
        /// </summary>
        [AttributeLogicalName("stockvolume")]
        [DisplayName("Stock Volume")]
        public decimal? StockVolume {
            get {
                return GetAttributeValue<decimal?>("stockvolume");
            }
            set {
                SetAttributeValue("stockvolume", value);
            }
        }
        
        /// <summary>
        /// <para>Stock weight of the product.</para>
        /// <para>Display Name: Stock Weight</para>
        /// </summary>
        [AttributeLogicalName("stockweight")]
        [DisplayName("Stock Weight")]
        public decimal? StockWeight {
            get {
                return GetAttributeValue<decimal?>("stockweight");
            }
            set {
                SetAttributeValue("stockweight", value);
            }
        }
        
        /// <summary>
        /// <para>Select a category for the product.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subjectid")]
        [DisplayName("Subject")]
        public EntityReference SubjectId {
            get {
                return GetAttributeValue<EntityReference>("subjectid");
            }
            set {
                SetAttributeValue("subjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the product's supplier.</para>
        /// <para>Display Name: Supplier Name</para>
        /// </summary>
        [AttributeLogicalName("suppliername")]
        [DisplayName("Supplier Name")]
        [MaxLength(100)]
        public string SupplierName {
            get {
                return GetAttributeValue<string>("suppliername");
            }
            set {
                SetAttributeValue("suppliername", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the product.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Date from which this product is valid.</para>
        /// <para>Display Name: Valid From</para>
        /// </summary>
        [AttributeLogicalName("validfromdate")]
        [DisplayName("Valid From")]
        public DateTime? ValidFromDate {
            get {
                return GetAttributeValue<DateTime?>("validfromdate");
            }
            set {
                SetAttributeValue("validfromdate", value);
            }
        }
        
        /// <summary>
        /// <para>Date to which this product is valid.</para>
        /// <para>Display Name: Valid To</para>
        /// </summary>
        [AttributeLogicalName("validtodate")]
        [DisplayName("Valid To")]
        public DateTime? ValidToDate {
            get {
                return GetAttributeValue<DateTime?>("validtodate");
            }
            set {
                SetAttributeValue("validtodate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of vendor supplying the product.</para>
        /// <para>Display Name: Vendor ID</para>
        /// </summary>
        [AttributeLogicalName("vendorid")]
        [DisplayName("Vendor ID")]
        [MaxLength(100)]
        public string VendorID {
            get {
                return GetAttributeValue<string>("vendorid");
            }
            set {
                SetAttributeValue("vendorid", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the product vendor.</para>
        /// <para>Display Name: Vendor</para>
        /// </summary>
        [AttributeLogicalName("vendorname")]
        [DisplayName("Vendor")]
        [MaxLength(100)]
        public string VendorName {
            get {
                return GetAttributeValue<string>("vendorname");
            }
            set {
                SetAttributeValue("vendorname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique part identifier in vendor catalog of this product.</para>
        /// <para>Display Name: Vendor Name</para>
        /// </summary>
        [AttributeLogicalName("vendorpartnumber")]
        [DisplayName("Vendor Name")]
        [MaxLength(100)]
        public string VendorPartNumber {
            get {
                return GetAttributeValue<string>("vendorpartnumber");
            }
            set {
                SetAttributeValue("vendorpartnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: MiFID SI Start</para>
        /// </summary>
        [AttributeLogicalName("grm_midifsistart")]
        [DisplayName("MiFID SI Start")]
        public DateTime? grm_midifsistart {
            get {
                return GetAttributeValue<DateTime?>("grm_midifsistart");
            }
            set {
                SetAttributeValue("grm_midifsistart", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: MiFID Segment</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidsegment")]
        [DisplayName("MiFID Segment")]
        [MaxLength(100)]
        public string grm_mifidsegment {
            get {
                return GetAttributeValue<string>("grm_mifidsegment");
            }
            set {
                SetAttributeValue("grm_mifidsegment", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: MiFID SI End</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidsiend")]
        [DisplayName("MiFID SI End")]
        public DateTime? grm_mifidsiend {
            get {
                return GetAttributeValue<DateTime?>("grm_mifidsiend");
            }
            set {
                SetAttributeValue("grm_mifidsiend", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Product Complexity</para>
        /// </summary>
        [AttributeLogicalName("grm_productcomplexity")]
        [DisplayName("Product Complexity")]
        public grm_productcomplexity? grm_productcomplexity {
            get {
                return GetOptionSetValue<grm_productcomplexity>("grm_productcomplexity");
            }
            set {
                SetOptionSetValue("grm_productcomplexity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Product Hierarchy</para>
        /// </summary>
        [AttributeLogicalName("grm_producthierarchy")]
        [DisplayName("Product Hierarchy")]
        public grm_producthierarchy? grm_producthierarchy {
            get {
                return GetOptionSetValue<grm_producthierarchy>("grm_producthierarchy");
            }
            set {
                SetOptionSetValue("grm_producthierarchy", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Product Liquidity</para>
        /// </summary>
        [AttributeLogicalName("grm_productliquidity")]
        [DisplayName("Product Liquidity")]
        public grm_productliquidity? grm_productliquidity {
            get {
                return GetOptionSetValue<grm_productliquidity>("grm_productliquidity");
            }
            set {
                SetOptionSetValue("grm_productliquidity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Classification</para>
        /// </summary>
        [AttributeLogicalName("grm_riskclassification")]
        [DisplayName("Risk Classification")]
        public grm_riskclassification? grm_riskclassification {
            get {
                return GetOptionSetValue<grm_riskclassification>("grm_riskclassification");
            }
            set {
                SetOptionSetValue("grm_riskclassification", value);
            }
        }
        
        [RelationshipSchemaName("product_parent_product", EntityRole.Referenced)]
        public IEnumerable<Product> Referencedproduct_parent_product {
            get {
                return GetRelatedEntities<Product>("product_parent_product", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("product_parent_product", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentproductid")]
        [RelationshipSchemaName("product_parent_product", EntityRole.Referencing)]
        public Product Referencingproduct_parent_product {
            get {
                return GetRelatedEntity<Product>("product_parent_product", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("product_parent_product", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("grm_mifidproduct_productid_Product")]
        public IEnumerable<grm_mifidproduct> grm_mifidproduct_productid_Product {
            get {
                return GetRelatedEntities<grm_mifidproduct>("grm_mifidproduct_productid_Product", null);
            }
            set {
                SetRelatedEntities("grm_mifidproduct_productid_Product", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_product_createdonbehalfby")]
        public SystemUser lk_product_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_product_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_product_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_product_modifiedonbehalfby")]
        public SystemUser lk_product_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_product_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_product_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_productbase_createdby")]
        public SystemUser lk_productbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_productbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_productbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_productbase_modifiedby")]
        public SystemUser lk_productbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_productbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_productbase_modifiedby", null, value);
            }
        }
        
        public static Product Retrieve(IOrganizationService service, Guid id, params Expression<Func<Product,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Saved query against the database.</para>
    /// <para>Display Name: View</para>
    /// </summary>
    [EntityLogicalName("savedquery")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SavedQuery : ExtendedEntity<SavedQueryState, SavedQuery_StatusCode> {
        
        public const string EntityLogicalName = "savedquery";
        
        public const int EntityTypeCode = 1039;
        
        public SavedQuery() : 
                base(EntityLogicalName) {
        }
        
        public SavedQuery(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("savedqueryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("savedqueryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the view.</para>
        /// <para>Display Name: View</para>
        /// </summary>
        [AttributeLogicalName("savedqueryid")]
        [DisplayName("View")]
        public Guid? SavedQueryId {
            get {
                return GetAttributeValue<Guid?>("savedqueryid");
            }
            set {
                SetId("savedqueryid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the column name that will be used to group the results from the data collected across multiple records from a system view.</para>
        /// <para>Display Name: Advanced Group By</para>
        /// </summary>
        [AttributeLogicalName("advancedgroupby")]
        [DisplayName("Advanced Group By")]
        [MaxLength(2000)]
        public string AdvancedGroupBy {
            get {
                return GetAttributeValue<string>("advancedgroupby");
            }
            set {
                SetAttributeValue("advancedgroupby", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the view can be deleted.</para>
        /// <para>Display Name: Can Be Deleted</para>
        /// </summary>
        [AttributeLogicalName("canbedeleted")]
        [DisplayName("Can Be Deleted")]
        public BooleanManagedProperty CanBeDeleted {
            get {
                return GetAttributeValue<BooleanManagedProperty>("canbedeleted");
            }
            set {
                SetAttributeValue("canbedeleted", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the columns and sorting criteria for the view, stored in XML format.</para>
        /// <para>Display Name: Column Set XML</para>
        /// </summary>
        [AttributeLogicalName("columnsetxml")]
        [DisplayName("Column Set XML")]
        public string ColumnSetXml {
            get {
                return GetAttributeValue<string>("columnsetxml");
            }
            set {
                SetAttributeValue("columnsetxml", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Type information about how the items in the system view are formatted.</para>
        /// <para>Display Name: Conditional formatting</para>
        /// </summary>
        [AttributeLogicalName("conditionalformatting")]
        [DisplayName("Conditional formatting")]
        public string ConditionalFormatting {
            get {
                return GetAttributeValue<string>("conditionalformatting");
            }
            set {
                SetAttributeValue("conditionalformatting", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the view, such as the filter criteria or intended results set.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>String specifying the query in Fetch XML language.</para>
        /// <para>Display Name: Fetch XML</para>
        /// </summary>
        [AttributeLogicalName("fetchxml")]
        [DisplayName("Fetch XML")]
        public string FetchXml {
            get {
                return GetAttributeValue<string>("fetchxml");
            }
            set {
                SetAttributeValue("fetchxml", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the form is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(48)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether a user created the view.</para>
        /// <para>Display Name: Is Custom</para>
        /// </summary>
        [AttributeLogicalName("iscustom")]
        [DisplayName("Is Custom")]
        public bool? IsCustom {
            get {
                return GetAttributeValue<bool?>("iscustom");
            }
        }
        
        /// <summary>
        /// <para>Tells whether the component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        [DisplayName("Customizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the view is the default view for the specified record type (entity).</para>
        /// <para>Display Name: Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
            set {
                SetAttributeValue("isdefault", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the record is part of a managed solution.</para>
        /// <para>Display Name: State</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("State")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether or not this is viewable by the entire organization.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("isprivate")]
        [DisplayName("Is Private")]
        public bool? IsPrivate {
            get {
                return GetAttributeValue<bool?>("isprivate");
            }
        }
        
        /// <summary>
        /// <para>Choose whether the view is compatible with Quick Find. When users search for specific items, you define the fields that are searched in.</para>
        /// <para>Display Name: Quick Find Compatible</para>
        /// </summary>
        [AttributeLogicalName("isquickfindquery")]
        [DisplayName("Quick Find Compatible")]
        public bool? IsQuickFindQuery {
            get {
                return GetAttributeValue<bool?>("isquickfindquery");
            }
            set {
                SetAttributeValue("isquickfindquery", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the view was created by a user.</para>
        /// <para>Display Name: User Defined</para>
        /// </summary>
        [AttributeLogicalName("isuserdefined")]
        [DisplayName("User Defined")]
        public bool? IsUserDefined {
            get {
                return GetAttributeValue<bool?>("isuserdefined");
            }
        }
        
        /// <summary>
        /// <para>Layout data in JSON format.</para>
        /// <para>Display Name: Layout data in JSON format.</para>
        /// </summary>
        [AttributeLogicalName("layoutjson")]
        [DisplayName("Layout data in JSON format.")]
        public string LayoutJson {
            get {
                return GetAttributeValue<string>("layoutjson");
            }
            set {
                SetAttributeValue("layoutjson", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Layout XML</para>
        /// </summary>
        [AttributeLogicalName("layoutxml")]
        [DisplayName("Layout XML")]
        public string LayoutXml {
            get {
                return GetAttributeValue<string>("layoutxml");
            }
            set {
                SetAttributeValue("layoutxml", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the view to describe what results the view will contain. This name is visible to users in the View list.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>String specifying the corresponding sql query for the fetch xml specified for offline use.</para>
        /// <para>Display Name: Offline SQL Query</para>
        /// </summary>
        [AttributeLogicalName("offlinesqlquery")]
        [DisplayName("Offline SQL Query")]
        public string OfflineSqlQuery {
            get {
                return GetAttributeValue<string>("offlinesqlquery");
            }
            set {
                SetAttributeValue("offlinesqlquery", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the ID of the organization that the record is associated with.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>For the organization, type the tab order to determine how users navigate through the screen using only the Tab key.</para>
        /// <para>Display Name: Default Organization tab order</para>
        /// </summary>
        [AttributeLogicalName("organizationtaborder")]
        [DisplayName("Default Organization tab order")]
        [Range(0, 2147483647)]
        public int? OrganizationTabOrder {
            get {
                return GetAttributeValue<int?>("organizationtaborder");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the view to describe what results the view will contain. This name is visible to users in the View list.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Query API</para>
        /// </summary>
        [AttributeLogicalName("queryapi")]
        [DisplayName("Query API")]
        [MaxLength(100)]
        public string QueryAPI {
            get {
                return GetAttributeValue<string>("queryapi");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Query Application Usage</para>
        /// </summary>
        [AttributeLogicalName("queryappusage")]
        [DisplayName("Query Application Usage")]
        [Range(0, 1000000000)]
        public int? QueryAppUsage {
            get {
                return GetAttributeValue<int?>("queryappusage");
            }
            set {
                SetAttributeValue("queryappusage", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of the query.</para>
        /// <para>Display Name: Query Type</para>
        /// </summary>
        [AttributeLogicalName("querytype")]
        [DisplayName("Query Type")]
        [Range(0, 1000000000)]
        public int? QueryType {
            get {
                return GetAttributeValue<int?>("querytype");
            }
            set {
                SetAttributeValue("querytype", value);
            }
        }
        
        /// <summary>
        /// <para>Type of entity displayed in the view.</para>
        /// <para>Display Name: Entity Name</para>
        /// </summary>
        [AttributeLogicalName("returnedtypecode")]
        [DisplayName("Entity Name")]
        public string ReturnedTypeCode {
            get {
                return GetAttributeValue<string>("returnedtypecode");
            }
            set {
                SetAttributeValue("returnedtypecode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("savedqueryidunique")]
        public Guid? SavedQueryIdUnique {
            get {
                return GetAttributeValue<Guid?>("savedqueryidunique");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the view.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public SavedQueryState? StateCode {
            get {
                return GetOptionSetValue<SavedQueryState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the reason code that explains the status of the record.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SavedQuery_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SavedQuery_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the view.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_savedquery_createdonbehalfby")]
        public SystemUser lk_savedquery_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_savedquery_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_savedquery_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_savedquery_modifiedonbehalfby")]
        public SystemUser lk_savedquery_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_savedquery_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_savedquery_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_savedquerybase_createdby")]
        public SystemUser lk_savedquerybase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_savedquerybase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_savedquerybase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_savedquerybase_modifiedby")]
        public SystemUser lk_savedquerybase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_savedquerybase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_savedquerybase_modifiedby", null, value);
            }
        }
        
        public static SavedQuery Retrieve(IOrganizationService service, Guid id, params Expression<Func<SavedQuery,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [EntityLogicalName("systemuser")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "systemuser";
        
        public const int EntityTypeCode = 8;
        
        public SystemUser() : 
                base(EntityLogicalName) {
        }
        
        public SystemUser(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user.</para>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        [DisplayName("User")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user.</para>
        /// <para>Display Name: Access Mode</para>
        /// </summary>
        [AttributeLogicalName("accessmode")]
        [DisplayName("Access Mode")]
        public SystemUser_AccessMode? AccessMode {
            get {
                return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
            }
            set {
                SetOptionSetValue("accessmode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("City")]
        [MaxLength(128)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 1.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Country/Region")]
        [MaxLength(128)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(128)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(64)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Street 1")]
        [MaxLength(1024)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Street 2")]
        [MaxLength(1024)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Street 3")]
        [MaxLength(1024)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(40)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(128)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(64)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Other City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Other City")]
        [MaxLength(128)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Other Address</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Other Address")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 2.</para>
        /// <para>Display Name: Other Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Other Country/Region")]
        [MaxLength(128)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(128)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Other Street 1")]
        [MaxLength(1024)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Other Street 2")]
        [MaxLength(1024)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Other Street 3")]
        [MaxLength(1024)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(40)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Other ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Other ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Other State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Other State/Province")]
        [MaxLength(128)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>The identifier for the application. This is used to access data in another application.</para>
        /// <para>Display Name: Application ID</para>
        /// </summary>
        [AttributeLogicalName("applicationid")]
        [DisplayName("Application ID")]
        public Guid? ApplicationId {
            get {
                return GetAttributeValue<Guid?>("applicationid");
            }
            set {
                SetAttributeValue("applicationid", value);
            }
        }
        
        /// <summary>
        /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
        /// <para>Display Name: Application ID URI</para>
        /// </summary>
        [AttributeLogicalName("applicationiduri")]
        [DisplayName("Application ID URI")]
        [MaxLength(1024)]
        public string ApplicationIdUri {
            get {
                return GetAttributeValue<string>("applicationiduri");
            }
        }
        
        /// <summary>
        /// <para>This is the application directory object Id.</para>
        /// <para>Display Name: Azure AD Object ID</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Azure AD Object ID")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the user is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>License type of user. This is used only in the on-premises version of the product. Online licenses are managed through Microsoft 365 Office Portal</para>
        /// <para>Display Name: License Type</para>
        /// </summary>
        [AttributeLogicalName("caltype")]
        [DisplayName("License Type")]
        public SystemUser_CALType? CALType {
            get {
                return GetOptionSetValue<SystemUser_CALType>("caltype");
            }
            set {
                SetOptionSetValue("caltype", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the user.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the user.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the systemuser.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates if default outlook filters have been populated.</para>
        /// <para>Display Name: Default Filters Populated</para>
        /// </summary>
        [AttributeLogicalName("defaultfilterspopulated")]
        [DisplayName("Default Filters Populated")]
        public bool? DefaultFiltersPopulated {
            get {
                return GetAttributeValue<bool?>("defaultfilterspopulated");
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with this user.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("defaultmailbox")]
        [DisplayName("Mailbox")]
        public EntityReference DefaultMailbox {
            get {
                return GetAttributeValue<EntityReference>("defaultmailbox");
            }
        }
        
        /// <summary>
        /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
        /// <para>Display Name: Default OneDrive for Business Folder Name</para>
        /// </summary>
        [AttributeLogicalName("defaultodbfoldername")]
        [DisplayName("Default OneDrive for Business Folder Name")]
        [MaxLength(200)]
        public string DefaultOdbFolderName {
            get {
                return GetAttributeValue<string>("defaultodbfoldername");
            }
        }
        
        /// <summary>
        /// <para>User delete state</para>
        /// <para>Display Name: Deleted State</para>
        /// </summary>
        [AttributeLogicalName("deletedstate")]
        [DisplayName("Deleted State")]
        public SystemUser_DeletedState? DeletedState {
            get {
                return GetOptionSetValue<SystemUser_DeletedState>("deletedstate");
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the user.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disabled Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Whether to display the user in service views.</para>
        /// <para>Display Name: Display in Service Views</para>
        /// </summary>
        [AttributeLogicalName("displayinserviceviews")]
        [DisplayName("Display in Service Views")]
        public bool? DisplayInServiceViews {
            get {
                return GetAttributeValue<bool?>("displayinserviceviews");
            }
            set {
                SetAttributeValue("displayinserviceviews", value);
            }
        }
        
        /// <summary>
        /// <para>Active Directory domain of which the user is a member.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("domainname")]
        [DisplayName("User Name")]
        [MaxLength(1024)]
        public string DomainName {
            get {
                return GetAttributeValue<string>("domainname");
            }
            set {
                SetAttributeValue("domainname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the primary email address.</para>
        /// <para>Display Name: Primary Email Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Primary Email Status")]
        public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Employee identifier for the user.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(100)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>First name of the user.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(256)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Government identifier for the user.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(100)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Home phone number for the user.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("homephone")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string HomePhone {
            get {
                return GetAttributeValue<string>("homephone");
            }
            set {
                SetAttributeValue("homephone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique user identity id</para>
        /// </summary>
        [AttributeLogicalName("identityid")]
        [DisplayName("Unique user identity id")]
        [Range(-2147483648, 2147483647)]
        public int? IdentityId {
            get {
                return GetAttributeValue<int?>("identityid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email delivery method for the user.</para>
        /// <para>Display Name: Incoming Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email Delivery Method")]
        public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Internal email address for the user.</para>
        /// <para>Display Name: Primary Email</para>
        /// </summary>
        [AttributeLogicalName("internalemailaddress")]
        [DisplayName("Primary Email")]
        [MaxLength(100)]
        public string InternalEMailAddress {
            get {
                return GetAttributeValue<string>("internalemailaddress");
            }
            set {
                SetAttributeValue("internalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User invitation status.</para>
        /// <para>Display Name: Invitation Status</para>
        /// </summary>
        [AttributeLogicalName("invitestatuscode")]
        [DisplayName("Invitation Status")]
        public SystemUser_InviteStatusCode? InviteStatusCode {
            get {
                return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
            }
            set {
                SetOptionSetValue("invitestatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is enabled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Status")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
        }
        
        /// <summary>
        /// <para>Check if user is an integration user.</para>
        /// <para>Display Name: Integration user mode</para>
        /// </summary>
        [AttributeLogicalName("isintegrationuser")]
        [DisplayName("Integration user mode")]
        public bool? IsIntegrationUser {
            get {
                return GetAttributeValue<bool?>("isintegrationuser");
            }
            set {
                SetAttributeValue("isintegrationuser", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is licensed.</para>
        /// <para>Display Name: User Licensed</para>
        /// </summary>
        [AttributeLogicalName("islicensed")]
        [DisplayName("User Licensed")]
        public bool? IsLicensed {
            get {
                return GetAttributeValue<bool?>("islicensed");
            }
            set {
                SetAttributeValue("islicensed", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is synced with the directory.</para>
        /// <para>Display Name: User Synced</para>
        /// </summary>
        [AttributeLogicalName("issyncwithdirectory")]
        [DisplayName("User Synced")]
        public bool? IsSyncWithDirectory {
            get {
                return GetAttributeValue<bool?>("issyncwithdirectory");
            }
            set {
                SetAttributeValue("issyncwithdirectory", value);
            }
        }
        
        /// <summary>
        /// <para>Job title of the user.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Last name of the user.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(256)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Middle name of the user.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile alert email address for the user.</para>
        /// <para>Display Name: Mobile Alert Email</para>
        /// </summary>
        [AttributeLogicalName("mobilealertemail")]
        [DisplayName("Mobile Alert Email")]
        [MaxLength(100)]
        public string MobileAlertEMail {
            get {
                return GetAttributeValue<string>("mobilealertemail");
            }
            set {
                SetAttributeValue("mobilealertemail", value);
            }
        }
        
        /// <summary>
        /// <para>Items contained with a particular SystemUser.</para>
        /// <para>Display Name: Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineprofileid")]
        [DisplayName("Mobile Offline Profile")]
        public EntityReference MobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("mobileofflineprofileid");
            }
            set {
                SetAttributeValue("mobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile phone number for the user.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(64)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the user.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Nickname of the user.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(50)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the user.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Outgoing email delivery method for the user.</para>
        /// <para>Display Name: Outgoing Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email Delivery Method")]
        public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the manager of the user.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("parentsystemuserid")]
        [DisplayName("Manager")]
        public EntityReference ParentSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("parentsystemuserid");
            }
            set {
                SetAttributeValue("parentsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Hi</para>
        /// </summary>
        [AttributeLogicalName("passporthi")]
        [DisplayName("Passport Hi")]
        [Range(0, 1000000000)]
        public int? PassportHi {
            get {
                return GetAttributeValue<int?>("passporthi");
            }
            set {
                SetAttributeValue("passporthi", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Lo</para>
        /// </summary>
        [AttributeLogicalName("passportlo")]
        [DisplayName("Passport Lo")]
        [Range(0, 1000000000)]
        public int? PassportLo {
            get {
                return GetAttributeValue<int?>("passportlo");
            }
            set {
                SetAttributeValue("passportlo", value);
            }
        }
        
        /// <summary>
        /// <para>Personal email address of the user.</para>
        /// <para>Display Name: Email 2</para>
        /// </summary>
        [AttributeLogicalName("personalemailaddress")]
        [DisplayName("Email 2")]
        [MaxLength(100)]
        public string PersonalEMailAddress {
            get {
                return GetAttributeValue<string>("personalemailaddress");
            }
            set {
                SetAttributeValue("personalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the Website on which a photo of the user is located.</para>
        /// <para>Display Name: Photo URL</para>
        /// </summary>
        [AttributeLogicalName("photourl")]
        [DisplayName("Photo URL")]
        [MaxLength(200)]
        public string PhotoUrl {
            get {
                return GetAttributeValue<string>("photourl");
            }
            set {
                SetAttributeValue("photourl", value);
            }
        }
        
        /// <summary>
        /// <para>User's position in hierarchical security model.</para>
        /// <para>Display Name: Position</para>
        /// </summary>
        [AttributeLogicalName("positionid")]
        [DisplayName("Position")]
        public EntityReference PositionId {
            get {
                return GetAttributeValue<EntityReference>("positionid");
            }
            set {
                SetAttributeValue("positionid", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred address for the user.</para>
        /// <para>Display Name: Preferred Address</para>
        /// </summary>
        [AttributeLogicalName("preferredaddresscode")]
        [DisplayName("Preferred Address")]
        public SystemUser_PreferredAddressCode? PreferredAddressCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
            }
            set {
                SetOptionSetValue("preferredaddresscode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred email address for the user.</para>
        /// <para>Display Name: Preferred Email</para>
        /// </summary>
        [AttributeLogicalName("preferredemailcode")]
        [DisplayName("Preferred Email")]
        public SystemUser_PreferredEmailCode? PreferredEmailCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
            }
            set {
                SetOptionSetValue("preferredemailcode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred phone number for the user.</para>
        /// <para>Display Name: Preferred Phone</para>
        /// </summary>
        [AttributeLogicalName("preferredphonecode")]
        [DisplayName("Preferred Phone")]
        public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
            }
            set {
                SetOptionSetValue("preferredphonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the user.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Salutation for correspondence with the user.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(20)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Check if user is a setup user.</para>
        /// <para>Display Name: Restricted Access Mode</para>
        /// </summary>
        [AttributeLogicalName("setupuser")]
        [DisplayName("Restricted Access Mode")]
        public bool? SetupUser {
            get {
                return GetAttributeValue<bool?>("setupuser");
            }
            set {
                SetAttributeValue("setupuser", value);
            }
        }
        
        /// <summary>
        /// <para>SharePoint Work Email Address</para>
        /// <para>Display Name: SharePoint Email Address</para>
        /// </summary>
        [AttributeLogicalName("sharepointemailaddress")]
        [DisplayName("SharePoint Email Address")]
        [MaxLength(1024)]
        public string SharePointEmailAddress {
            get {
                return GetAttributeValue<string>("sharepointemailaddress");
            }
            set {
                SetAttributeValue("sharepointemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Site at which the user is located.</para>
        /// <para>Display Name: Site</para>
        /// </summary>
        [AttributeLogicalName("siteid")]
        [DisplayName("Site")]
        public EntityReference SiteId {
            get {
                return GetAttributeValue<EntityReference>("siteid");
            }
            set {
                SetAttributeValue("siteid", value);
            }
        }
        
        /// <summary>
        /// <para>Skill set of the user.</para>
        /// <para>Display Name: Skills</para>
        /// </summary>
        [AttributeLogicalName("skills")]
        [DisplayName("Skills")]
        [MaxLength(100)]
        public string Skills {
            get {
                return GetAttributeValue<string>("skills");
            }
            set {
                SetAttributeValue("skills", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the territory to which the user is assigned.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the user.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(128)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the systemuser.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of user license.</para>
        /// <para>Display Name: User License Type</para>
        /// </summary>
        [AttributeLogicalName("userlicensetype")]
        [DisplayName("User License Type")]
        [Range(-2147483648, 2147483647)]
        public int? UserLicenseType {
            get {
                return GetAttributeValue<int?>("userlicensetype");
            }
            set {
                SetAttributeValue("userlicensetype", value);
            }
        }
        
        /// <summary>
        /// <para> User PUID User Identifiable Information</para>
        /// <para>Display Name: User PUID</para>
        /// </summary>
        [AttributeLogicalName("userpuid")]
        [DisplayName("User PUID")]
        [MaxLength(100)]
        public string UserPuid {
            get {
                return GetAttributeValue<string>("userpuid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the user.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Windows Live ID</para>
        /// <para>Display Name: Windows Live ID</para>
        /// </summary>
        [AttributeLogicalName("windowsliveid")]
        [DisplayName("Windows Live ID")]
        [MaxLength(1024)]
        public string WindowsLiveID {
            get {
                return GetAttributeValue<string>("windowsliveid");
            }
            set {
                SetAttributeValue("windowsliveid", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer login email address</para>
        /// <para>Display Name: Yammer Email</para>
        /// </summary>
        [AttributeLogicalName("yammeremailaddress")]
        [DisplayName("Yammer Email")]
        [MaxLength(200)]
        public string YammerEmailAddress {
            get {
                return GetAttributeValue<string>("yammeremailaddress");
            }
            set {
                SetAttributeValue("yammeremailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer ID</para>
        /// <para>Display Name: Yammer User ID</para>
        /// </summary>
        [AttributeLogicalName("yammeruserid")]
        [DisplayName("Yammer User ID")]
        [MaxLength(128)]
        public string YammerUserId {
            get {
                return GetAttributeValue<string>("yammeruserid");
            }
            set {
                SetAttributeValue("yammeruserid", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(64)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(200)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(64)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(50)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether user is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referenceduser_parent_user {
            get {
                return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentsystemuserid")]
        [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
        public SystemUser Referencinguser_parent_user {
            get {
                return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_system_users")]
        public BusinessUnit business_unit_system_users {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_system_users", null);
            }
            set {
                SetRelatedEntity("business_unit_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_owning_user")]
        public IEnumerable<Contact> contact_owning_user {
            get {
                return GetRelatedEntities<Contact>("contact_owning_user", null);
            }
            set {
                SetRelatedEntities("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_systemuser_account_finalapprovaluserid")]
        public IEnumerable<Account> grm_systemuser_account_finalapprovaluserid {
            get {
                return GetRelatedEntities<Account>("grm_systemuser_account_finalapprovaluserid", null);
            }
            set {
                SetRelatedEntities("grm_systemuser_account_finalapprovaluserid", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_systemuser_account_formerresponsible")]
        public IEnumerable<Account> grm_systemuser_account_formerresponsible {
            get {
                return GetRelatedEntities<Account>("grm_systemuser_account_formerresponsible", null);
            }
            set {
                SetRelatedEntities("grm_systemuser_account_formerresponsible", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_systemuser_account_initialapprovaluserid")]
        public IEnumerable<Account> grm_systemuser_account_initialapprovaluserid {
            get {
                return GetRelatedEntities<Account>("grm_systemuser_account_initialapprovaluserid", null);
            }
            set {
                SetRelatedEntities("grm_systemuser_account_initialapprovaluserid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public IEnumerable<Account> lk_accountbase_createdby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public IEnumerable<Account> lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public IEnumerable<Account> lk_accountbase_modifiedby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public IEnumerable<Account> lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
        public IEnumerable<BusinessUnit> lk_businessunit_createdonbehalfby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunit_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_businessunit_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
        public IEnumerable<BusinessUnit> lk_businessunit_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunit_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_businessunit_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunitbase_createdby")]
        public IEnumerable<BusinessUnit> lk_businessunitbase_createdby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunitbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_businessunitbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
        public IEnumerable<BusinessUnit> lk_businessunitbase_modifiedby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunitbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_businessunitbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public IEnumerable<Contact> lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public IEnumerable<Contact> lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public IEnumerable<Contact> lk_contactbase_createdby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public IEnumerable<Contact> lk_contactbase_modifiedby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_amlkycrelationship_createdby")]
        public IEnumerable<grm_amlkycrelationship> lk_grm_amlkycrelationship_createdby {
            get {
                return GetRelatedEntities<grm_amlkycrelationship>("lk_grm_amlkycrelationship_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_amlkycrelationship_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_amlkycrelationship_createdonbehalfby")]
        public IEnumerable<grm_amlkycrelationship> lk_grm_amlkycrelationship_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_amlkycrelationship>("lk_grm_amlkycrelationship_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_amlkycrelationship_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_amlkycrelationship_modifiedby")]
        public IEnumerable<grm_amlkycrelationship> lk_grm_amlkycrelationship_modifiedby {
            get {
                return GetRelatedEntities<grm_amlkycrelationship>("lk_grm_amlkycrelationship_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_amlkycrelationship_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_amlkycrelationship_modifiedonbehalfby")]
        public IEnumerable<grm_amlkycrelationship> lk_grm_amlkycrelationship_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_amlkycrelationship>("lk_grm_amlkycrelationship_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_amlkycrelationship_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_api_configuration_createdby")]
        public IEnumerable<grm_api_configuration> lk_grm_api_configuration_createdby {
            get {
                return GetRelatedEntities<grm_api_configuration>("lk_grm_api_configuration_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_api_configuration_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_api_configuration_createdonbehalfby")]
        public IEnumerable<grm_api_configuration> lk_grm_api_configuration_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_api_configuration>("lk_grm_api_configuration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_api_configuration_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_api_configuration_modifiedby")]
        public IEnumerable<grm_api_configuration> lk_grm_api_configuration_modifiedby {
            get {
                return GetRelatedEntities<grm_api_configuration>("lk_grm_api_configuration_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_api_configuration_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_api_configuration_modifiedonbehalfby")]
        public IEnumerable<grm_api_configuration> lk_grm_api_configuration_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_api_configuration>("lk_grm_api_configuration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_api_configuration_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_assets_createdby")]
        public IEnumerable<grm_assets> lk_grm_assets_createdby {
            get {
                return GetRelatedEntities<grm_assets>("lk_grm_assets_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_assets_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_assets_createdonbehalfby")]
        public IEnumerable<grm_assets> lk_grm_assets_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_assets>("lk_grm_assets_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_assets_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_assets_modifiedby")]
        public IEnumerable<grm_assets> lk_grm_assets_modifiedby {
            get {
                return GetRelatedEntities<grm_assets>("lk_grm_assets_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_assets_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_assets_modifiedonbehalfby")]
        public IEnumerable<grm_assets> lk_grm_assets_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_assets>("lk_grm_assets_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_assets_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_clientservice_createdby")]
        public IEnumerable<grm_clientservice> lk_grm_clientservice_createdby {
            get {
                return GetRelatedEntities<grm_clientservice>("lk_grm_clientservice_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_clientservice_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_clientservice_createdonbehalfby")]
        public IEnumerable<grm_clientservice> lk_grm_clientservice_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_clientservice>("lk_grm_clientservice_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_clientservice_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_clientservice_modifiedby")]
        public IEnumerable<grm_clientservice> lk_grm_clientservice_modifiedby {
            get {
                return GetRelatedEntities<grm_clientservice>("lk_grm_clientservice_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_clientservice_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_clientservice_modifiedonbehalfby")]
        public IEnumerable<grm_clientservice> lk_grm_clientservice_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_clientservice>("lk_grm_clientservice_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_clientservice_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_commodities_createdby")]
        public IEnumerable<grm_commodities> lk_grm_commodities_createdby {
            get {
                return GetRelatedEntities<grm_commodities>("lk_grm_commodities_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_commodities_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_commodities_createdonbehalfby")]
        public IEnumerable<grm_commodities> lk_grm_commodities_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_commodities>("lk_grm_commodities_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_commodities_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_commodities_modifiedby")]
        public IEnumerable<grm_commodities> lk_grm_commodities_modifiedby {
            get {
                return GetRelatedEntities<grm_commodities>("lk_grm_commodities_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_commodities_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_commodities_modifiedonbehalfby")]
        public IEnumerable<grm_commodities> lk_grm_commodities_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_commodities>("lk_grm_commodities_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_commodities_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_countries_createdby")]
        public IEnumerable<grm_countries> lk_grm_countries_createdby {
            get {
                return GetRelatedEntities<grm_countries>("lk_grm_countries_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_countries_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_countries_createdonbehalfby")]
        public IEnumerable<grm_countries> lk_grm_countries_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_countries>("lk_grm_countries_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_countries_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_countries_modifiedby")]
        public IEnumerable<grm_countries> lk_grm_countries_modifiedby {
            get {
                return GetRelatedEntities<grm_countries>("lk_grm_countries_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_countries_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_countries_modifiedonbehalfby")]
        public IEnumerable<grm_countries> lk_grm_countries_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_countries>("lk_grm_countries_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_countries_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_industry_createdby")]
        public IEnumerable<grm_industry> lk_grm_industry_createdby {
            get {
                return GetRelatedEntities<grm_industry>("lk_grm_industry_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_industry_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_industry_createdonbehalfby")]
        public IEnumerable<grm_industry> lk_grm_industry_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_industry>("lk_grm_industry_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_industry_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_industry_modifiedby")]
        public IEnumerable<grm_industry> lk_grm_industry_modifiedby {
            get {
                return GetRelatedEntities<grm_industry>("lk_grm_industry_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_industry_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_industry_modifiedonbehalfby")]
        public IEnumerable<grm_industry> lk_grm_industry_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_industry>("lk_grm_industry_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_industry_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_kyc_update_createdby")]
        public IEnumerable<grm_kyc_update> lk_grm_kyc_update_createdby {
            get {
                return GetRelatedEntities<grm_kyc_update>("lk_grm_kyc_update_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_kyc_update_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_kyc_update_createdonbehalfby")]
        public IEnumerable<grm_kyc_update> lk_grm_kyc_update_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_kyc_update>("lk_grm_kyc_update_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_kyc_update_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_kyc_update_modifiedby")]
        public IEnumerable<grm_kyc_update> lk_grm_kyc_update_modifiedby {
            get {
                return GetRelatedEntities<grm_kyc_update>("lk_grm_kyc_update_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_kyc_update_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_kyc_update_modifiedonbehalfby")]
        public IEnumerable<grm_kyc_update> lk_grm_kyc_update_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_kyc_update>("lk_grm_kyc_update_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_kyc_update_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_kyclog_createdby")]
        public IEnumerable<grm_kyclog> lk_grm_kyclog_createdby {
            get {
                return GetRelatedEntities<grm_kyclog>("lk_grm_kyclog_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_kyclog_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_kyclog_createdonbehalfby")]
        public IEnumerable<grm_kyclog> lk_grm_kyclog_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_kyclog>("lk_grm_kyclog_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_kyclog_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_kyclog_modifiedby")]
        public IEnumerable<grm_kyclog> lk_grm_kyclog_modifiedby {
            get {
                return GetRelatedEntities<grm_kyclog>("lk_grm_kyclog_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_kyclog_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_kyclog_modifiedonbehalfby")]
        public IEnumerable<grm_kyclog> lk_grm_kyclog_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_kyclog>("lk_grm_kyclog_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_kyclog_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_legalstructure_createdby")]
        public IEnumerable<grm_legalstructure> lk_grm_legalstructure_createdby {
            get {
                return GetRelatedEntities<grm_legalstructure>("lk_grm_legalstructure_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_legalstructure_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_legalstructure_createdonbehalfby")]
        public IEnumerable<grm_legalstructure> lk_grm_legalstructure_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_legalstructure>("lk_grm_legalstructure_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_legalstructure_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_legalstructure_modifiedby")]
        public IEnumerable<grm_legalstructure> lk_grm_legalstructure_modifiedby {
            get {
                return GetRelatedEntities<grm_legalstructure>("lk_grm_legalstructure_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_legalstructure_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_legalstructure_modifiedonbehalfby")]
        public IEnumerable<grm_legalstructure> lk_grm_legalstructure_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_legalstructure>("lk_grm_legalstructure_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_legalstructure_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifid_createdby")]
        public IEnumerable<grm_mifid> lk_grm_mifid_createdby {
            get {
                return GetRelatedEntities<grm_mifid>("lk_grm_mifid_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifid_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifid_createdonbehalfby")]
        public IEnumerable<grm_mifid> lk_grm_mifid_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_mifid>("lk_grm_mifid_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifid_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifid_modifiedby")]
        public IEnumerable<grm_mifid> lk_grm_mifid_modifiedby {
            get {
                return GetRelatedEntities<grm_mifid>("lk_grm_mifid_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifid_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifid_modifiedonbehalfby")]
        public IEnumerable<grm_mifid> lk_grm_mifid_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_mifid>("lk_grm_mifid_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifid_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifidproduct_createdby")]
        public IEnumerable<grm_mifidproduct> lk_grm_mifidproduct_createdby {
            get {
                return GetRelatedEntities<grm_mifidproduct>("lk_grm_mifidproduct_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifidproduct_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifidproduct_createdonbehalfby")]
        public IEnumerable<grm_mifidproduct> lk_grm_mifidproduct_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_mifidproduct>("lk_grm_mifidproduct_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifidproduct_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifidproduct_modifiedby")]
        public IEnumerable<grm_mifidproduct> lk_grm_mifidproduct_modifiedby {
            get {
                return GetRelatedEntities<grm_mifidproduct>("lk_grm_mifidproduct_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifidproduct_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifidproduct_modifiedonbehalfby")]
        public IEnumerable<grm_mifidproduct> lk_grm_mifidproduct_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_mifidproduct>("lk_grm_mifidproduct_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifidproduct_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifidservices_createdby")]
        public IEnumerable<grm_mifidservices> lk_grm_mifidservices_createdby {
            get {
                return GetRelatedEntities<grm_mifidservices>("lk_grm_mifidservices_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifidservices_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifidservices_createdonbehalfby")]
        public IEnumerable<grm_mifidservices> lk_grm_mifidservices_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_mifidservices>("lk_grm_mifidservices_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifidservices_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifidservices_modifiedby")]
        public IEnumerable<grm_mifidservices> lk_grm_mifidservices_modifiedby {
            get {
                return GetRelatedEntities<grm_mifidservices>("lk_grm_mifidservices_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifidservices_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_mifidservices_modifiedonbehalfby")]
        public IEnumerable<grm_mifidservices> lk_grm_mifidservices_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_mifidservices>("lk_grm_mifidservices_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_mifidservices_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_ownershipstructure_createdby")]
        public IEnumerable<grm_ownershipstructure> lk_grm_ownershipstructure_createdby {
            get {
                return GetRelatedEntities<grm_ownershipstructure>("lk_grm_ownershipstructure_createdby", null);
            }
            set {
                SetRelatedEntities("lk_grm_ownershipstructure_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_ownershipstructure_createdonbehalfby")]
        public IEnumerable<grm_ownershipstructure> lk_grm_ownershipstructure_createdonbehalfby {
            get {
                return GetRelatedEntities<grm_ownershipstructure>("lk_grm_ownershipstructure_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_ownershipstructure_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_ownershipstructure_modifiedby")]
        public IEnumerable<grm_ownershipstructure> lk_grm_ownershipstructure_modifiedby {
            get {
                return GetRelatedEntities<grm_ownershipstructure>("lk_grm_ownershipstructure_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_grm_ownershipstructure_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_grm_ownershipstructure_modifiedonbehalfby")]
        public IEnumerable<grm_ownershipstructure> lk_grm_ownershipstructure_modifiedonbehalfby {
            get {
                return GetRelatedEntities<grm_ownershipstructure>("lk_grm_ownershipstructure_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_grm_ownershipstructure_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_new_onboarding_createdby")]
        public IEnumerable<new_onboarding> lk_new_onboarding_createdby {
            get {
                return GetRelatedEntities<new_onboarding>("lk_new_onboarding_createdby", null);
            }
            set {
                SetRelatedEntities("lk_new_onboarding_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_new_onboarding_createdonbehalfby")]
        public IEnumerable<new_onboarding> lk_new_onboarding_createdonbehalfby {
            get {
                return GetRelatedEntities<new_onboarding>("lk_new_onboarding_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_new_onboarding_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_new_onboarding_modifiedby")]
        public IEnumerable<new_onboarding> lk_new_onboarding_modifiedby {
            get {
                return GetRelatedEntities<new_onboarding>("lk_new_onboarding_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_new_onboarding_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_new_onboarding_modifiedonbehalfby")]
        public IEnumerable<new_onboarding> lk_new_onboarding_modifiedonbehalfby {
            get {
                return GetRelatedEntities<new_onboarding>("lk_new_onboarding_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_new_onboarding_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_product_createdonbehalfby")]
        public IEnumerable<Product> lk_product_createdonbehalfby {
            get {
                return GetRelatedEntities<Product>("lk_product_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_product_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_product_modifiedonbehalfby")]
        public IEnumerable<Product> lk_product_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Product>("lk_product_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_product_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_productbase_createdby")]
        public IEnumerable<Product> lk_productbase_createdby {
            get {
                return GetRelatedEntities<Product>("lk_productbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_productbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_productbase_modifiedby")]
        public IEnumerable<Product> lk_productbase_modifiedby {
            get {
                return GetRelatedEntities<Product>("lk_productbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_productbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquery_createdonbehalfby")]
        public IEnumerable<SavedQuery> lk_savedquery_createdonbehalfby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquery_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_savedquery_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquery_modifiedonbehalfby")]
        public IEnumerable<SavedQuery> lk_savedquery_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquery_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_savedquery_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquerybase_createdby")]
        public IEnumerable<SavedQuery> lk_savedquerybase_createdby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquerybase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_savedquerybase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquerybase_modifiedby")]
        public IEnumerable<SavedQuery> lk_savedquerybase_modifiedby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquerybase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_savedquerybase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_createdby")]
        public IEnumerable<Task> lk_task_createdby {
            get {
                return GetRelatedEntities<Task>("lk_task_createdby", null);
            }
            set {
                SetRelatedEntities("lk_task_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_createdonbehalfby")]
        public IEnumerable<Task> lk_task_createdonbehalfby {
            get {
                return GetRelatedEntities<Task>("lk_task_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_task_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_modifiedby")]
        public IEnumerable<Task> lk_task_modifiedby {
            get {
                return GetRelatedEntities<Task>("lk_task_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_task_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
        public IEnumerable<Task> lk_task_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Task>("lk_task_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_task_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_accounts")]
        public IEnumerable<Account> system_user_accounts {
            get {
                return GetRelatedEntities<Account>("system_user_accounts", null);
            }
            set {
                SetRelatedEntities("system_user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_contacts")]
        public IEnumerable<Contact> system_user_contacts {
            get {
                return GetRelatedEntities<Contact>("system_user_contacts", null);
            }
            set {
                SetRelatedEntities("system_user_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("user_accounts")]
        public IEnumerable<Account> user_accounts {
            get {
                return GetRelatedEntities<Account>("user_accounts", null);
            }
            set {
                SetRelatedEntities("user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("user_grm_amlkycrelationship")]
        public IEnumerable<grm_amlkycrelationship> user_grm_amlkycrelationship {
            get {
                return GetRelatedEntities<grm_amlkycrelationship>("user_grm_amlkycrelationship", null);
            }
            set {
                SetRelatedEntities("user_grm_amlkycrelationship", null, value);
            }
        }
        
        [RelationshipSchemaName("user_grm_assets")]
        public IEnumerable<grm_assets> user_grm_assets {
            get {
                return GetRelatedEntities<grm_assets>("user_grm_assets", null);
            }
            set {
                SetRelatedEntities("user_grm_assets", null, value);
            }
        }
        
        [RelationshipSchemaName("user_grm_clientservice")]
        public IEnumerable<grm_clientservice> user_grm_clientservice {
            get {
                return GetRelatedEntities<grm_clientservice>("user_grm_clientservice", null);
            }
            set {
                SetRelatedEntities("user_grm_clientservice", null, value);
            }
        }
        
        [RelationshipSchemaName("user_grm_commodities")]
        public IEnumerable<grm_commodities> user_grm_commodities {
            get {
                return GetRelatedEntities<grm_commodities>("user_grm_commodities", null);
            }
            set {
                SetRelatedEntities("user_grm_commodities", null, value);
            }
        }
        
        [RelationshipSchemaName("user_grm_kyc_update")]
        public IEnumerable<grm_kyc_update> user_grm_kyc_update {
            get {
                return GetRelatedEntities<grm_kyc_update>("user_grm_kyc_update", null);
            }
            set {
                SetRelatedEntities("user_grm_kyc_update", null, value);
            }
        }
        
        [RelationshipSchemaName("user_grm_mifid")]
        public IEnumerable<grm_mifid> user_grm_mifid {
            get {
                return GetRelatedEntities<grm_mifid>("user_grm_mifid", null);
            }
            set {
                SetRelatedEntities("user_grm_mifid", null, value);
            }
        }
        
        [RelationshipSchemaName("user_grm_mifidproduct")]
        public IEnumerable<grm_mifidproduct> user_grm_mifidproduct {
            get {
                return GetRelatedEntities<grm_mifidproduct>("user_grm_mifidproduct", null);
            }
            set {
                SetRelatedEntities("user_grm_mifidproduct", null, value);
            }
        }
        
        [RelationshipSchemaName("user_grm_mifidservices")]
        public IEnumerable<grm_mifidservices> user_grm_mifidservices {
            get {
                return GetRelatedEntities<grm_mifidservices>("user_grm_mifidservices", null);
            }
            set {
                SetRelatedEntities("user_grm_mifidservices", null, value);
            }
        }
        
        [RelationshipSchemaName("user_task")]
        public IEnumerable<Task> user_task {
            get {
                return GetRelatedEntities<Task>("user_task", null);
            }
            set {
                SetRelatedEntities("user_task", null, value);
            }
        }
        
        public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public static SystemUser Retrieve_aadobjectid(IOrganizationService service, Guid AzureActiveDirectoryObjectId, params Expression<Func<SystemUser,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public void AltKey_aadobjectid(Guid AzureActiveDirectoryObjectId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        }
    }
    
    /// <summary>
    /// <para>Generic activity representing work needed to be done.</para>
    /// <para>Display Name: Task</para>
    /// </summary>
    [EntityLogicalName("task")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Task : ExtendedEntity<TaskState, Task_StatusCode> {
        
        public const string EntityLogicalName = "task";
        
        public const int EntityTypeCode = 4212;
        
        public Task() : 
                base(EntityLogicalName) {
        }
        
        public Task(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the task.</para>
        /// <para>Display Name: Task</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Task")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent on the task. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the task. By default, it displays when the activity was completed or canceled.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the task. By default, it displays when the task was created.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the task type, such as lead gathering or customer follow up, to tie the task to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Assigned Task Unique Id</para>
        /// <para>Display Name: Assigned Task Unique Id</para>
        /// </summary>
        [AttributeLogicalName("crmtaskassigneduniqueid")]
        [DisplayName("Assigned Task Unique Id")]
        public Guid? CrmTaskAssignedUniqueId {
            get {
                return GetAttributeValue<Guid?>("crmtaskassigneduniqueid");
            }
            set {
                SetAttributeValue("crmtaskassigneduniqueid", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the task.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information which specifies whether the task was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information which specifies if the task was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the record owner's business unit.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the task.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the task.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the percentage complete value for the task to track tasks to completion.</para>
        /// <para>Display Name: Percent Complete</para>
        /// </summary>
        [AttributeLogicalName("percentcomplete")]
        [DisplayName("Percent Complete")]
        [Range(0, 100)]
        public int? PercentComplete {
            get {
                return GetAttributeValue<int?>("percentcomplete");
            }
            set {
                SetAttributeValue("percentcomplete", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the task.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Task_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Task_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the task relates to.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Task record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this Task. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the task, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service that is associated with this activity.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the task is open, completed, or canceled. Completed and canceled tasks are read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public TaskState? StateCode {
            get {
                return GetOptionSetValue<TaskState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the task's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Task_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Task_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the task type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the task.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the task.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Tasks")]
        public Account Account_Tasks {
            get {
                return GetRelatedEntity<Account>("Account_Tasks", null);
            }
            set {
                SetRelatedEntity("Account_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Tasks")]
        public Contact Contact_Tasks {
            get {
                return GetRelatedEntity<Contact>("Contact_Tasks", null);
            }
            set {
                SetRelatedEntity("Contact_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_task_activities")]
        public BusinessUnit business_unit_task_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_task_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_task_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("grm_kyc_update_Tasks")]
        public grm_kyc_update grm_kyc_update_Tasks {
            get {
                return GetRelatedEntity<grm_kyc_update>("grm_kyc_update_Tasks", null);
            }
            set {
                SetRelatedEntity("grm_kyc_update_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_task_createdby")]
        public SystemUser lk_task_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_createdby", null);
            }
            set {
                SetRelatedEntity("lk_task_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_task_createdonbehalfby")]
        public SystemUser lk_task_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_task_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_task_modifiedby")]
        public SystemUser lk_task_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_task_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
        public SystemUser lk_task_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_task_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_task")]
        public SystemUser user_task {
            get {
                return GetRelatedEntity<SystemUser>("user_task", null);
            }
            set {
                SetRelatedEntity("user_task", null, value);
            }
        }
        
        public static Task Retrieve(IOrganizationService service, Guid id, params Expression<Func<Task,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("grm_account_grm_assets")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_account_grm_assets : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "grm_account_grm_assets";
        
        public const string RelationshipSchemaName = "grm_account_grm_assets";
        
        public const int EntityTypeCode = 10301;
        
        public grm_account_grm_assets() : 
                base(EntityLogicalName) {
        }
        
        public grm_account_grm_assets(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("grm_account_grm_assetsid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_account_grm_assetsid", value);
            }
        }
        
        [AttributeLogicalName("grm_account_grm_assetsid")]
        public Guid? grm_account_grm_assetsId {
            get {
                return GetAttributeValue<Guid?>("grm_account_grm_assetsid");
            }
            set {
                SetId("grm_account_grm_assetsid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("accountid")]
        public Guid? accountid {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
        }
        
        [AttributeLogicalName("grm_assetsid")]
        public Guid? grm_assetsid {
            get {
                return GetAttributeValue<Guid?>("grm_assetsid");
            }
        }
        
        public static grm_account_grm_assets Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_account_grm_assets,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>N:N relationship between Contact and Account</para>
    /// <para>Display Name: AML/KYC Relationship</para>
    /// </summary>
    [EntityLogicalName("grm_amlkycrelationship")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_amlkycrelationship : ExtendedEntity<grm_amlkycrelationshipState, grm_amlkycrelationship_statuscode> {
        
        public const string EntityLogicalName = "grm_amlkycrelationship";
        
        public const int EntityTypeCode = 10253;
        
        public grm_amlkycrelationship() : 
                base(EntityLogicalName) {
        }
        
        public grm_amlkycrelationship(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_amlkycrelationshipid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_amlkycrelationshipid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: AML/KYC Relationship</para>
        /// </summary>
        [AttributeLogicalName("grm_amlkycrelationshipid")]
        [DisplayName("AML/KYC Relationship")]
        public Guid? grm_amlkycrelationshipId {
            get {
                return GetAttributeValue<Guid?>("grm_amlkycrelationshipid");
            }
            set {
                SetId("grm_amlkycrelationshipid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("grm_contactid")]
        [DisplayName("Contact")]
        public EntityReference grm_contactid {
            get {
                return GetAttributeValue<EntityReference>("grm_contactid");
            }
            set {
                SetAttributeValue("grm_contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Controlling (%)</para>
        /// </summary>
        [AttributeLogicalName("grm_controllingpct")]
        [DisplayName("Controlling (%)")]
        public decimal? grm_controllingpct {
            get {
                return GetAttributeValue<decimal?>("grm_controllingpct");
            }
            set {
                SetAttributeValue("grm_controllingpct", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ownership (%)</para>
        /// </summary>
        [AttributeLogicalName("grm_ownershippct")]
        [DisplayName("Ownership (%)")]
        public decimal? grm_ownershippct {
            get {
                return GetAttributeValue<decimal?>("grm_ownershippct");
            }
            set {
                SetAttributeValue("grm_ownershippct", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("grm_relationshiptype")]
        [DisplayName("Relationship Type")]
        public grm_amlkycrelationshiptype? grm_relationshiptype {
            get {
                return GetOptionSetValue<grm_amlkycrelationshiptype>("grm_relationshiptype");
            }
            set {
                SetOptionSetValue("grm_relationshiptype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Source Company</para>
        /// </summary>
        [AttributeLogicalName("grm_sourcecompanyid")]
        [DisplayName("Source Company")]
        public EntityReference grm_sourcecompanyid {
            get {
                return GetAttributeValue<EntityReference>("grm_sourcecompanyid");
            }
            set {
                SetAttributeValue("grm_sourcecompanyid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the AML/KYC Relationship</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_amlkycrelationshipState? statecode {
            get {
                return GetOptionSetValue<grm_amlkycrelationshipState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the AML/KYC Relationship</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_amlkycrelationship_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_amlkycrelationship_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_grm_amlkycrelationship")]
        public BusinessUnit business_unit_grm_amlkycrelationship {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_grm_amlkycrelationship", null);
            }
            set {
                SetRelatedEntity("business_unit_grm_amlkycrelationship", null, value);
            }
        }
        
        [AttributeLogicalName("grm_contactid")]
        [RelationshipSchemaName("grm_amlkycrelationship_contactid_Contact")]
        public Contact grm_amlkycrelationship_contactid_Contact {
            get {
                return GetRelatedEntity<Contact>("grm_amlkycrelationship_contactid_Contact", null);
            }
            set {
                SetRelatedEntity("grm_amlkycrelationship_contactid_Contact", null, value);
            }
        }
        
        [AttributeLogicalName("grm_sourcecompanyid")]
        [RelationshipSchemaName("grm_amlkycrelationship_sourcecompanyid_Ac")]
        public Account grm_amlkycrelationship_sourcecompanyid_Ac {
            get {
                return GetRelatedEntity<Account>("grm_amlkycrelationship_sourcecompanyid_Ac", null);
            }
            set {
                SetRelatedEntity("grm_amlkycrelationship_sourcecompanyid_Ac", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_amlkycrelationship_createdby")]
        public SystemUser lk_grm_amlkycrelationship_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_amlkycrelationship_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_amlkycrelationship_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_amlkycrelationship_createdonbehalfby")]
        public SystemUser lk_grm_amlkycrelationship_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_amlkycrelationship_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_amlkycrelationship_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_amlkycrelationship_modifiedby")]
        public SystemUser lk_grm_amlkycrelationship_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_amlkycrelationship_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_amlkycrelationship_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_amlkycrelationship_modifiedonbehalfby")]
        public SystemUser lk_grm_amlkycrelationship_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_amlkycrelationship_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_amlkycrelationship_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_grm_amlkycrelationship")]
        public SystemUser user_grm_amlkycrelationship {
            get {
                return GetRelatedEntity<SystemUser>("user_grm_amlkycrelationship", null);
            }
            set {
                SetRelatedEntity("user_grm_amlkycrelationship", null, value);
            }
        }
        
        public static grm_amlkycrelationship Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_amlkycrelationship,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: API Configuration</para>
    /// </summary>
    [EntityLogicalName("grm_api_configuration")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_api_configuration : ExtendedEntity<grm_api_configurationState, grm_api_configuration_statuscode> {
        
        public const string EntityLogicalName = "grm_api_configuration";
        
        public const int EntityTypeCode = 10295;
        
        public grm_api_configuration() : 
                base(EntityLogicalName) {
        }
        
        public grm_api_configuration(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_api_configurationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_api_configurationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: API Configuration</para>
        /// </summary>
        [AttributeLogicalName("grm_api_configurationid")]
        [DisplayName("API Configuration")]
        public Guid? grm_api_configurationId {
            get {
                return GetAttributeValue<Guid?>("grm_api_configurationid");
            }
            set {
                SetId("grm_api_configurationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profisee Data Api Base Url</para>
        /// </summary>
        [AttributeLogicalName("grm_profiseedataapibaseurl")]
        [DisplayName("Profisee Data Api Base Url")]
        [MaxLength(400)]
        public string grm_ProfiseeDataApiBaseUrl {
            get {
                return GetAttributeValue<string>("grm_profiseedataapibaseurl");
            }
            set {
                SetAttributeValue("grm_profiseedataapibaseurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profisee Data Api Subscription Key</para>
        /// </summary>
        [AttributeLogicalName("grm_profiseedataapisubscriptionkey")]
        [DisplayName("Profisee Data Api Subscription Key")]
        [MaxLength(400)]
        public string grm_ProfiseeDataApiSubscriptionKey {
            get {
                return GetAttributeValue<string>("grm_profiseedataapisubscriptionkey");
            }
            set {
                SetAttributeValue("grm_profiseedataapisubscriptionkey", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: MDMApiKey</para>
        /// </summary>
        [AttributeLogicalName("grm_mdmapikey")]
        [DisplayName("MDMApiKey")]
        [MaxLength(200)]
        public string grm_mdmapikey {
            get {
                return GetAttributeValue<string>("grm_mdmapikey");
            }
            set {
                SetAttributeValue("grm_mdmapikey", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: MDMApiVersion</para>
        /// </summary>
        [AttributeLogicalName("grm_mdmapiversion")]
        [DisplayName("MDMApiVersion")]
        [MaxLength(100)]
        public string grm_mdmapiversion {
            get {
                return GetAttributeValue<string>("grm_mdmapiversion");
            }
            set {
                SetAttributeValue("grm_mdmapiversion", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: OauthMDMAccessTokenBaseUrl</para>
        /// </summary>
        [AttributeLogicalName("grm_oauthmdmaccesstokenbaseurl")]
        [DisplayName("OauthMDMAccessTokenBaseUrl")]
        [MaxLength(200)]
        public string grm_oauthmdmaccesstokenbaseurl {
            get {
                return GetAttributeValue<string>("grm_oauthmdmaccesstokenbaseurl");
            }
            set {
                SetAttributeValue("grm_oauthmdmaccesstokenbaseurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: OauthMDMAccessTokenUrl</para>
        /// </summary>
        [AttributeLogicalName("grm_oauthmdmaccesstokenurl")]
        [DisplayName("OauthMDMAccessTokenUrl")]
        [MaxLength(200)]
        public string grm_oauthmdmaccesstokenurl {
            get {
                return GetAttributeValue<string>("grm_oauthmdmaccesstokenurl");
            }
            set {
                SetAttributeValue("grm_oauthmdmaccesstokenurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: OauthMDMAppId</para>
        /// </summary>
        [AttributeLogicalName("grm_oauthmdmappid")]
        [DisplayName("OauthMDMAppId")]
        [MaxLength(200)]
        public string grm_oauthmdmappid {
            get {
                return GetAttributeValue<string>("grm_oauthmdmappid");
            }
            set {
                SetAttributeValue("grm_oauthmdmappid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: OauthMDMClientId</para>
        /// </summary>
        [AttributeLogicalName("grm_oauthmdmclientid")]
        [DisplayName("OauthMDMClientId")]
        [MaxLength(200)]
        public string grm_oauthmdmclientid {
            get {
                return GetAttributeValue<string>("grm_oauthmdmclientid");
            }
            set {
                SetAttributeValue("grm_oauthmdmclientid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: OauthMDMClientSecret</para>
        /// </summary>
        [AttributeLogicalName("grm_oauthmdmclientsecret")]
        [DisplayName("OauthMDMClientSecret")]
        [MaxLength(200)]
        public string grm_oauthmdmclientsecret {
            get {
                return GetAttributeValue<string>("grm_oauthmdmclientsecret");
            }
            set {
                SetAttributeValue("grm_oauthmdmclientsecret", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the API Configuration</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_api_configurationState? statecode {
            get {
                return GetOptionSetValue<grm_api_configurationState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the API Configuration</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_api_configuration_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_api_configuration_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_api_configuration_createdby")]
        public SystemUser lk_grm_api_configuration_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_api_configuration_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_api_configuration_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_api_configuration_createdonbehalfby")]
        public SystemUser lk_grm_api_configuration_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_api_configuration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_api_configuration_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_api_configuration_modifiedby")]
        public SystemUser lk_grm_api_configuration_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_api_configuration_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_api_configuration_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_api_configuration_modifiedonbehalfby")]
        public SystemUser lk_grm_api_configuration_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_api_configuration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_api_configuration_modifiedonbehalfby", null, value);
            }
        }
        
        public static grm_api_configuration Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_api_configuration,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Assets</para>
    /// </summary>
    [EntityLogicalName("grm_assets")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_assets : ExtendedEntity<grm_assetsState, grm_assets_statuscode> {
        
        public const string EntityLogicalName = "grm_assets";
        
        public const int EntityTypeCode = 10300;
        
        public grm_assets() : 
                base(EntityLogicalName) {
        }
        
        public grm_assets(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_assetsid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_assetsid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Assets</para>
        /// </summary>
        [AttributeLogicalName("grm_assetsid")]
        [DisplayName("Assets")]
        public Guid? grm_assetsId {
            get {
                return GetAttributeValue<Guid?>("grm_assetsid");
            }
            set {
                SetId("grm_assetsid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Assets</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_assetsState? statecode {
            get {
                return GetOptionSetValue<grm_assetsState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Assets</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_assets_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_assets_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_grm_assets")]
        public BusinessUnit business_unit_grm_assets {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_grm_assets", null);
            }
            set {
                SetRelatedEntity("business_unit_grm_assets", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_account_grm_assets")]
        public IEnumerable<Account> grm_account_grm_assets {
            get {
                return GetRelatedEntities<Account>("grm_account_grm_assets", null);
            }
            set {
                SetRelatedEntities("grm_account_grm_assets", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_assets_createdby")]
        public SystemUser lk_grm_assets_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_assets_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_assets_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_assets_createdonbehalfby")]
        public SystemUser lk_grm_assets_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_assets_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_assets_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_assets_modifiedby")]
        public SystemUser lk_grm_assets_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_assets_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_assets_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_assets_modifiedonbehalfby")]
        public SystemUser lk_grm_assets_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_assets_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_assets_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_grm_assets")]
        public SystemUser user_grm_assets {
            get {
                return GetRelatedEntity<SystemUser>("user_grm_assets", null);
            }
            set {
                SetRelatedEntity("user_grm_assets", null, value);
            }
        }
        
        public static grm_assets Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_assets,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Client Service</para>
    /// </summary>
    [EntityLogicalName("grm_clientservice")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_clientservice : ExtendedEntity<grm_clientserviceState, grm_clientservice_statuscode> {
        
        public const string EntityLogicalName = "grm_clientservice";
        
        public const int EntityTypeCode = 10383;
        
        public grm_clientservice() : 
                base(EntityLogicalName) {
        }
        
        public grm_clientservice(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_clientserviceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_clientserviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Client Service</para>
        /// </summary>
        [AttributeLogicalName("grm_clientserviceid")]
        [DisplayName("Client Service")]
        public Guid? grm_clientserviceId {
            get {
                return GetAttributeValue<Guid?>("grm_clientserviceid");
            }
            set {
                SetId("grm_clientserviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: MiFID Service Group</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidservicegroup")]
        [DisplayName("MiFID Service Group")]
        public grm_mifidservicegroup? grm_MiFIDServiceGroup {
            get {
                return GetOptionSetValue<grm_mifidservicegroup>("grm_mifidservicegroup");
            }
            set {
                SetOptionSetValue("grm_mifidservicegroup", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Test type</para>
        /// </summary>
        [AttributeLogicalName("grm_testtype")]
        [DisplayName("Test type")]
        public grm_testtype? grm_Testtype {
            get {
                return GetOptionSetValue<grm_testtype>("grm_testtype");
            }
            set {
                SetOptionSetValue("grm_testtype", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Client Service</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_clientserviceState? statecode {
            get {
                return GetOptionSetValue<grm_clientserviceState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Client Service</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_clientservice_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_clientservice_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_grm_clientservice")]
        public BusinessUnit business_unit_grm_clientservice {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_grm_clientservice", null);
            }
            set {
                SetRelatedEntity("business_unit_grm_clientservice", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_clientservice_createdby")]
        public SystemUser lk_grm_clientservice_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_clientservice_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_clientservice_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_clientservice_createdonbehalfby")]
        public SystemUser lk_grm_clientservice_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_clientservice_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_clientservice_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_clientservice_modifiedby")]
        public SystemUser lk_grm_clientservice_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_clientservice_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_clientservice_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_clientservice_modifiedonbehalfby")]
        public SystemUser lk_grm_clientservice_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_clientservice_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_clientservice_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_grm_clientservice")]
        public SystemUser user_grm_clientservice {
            get {
                return GetRelatedEntity<SystemUser>("user_grm_clientservice", null);
            }
            set {
                SetRelatedEntity("user_grm_clientservice", null, value);
            }
        }
        
        public static grm_clientservice Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_clientservice,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Commodities</para>
    /// </summary>
    [EntityLogicalName("grm_commodities")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_commodities : ExtendedEntity<grm_commoditiesState, grm_commodities_statuscode> {
        
        public const string EntityLogicalName = "grm_commodities";
        
        public const int EntityTypeCode = 10298;
        
        public grm_commodities() : 
                base(EntityLogicalName) {
        }
        
        public grm_commodities(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_commoditiesid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_commoditiesid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Commodities</para>
        /// </summary>
        [AttributeLogicalName("grm_commoditiesid")]
        [DisplayName("Commodities")]
        public Guid? grm_commoditiesId {
            get {
                return GetAttributeValue<Guid?>("grm_commoditiesid");
            }
            set {
                SetId("grm_commoditiesid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Commodity</para>
        /// </summary>
        [AttributeLogicalName("grm_commodity")]
        [DisplayName("Commodity")]
        public grm_commodities_grm_commodity? grm_commodity {
            get {
                return GetOptionSetValue<grm_commodities_grm_commodity>("grm_commodity");
            }
            set {
                SetOptionSetValue("grm_commodity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company</para>
        /// </summary>
        [AttributeLogicalName("grm_company")]
        [DisplayName("Company")]
        public EntityReference grm_company {
            get {
                return GetAttributeValue<EntityReference>("grm_company");
            }
            set {
                SetAttributeValue("grm_company", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Periode</para>
        /// </summary>
        [AttributeLogicalName("grm_periode")]
        [DisplayName("Periode")]
        public grm_commodities_grm_periode? grm_periode {
            get {
                return GetOptionSetValue<grm_commodities_grm_periode>("grm_periode");
            }
            set {
                SetOptionSetValue("grm_periode", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Unit</para>
        /// </summary>
        [AttributeLogicalName("grm_unit")]
        [DisplayName("Unit")]
        public grm_commodities_grm_unit? grm_unit {
            get {
                return GetOptionSetValue<grm_commodities_grm_unit>("grm_unit");
            }
            set {
                SetOptionSetValue("grm_unit", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Volume</para>
        /// </summary>
        [AttributeLogicalName("grm_volume")]
        [DisplayName("Volume")]
        [Range(-2147483648, 2147483647)]
        public int? grm_volume {
            get {
                return GetAttributeValue<int?>("grm_volume");
            }
            set {
                SetAttributeValue("grm_volume", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Commodities</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_commoditiesState? statecode {
            get {
                return GetOptionSetValue<grm_commoditiesState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Commodities</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_commodities_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_commodities_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_grm_commodities")]
        public BusinessUnit business_unit_grm_commodities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_grm_commodities", null);
            }
            set {
                SetRelatedEntity("business_unit_grm_commodities", null, value);
            }
        }
        
        [AttributeLogicalName("grm_company")]
        [RelationshipSchemaName("grm_account_grm_commodities_company")]
        public Account grm_account_grm_commodities_company {
            get {
                return GetRelatedEntity<Account>("grm_account_grm_commodities_company", null);
            }
            set {
                SetRelatedEntity("grm_account_grm_commodities_company", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_commodities_createdby")]
        public SystemUser lk_grm_commodities_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_commodities_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_commodities_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_commodities_createdonbehalfby")]
        public SystemUser lk_grm_commodities_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_commodities_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_commodities_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_commodities_modifiedby")]
        public SystemUser lk_grm_commodities_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_commodities_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_commodities_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_commodities_modifiedonbehalfby")]
        public SystemUser lk_grm_commodities_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_commodities_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_commodities_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_grm_commodities")]
        public SystemUser user_grm_commodities {
            get {
                return GetRelatedEntity<SystemUser>("user_grm_commodities", null);
            }
            set {
                SetRelatedEntity("user_grm_commodities", null, value);
            }
        }
        
        public static grm_commodities Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_commodities,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [EntityLogicalName("grm_countries")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_countries : ExtendedEntity<grm_countriesState, grm_countries_statuscode> {
        
        public const string EntityLogicalName = "grm_countries";
        
        public const int EntityTypeCode = 10294;
        
        public grm_countries() : 
                base(EntityLogicalName) {
        }
        
        public grm_countries(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_countriesid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_countriesid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Countries</para>
        /// </summary>
        [AttributeLogicalName("grm_countriesid")]
        [DisplayName("Countries")]
        public Guid? grm_countriesId {
            get {
                return GetAttributeValue<Guid?>("grm_countriesid");
            }
            set {
                SetId("grm_countriesid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Country")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Score</para>
        /// </summary>
        [AttributeLogicalName("grm_score")]
        [DisplayName("Score")]
        [Range(-2147483648, 2147483647)]
        public int? grm_Score {
            get {
                return GetAttributeValue<int?>("grm_score");
            }
            set {
                SetAttributeValue("grm_score", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: EU High Risk third country</para>
        /// </summary>
        [AttributeLogicalName("grm_eu_high_risk_third_country")]
        [DisplayName("EU High Risk third country")]
        public bool? grm_eu_high_risk_third_country {
            get {
                return GetAttributeValue<bool?>("grm_eu_high_risk_third_country");
            }
            set {
                SetAttributeValue("grm_eu_high_risk_third_country", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: EU Country</para>
        /// </summary>
        [AttributeLogicalName("grm_eucountry")]
        [DisplayName("EU Country")]
        public bool? grm_eucountry {
            get {
                return GetAttributeValue<bool?>("grm_eucountry");
            }
            set {
                SetAttributeValue("grm_eucountry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Governing Law</para>
        /// </summary>
        [AttributeLogicalName("grm_governinglaw")]
        [DisplayName("Governing Law")]
        public string grm_governinglaw {
            get {
                return GetAttributeValue<string>("grm_governinglaw");
            }
            set {
                SetAttributeValue("grm_governinglaw", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Governing Law Text CSA</para>
        /// </summary>
        [AttributeLogicalName("grm_governinglawtextcsa")]
        [DisplayName("Governing Law Text CSA")]
        public string grm_governinglawtextcsa {
            get {
                return GetAttributeValue<string>("grm_governinglawtextcsa");
            }
            set {
                SetAttributeValue("grm_governinglawtextcsa", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Law</para>
        /// </summary>
        [AttributeLogicalName("grm_law")]
        [DisplayName("Law")]
        [MaxLength(100)]
        public string grm_law {
            get {
                return GetAttributeValue<string>("grm_law");
            }
            set {
                SetAttributeValue("grm_law", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Medium risk country</para>
        /// </summary>
        [AttributeLogicalName("grm_mediumriskcountry")]
        [DisplayName("Medium risk country")]
        public bool? grm_mediumriskcountry {
            get {
                return GetAttributeValue<bool?>("grm_mediumriskcountry");
            }
            set {
                SetAttributeValue("grm_mediumriskcountry", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Country")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: On saction list</para>
        /// </summary>
        [AttributeLogicalName("grm_onsanctionlist")]
        [DisplayName("On saction list")]
        public bool? grm_onsanctionlist {
            get {
                return GetAttributeValue<bool?>("grm_onsanctionlist");
            }
            set {
                SetAttributeValue("grm_onsanctionlist", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Red flag</para>
        /// </summary>
        [AttributeLogicalName("grm_redflag")]
        [DisplayName("Red flag")]
        public bool? grm_redflag {
            get {
                return GetAttributeValue<bool?>("grm_redflag");
            }
            set {
                SetAttributeValue("grm_redflag", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk Level</para>
        /// </summary>
        [AttributeLogicalName("grm_risklevel")]
        [DisplayName("Risk Level")]
        public grm_countries_grm_risklevel? grm_risklevel {
            get {
                return GetOptionSetValue<grm_countries_grm_risklevel>("grm_risklevel");
            }
            set {
                SetOptionSetValue("grm_risklevel", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Countries</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_countriesState? statecode {
            get {
                return GetOptionSetValue<grm_countriesState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Countries</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_countries_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_countries_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_countries_account_country")]
        public IEnumerable<Account> grm_grm_countries_account_country {
            get {
                return GetRelatedEntities<Account>("grm_grm_countries_account_country", null);
            }
            set {
                SetRelatedEntities("grm_grm_countries_account_country", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_countries_account_countryofincorporation")]
        public IEnumerable<Account> grm_grm_countries_account_countryofincorporation {
            get {
                return GetRelatedEntities<Account>("grm_grm_countries_account_countryofincorporation", null);
            }
            set {
                SetRelatedEntities("grm_grm_countries_account_countryofincorporation", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_countries_account_countryofnationality")]
        public IEnumerable<Account> grm_grm_countries_account_countryofnationality {
            get {
                return GetRelatedEntities<Account>("grm_grm_countries_account_countryofnationality", null);
            }
            set {
                SetRelatedEntities("grm_grm_countries_account_countryofnationality", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_countries_account_countryofoperation")]
        public IEnumerable<Account> grm_grm_countries_account_countryofoperation {
            get {
                return GetRelatedEntities<Account>("grm_grm_countries_account_countryofoperation", null);
            }
            set {
                SetRelatedEntities("grm_grm_countries_account_countryofoperation", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_countries_account_legal_country")]
        public IEnumerable<Account> grm_grm_countries_account_legal_country {
            get {
                return GetRelatedEntities<Account>("grm_grm_countries_account_legal_country", null);
            }
            set {
                SetRelatedEntities("grm_grm_countries_account_legal_country", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_countries_contact_country")]
        public IEnumerable<Contact> grm_grm_countries_contact_country {
            get {
                return GetRelatedEntities<Contact>("grm_grm_countries_contact_country", null);
            }
            set {
                SetRelatedEntities("grm_grm_countries_contact_country", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_countries_grm_kyclog_legalcountry")]
        public IEnumerable<grm_kyclog> grm_grm_countries_grm_kyclog_legalcountry {
            get {
                return GetRelatedEntities<grm_kyclog>("grm_grm_countries_grm_kyclog_legalcountry", null);
            }
            set {
                SetRelatedEntities("grm_grm_countries_grm_kyclog_legalcountry", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_kyc_update_account_country_grm_countr")]
        public IEnumerable<grm_kyc_update> grm_kyc_update_account_country_grm_countr {
            get {
                return GetRelatedEntities<grm_kyc_update>("grm_kyc_update_account_country_grm_countr", null);
            }
            set {
                SetRelatedEntities("grm_kyc_update_account_country_grm_countr", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_countries_createdby")]
        public SystemUser lk_grm_countries_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_countries_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_countries_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_countries_createdonbehalfby")]
        public SystemUser lk_grm_countries_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_countries_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_countries_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_countries_modifiedby")]
        public SystemUser lk_grm_countries_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_countries_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_countries_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_countries_modifiedonbehalfby")]
        public SystemUser lk_grm_countries_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_countries_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_countries_modifiedonbehalfby", null, value);
            }
        }
        
        public static grm_countries Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_countries,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'Name'</para>
        /// </summary>
        public static grm_countries Retrieve_grm_name(IOrganizationService service, string grm_name, params Expression<Func<grm_countries,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("grm_name", grm_name);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'Name'</para>
        /// </summary>
        public void AltKey_grm_name(string grm_name) {
            KeyAttributes.Clear();
            KeyAttributes.Add("grm_name", grm_name);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Industry</para>
    /// </summary>
    [EntityLogicalName("grm_industry")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_industry : ExtendedEntity<grm_industryState, grm_industry_statuscode> {
        
        public const string EntityLogicalName = "grm_industry";
        
        public const int EntityTypeCode = 10313;
        
        public grm_industry() : 
                base(EntityLogicalName) {
        }
        
        public grm_industry(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_industryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_industryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("grm_industryid")]
        [DisplayName("Industry")]
        public Guid? grm_industryId {
            get {
                return GetAttributeValue<Guid?>("grm_industryid");
            }
            set {
                SetId("grm_industryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk</para>
        /// </summary>
        [AttributeLogicalName("grm_risk")]
        [DisplayName("Risk")]
        public grm_risklevel? grm_risk {
            get {
                return GetOptionSetValue<grm_risklevel>("grm_risk");
            }
            set {
                SetOptionSetValue("grm_risk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Score</para>
        /// </summary>
        [AttributeLogicalName("grm_score")]
        [DisplayName("Score")]
        public decimal? grm_score {
            get {
                return GetAttributeValue<decimal?>("grm_score");
            }
            set {
                SetAttributeValue("grm_score", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Industry</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_industryState? statecode {
            get {
                return GetOptionSetValue<grm_industryState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Industry</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_industry_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_industry_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_industry_account")]
        public IEnumerable<Account> grm_grm_industry_account {
            get {
                return GetRelatedEntities<Account>("grm_grm_industry_account", null);
            }
            set {
                SetRelatedEntities("grm_grm_industry_account", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_industry_createdby")]
        public SystemUser lk_grm_industry_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_industry_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_industry_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_industry_createdonbehalfby")]
        public SystemUser lk_grm_industry_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_industry_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_industry_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_industry_modifiedby")]
        public SystemUser lk_grm_industry_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_industry_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_industry_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_industry_modifiedonbehalfby")]
        public SystemUser lk_grm_industry_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_industry_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_industry_modifiedonbehalfby", null, value);
            }
        }
        
        public static grm_industry Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_industry,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: KYC Update</para>
    /// </summary>
    [EntityLogicalName("grm_kyc_update")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_kyc_update : ExtendedEntity<grm_kyc_updateState, grm_kyc_update_statuscode> {
        
        public const string EntityLogicalName = "grm_kyc_update";
        
        public const int EntityTypeCode = 10463;
        
        public grm_kyc_update() : 
                base(EntityLogicalName) {
        }
        
        public grm_kyc_update(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_kyc_updateid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_kyc_updateid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: KYC Update</para>
        /// </summary>
        [AttributeLogicalName("grm_kyc_updateid")]
        [DisplayName("KYC Update")]
        public Guid? grm_kyc_updateId {
            get {
                return GetAttributeValue<Guid?>("grm_kyc_updateid");
            }
            set {
                SetId("grm_kyc_updateid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Required name field</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Certificate of incorporation</para>
        /// </summary>
        [AttributeLogicalName("grm_certificate_of_incorporation")]
        [DisplayName("Certificate of incorporation")]
        public grm_kyc_update_received_not_applicable? grm_Certificate_of_incorporation {
            get {
                return GetOptionSetValue<grm_kyc_update_received_not_applicable>("grm_certificate_of_incorporation");
            }
            set {
                SetOptionSetValue("grm_certificate_of_incorporation", value);
            }
        }
        
        /// <summary>
        /// <para>Required name field</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_Name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("grm_account")]
        [DisplayName("Account")]
        public EntityReference grm_account {
            get {
                return GetAttributeValue<EntityReference>("grm_account");
            }
            set {
                SetAttributeValue("grm_account", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Account country</para>
        /// </summary>
        [AttributeLogicalName("grm_account_country")]
        [DisplayName("Account country")]
        public EntityReference grm_account_country {
            get {
                return GetAttributeValue<EntityReference>("grm_account_country");
            }
            set {
                SetAttributeValue("grm_account_country", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Account Risk level</para>
        /// </summary>
        [AttributeLogicalName("grm_account_risk_level")]
        [DisplayName("Account Risk level")]
        public grm_risklevel? grm_account_risk_level {
            get {
                return GetOptionSetValue<grm_risklevel>("grm_account_risk_level");
            }
            set {
                SetOptionSetValue("grm_account_risk_level", value);
            }
        }
        
        /// <summary>
        /// <para>Do an additional Adverse Media screening to the DJ screening on the client, the Directors and the beneficial owners</para>
        /// <para>Display Name: Additional Adverse Media screening</para>
        /// </summary>
        [AttributeLogicalName("grm_additional_adverse_media_screening")]
        [DisplayName("Additional Adverse Media screening")]
        public bool? grm_additional_adverse_media_screening {
            get {
                return GetAttributeValue<bool?>("grm_additional_adverse_media_screening");
            }
            set {
                SetAttributeValue("grm_additional_adverse_media_screening", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information about the clients supposed trading pattern and which products they wish to trade which must include the rationale behind the client’s need for hedging in specific products</para>
        /// <para>Display Name: Additional information about the trading pattern</para>
        /// </summary>
        [AttributeLogicalName("grm_additional_information_trade_pattern")]
        [DisplayName("Additional information about the trading pattern")]
        public grm_kycu_update_findings? grm_additional_information_trade_pattern {
            get {
                return GetOptionSetValue<grm_kycu_update_findings>("grm_additional_information_trade_pattern");
            }
            set {
                SetOptionSetValue("grm_additional_information_trade_pattern", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Articles of association</para>
        /// </summary>
        [AttributeLogicalName("grm_articles_of_association")]
        [DisplayName("Articles of association")]
        public grm_kycu_update_findings? grm_articles_of_association {
            get {
                return GetOptionSetValue<grm_kycu_update_findings>("grm_articles_of_association");
            }
            set {
                SetOptionSetValue("grm_articles_of_association", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Authorisation to sign on behalf of the company</para>
        /// </summary>
        [AttributeLogicalName("grm_authorisation_to_sign_on_behalf")]
        [DisplayName("Authorisation to sign on behalf of the company")]
        public grm_kycu_update_findings? grm_authorisation_to_sign_on_behalf {
            get {
                return GetOptionSetValue<grm_kycu_update_findings>("grm_authorisation_to_sign_on_behalf");
            }
            set {
                SetOptionSetValue("grm_authorisation_to_sign_on_behalf", value);
            }
        }
        
        /// <summary>
        /// <para>Does the name, address and unique company number consist with the one on the Onboarding Form and the address in CRM?
        ///Can you establish who can sign on behalf of the client?
        ///Does the transcript look legit?</para>
        /// <para>Display Name: Certificate of incorporation – certified </para>
        /// </summary>
        [AttributeLogicalName("grm_certificate_of_incorp_certified")]
        [DisplayName("Certificate of incorporation – certified ")]
        public grm_kyc_update_received_not_applicable? grm_certificate_of_incorp_certified {
            get {
                return GetOptionSetValue<grm_kyc_update_received_not_applicable>("grm_certificate_of_incorp_certified");
            }
            set {
                SetOptionSetValue("grm_certificate_of_incorp_certified", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Deadline</para>
        /// </summary>
        [AttributeLogicalName("grm_deadline")]
        [DisplayName("Deadline")]
        public DateTime? grm_deadline {
            get {
                return GetAttributeValue<DateTime?>("grm_deadline");
            }
            set {
                SetAttributeValue("grm_deadline", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: High risk third country</para>
        /// </summary>
        [AttributeLogicalName("grm_high_risk_third_country")]
        [DisplayName("High risk third country")]
        public bool? grm_high_risk_third_country {
            get {
                return GetAttributeValue<bool?>("grm_high_risk_third_country");
            }
            set {
                SetAttributeValue("grm_high_risk_third_country", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Identity of the Directors</para>
        /// </summary>
        [AttributeLogicalName("grm_identity_of_the_directors")]
        [DisplayName("Identity of the Directors")]
        public grm_kycu_update_findings? grm_identity_of_the_directors {
            get {
                return GetOptionSetValue<grm_kycu_update_findings>("grm_identity_of_the_directors");
            }
            set {
                SetOptionSetValue("grm_identity_of_the_directors", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Is UAE?</para>
        /// </summary>
        [AttributeLogicalName("grm_is_uae")]
        [DisplayName("Is UAE?")]
        public bool? grm_is_uae {
            get {
                return GetAttributeValue<bool?>("grm_is_uae");
            }
            set {
                SetAttributeValue("grm_is_uae", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Is a new risk assessment of the client required?</para>
        /// </summary>
        [AttributeLogicalName("grm_isanewriskassessmentoftheclient")]
        [DisplayName("Is a new risk assessment of the client required?")]
        public grm_yesno? grm_isanewriskassessmentoftheclient {
            get {
                return GetOptionSetValue<grm_yesno>("grm_isanewriskassessmentoftheclient");
            }
            set {
                SetOptionSetValue("grm_isanewriskassessmentoftheclient", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Overview of the ownership structure</para>
        /// </summary>
        [AttributeLogicalName("grm_overview_of_the_ownership_structure")]
        [DisplayName("Overview of the ownership structure")]
        public grm_kycu_update_findings? grm_overview_of_the_ownership_structure {
            get {
                return GetOptionSetValue<grm_kycu_update_findings>("grm_overview_of_the_ownership_structure");
            }
            set {
                SetOptionSetValue("grm_overview_of_the_ownership_structure", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: PEP Screening of BOs</para>
        /// </summary>
        [AttributeLogicalName("grm_pep_screening_of_bos")]
        [DisplayName("PEP Screening of BOs")]
        public bool? grm_pep_screening_of_bos {
            get {
                return GetAttributeValue<bool?>("grm_pep_screening_of_bos");
            }
            set {
                SetAttributeValue("grm_pep_screening_of_bos", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: PEP screening of Directors/Management</para>
        /// </summary>
        [AttributeLogicalName("grm_pep_screening_of_directors_management")]
        [DisplayName("PEP screening of Directors/Management")]
        public bool? grm_pep_screening_of_directors_management {
            get {
                return GetAttributeValue<bool?>("grm_pep_screening_of_directors_management");
            }
            set {
                SetAttributeValue("grm_pep_screening_of_directors_management", value);
            }
        }
        
        /// <summary>
        /// <para>Proof of residency for the controlling persons/beneficial owners</para>
        /// <para>Display Name: Proof of residency for BOs</para>
        /// </summary>
        [AttributeLogicalName("grm_proof_of_residency_for_bos")]
        [DisplayName("Proof of residency for BOs")]
        public grm_kyc_update_received_not_applicable? grm_proof_of_residency_for_bos {
            get {
                return GetOptionSetValue<grm_kyc_update_received_not_applicable>("grm_proof_of_residency_for_bos");
            }
            set {
                SetOptionSetValue("grm_proof_of_residency_for_bos", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sanctions screening</para>
        /// </summary>
        [AttributeLogicalName("grm_sanctions_screening")]
        [DisplayName("Sanctions screening")]
        public bool? grm_sanctions_screening {
            get {
                return GetAttributeValue<bool?>("grm_sanctions_screening");
            }
            set {
                SetAttributeValue("grm_sanctions_screening", value);
            }
        }
        
        /// <summary>
        /// <para>Screen the client and any other companies in the ownership chain in Dow Jones Risk and Compliance Database</para>
        /// <para>Display Name: Screen client and ownership chain</para>
        /// </summary>
        [AttributeLogicalName("grm_screen_client_and_ownership_chain")]
        [DisplayName("Screen client and ownership chain")]
        public bool? grm_screen_client_and_ownership_chain {
            get {
                return GetAttributeValue<bool?>("grm_screen_client_and_ownership_chain");
            }
            set {
                SetAttributeValue("grm_screen_client_and_ownership_chain", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: UAE - Trade License</para>
        /// </summary>
        [AttributeLogicalName("grm_uae_trade_license")]
        [DisplayName("UAE - Trade License")]
        public grm_kyc_update_received_not_applicable? grm_uae_trade_license {
            get {
                return GetOptionSetValue<grm_kyc_update_received_not_applicable>("grm_uae_trade_license");
            }
            set {
                SetOptionSetValue("grm_uae_trade_license", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the KYC Update</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_kyc_updateState? statecode {
            get {
                return GetOptionSetValue<grm_kyc_updateState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the KYC Update</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_kyc_update_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_kyc_update_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_grm_kyc_update")]
        public BusinessUnit business_unit_grm_kyc_update {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_grm_kyc_update", null);
            }
            set {
                SetRelatedEntity("business_unit_grm_kyc_update", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_kyc_update_Tasks")]
        public IEnumerable<Task> grm_kyc_update_Tasks {
            get {
                return GetRelatedEntities<Task>("grm_kyc_update_Tasks", null);
            }
            set {
                SetRelatedEntities("grm_kyc_update_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("grm_account")]
        [RelationshipSchemaName("grm_kyc_update_account_Account")]
        public Account grm_kyc_update_account_Account {
            get {
                return GetRelatedEntity<Account>("grm_kyc_update_account_Account", null);
            }
            set {
                SetRelatedEntity("grm_kyc_update_account_Account", null, value);
            }
        }
        
        [AttributeLogicalName("grm_account_country")]
        [RelationshipSchemaName("grm_kyc_update_account_country_grm_countr")]
        public grm_countries grm_kyc_update_account_country_grm_countr {
            get {
                return GetRelatedEntity<grm_countries>("grm_kyc_update_account_country_grm_countr", null);
            }
            set {
                SetRelatedEntity("grm_kyc_update_account_country_grm_countr", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_kyc_update_createdby")]
        public SystemUser lk_grm_kyc_update_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_kyc_update_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_kyc_update_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_kyc_update_createdonbehalfby")]
        public SystemUser lk_grm_kyc_update_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_kyc_update_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_kyc_update_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_kyc_update_modifiedby")]
        public SystemUser lk_grm_kyc_update_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_kyc_update_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_kyc_update_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_kyc_update_modifiedonbehalfby")]
        public SystemUser lk_grm_kyc_update_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_kyc_update_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_kyc_update_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_grm_kyc_update")]
        public SystemUser user_grm_kyc_update {
            get {
                return GetRelatedEntity<SystemUser>("user_grm_kyc_update", null);
            }
            set {
                SetRelatedEntity("user_grm_kyc_update", null, value);
            }
        }
        
        public static grm_kyc_update Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_kyc_update,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: KYC Log</para>
    /// </summary>
    [EntityLogicalName("grm_kyclog")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_kyclog : ExtendedEntity<grm_kyclogState, grm_kyclog_statuscode> {
        
        public const string EntityLogicalName = "grm_kyclog";
        
        public const int EntityTypeCode = 10304;
        
        public grm_kyclog() : 
                base(EntityLogicalName) {
        }
        
        public grm_kyclog(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_kyclogid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_kyclogid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: KYC Log</para>
        /// </summary>
        [AttributeLogicalName("grm_kyclogid")]
        [DisplayName("KYC Log")]
        public Guid? grm_kyclogId {
            get {
                return GetAttributeValue<Guid?>("grm_kyclogid");
            }
            set {
                SetId("grm_kyclogid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("grm_city")]
        [DisplayName("City")]
        [MaxLength(100)]
        public string grm_city {
            get {
                return GetAttributeValue<string>("grm_city");
            }
            set {
                SetAttributeValue("grm_city", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company</para>
        /// </summary>
        [AttributeLogicalName("grm_company")]
        [DisplayName("Company")]
        public EntityReference grm_company {
            get {
                return GetAttributeValue<EntityReference>("grm_company");
            }
            set {
                SetAttributeValue("grm_company", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusion - client's trading</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusionclientstrading")]
        [DisplayName("Conclusion - client\'s trading")]
        public grm_conclusion? grm_conclusionclientstrading {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusionclientstrading");
            }
            set {
                SetOptionSetValue("grm_conclusionclientstrading", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Conclusion - expected scope</para>
        /// </summary>
        [AttributeLogicalName("grm_conclusionexpectedscope")]
        [DisplayName("Conclusion - expected scope")]
        public grm_conclusion? grm_conclusionexpectedscope {
            get {
                return GetOptionSetValue<grm_conclusion>("grm_conclusionexpectedscope");
            }
            set {
                SetOptionSetValue("grm_conclusionexpectedscope", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Final approval</para>
        /// </summary>
        [AttributeLogicalName("grm_finalapproval")]
        [DisplayName("Final approval")]
        public DateTime? grm_finalapproval {
            get {
                return GetAttributeValue<DateTime?>("grm_finalapproval");
            }
            set {
                SetAttributeValue("grm_finalapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Final risk score</para>
        /// </summary>
        [AttributeLogicalName("grm_finalriskscore")]
        [DisplayName("Final risk score")]
        public decimal? grm_finalriskscore {
            get {
                return GetAttributeValue<decimal?>("grm_finalriskscore");
            }
            set {
                SetAttributeValue("grm_finalriskscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - client’s relationship</para>
        /// </summary>
        [AttributeLogicalName("grm_findingsclientsrelationship")]
        [DisplayName("Findings - client’s relationship")]
        public string grm_findingsclientsrelationship {
            get {
                return GetAttributeValue<string>("grm_findingsclientsrelationship");
            }
            set {
                SetAttributeValue("grm_findingsclientsrelationship", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Findings - expected scope</para>
        /// </summary>
        [AttributeLogicalName("grm_findingsexpectedscope")]
        [DisplayName("Findings - expected scope")]
        public string grm_findingsexpectedscope {
            get {
                return GetAttributeValue<string>("grm_findingsexpectedscope");
            }
            set {
                SetAttributeValue("grm_findingsexpectedscope", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Initial approval</para>
        /// </summary>
        [AttributeLogicalName("grm_initialapproval")]
        [DisplayName("Initial approval")]
        public DateTime? grm_initialapproval {
            get {
                return GetAttributeValue<DateTime?>("grm_initialapproval");
            }
            set {
                SetAttributeValue("grm_initialapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KYC complete</para>
        /// </summary>
        [AttributeLogicalName("grm_kyccomplete")]
        [DisplayName("KYC complete")]
        public DateTime? grm_kyccomplete {
            get {
                return GetAttributeValue<DateTime?>("grm_kyccomplete");
            }
            set {
                SetAttributeValue("grm_kyccomplete", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Legal Country</para>
        /// </summary>
        [AttributeLogicalName("grm_legalcountry")]
        [DisplayName("Legal Country")]
        public EntityReference grm_legalcountry {
            get {
                return GetAttributeValue<EntityReference>("grm_legalcountry");
            }
            set {
                SetAttributeValue("grm_legalcountry", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("grm_street1")]
        [DisplayName("Street 1")]
        [MaxLength(100)]
        public string grm_street1 {
            get {
                return GetAttributeValue<string>("grm_street1");
            }
            set {
                SetAttributeValue("grm_street1", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("grm_street2")]
        [DisplayName("Street 2")]
        [MaxLength(100)]
        public string grm_street2 {
            get {
                return GetAttributeValue<string>("grm_street2");
            }
            set {
                SetAttributeValue("grm_street2", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("grm_street3")]
        [DisplayName("Street 3")]
        [MaxLength(100)]
        public string grm_street3 {
            get {
                return GetAttributeValue<string>("grm_street3");
            }
            set {
                SetAttributeValue("grm_street3", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the KYC Log</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_kyclogState? statecode {
            get {
                return GetOptionSetValue<grm_kyclogState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the KYC Log</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_kyclog_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_kyclog_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("grm_company")]
        [RelationshipSchemaName("grm_account_grm_kyclog_company")]
        public Account grm_account_grm_kyclog_company {
            get {
                return GetRelatedEntity<Account>("grm_account_grm_kyclog_company", null);
            }
            set {
                SetRelatedEntity("grm_account_grm_kyclog_company", null, value);
            }
        }
        
        [AttributeLogicalName("grm_legalcountry")]
        [RelationshipSchemaName("grm_grm_countries_grm_kyclog_legalcountry")]
        public grm_countries grm_grm_countries_grm_kyclog_legalcountry {
            get {
                return GetRelatedEntity<grm_countries>("grm_grm_countries_grm_kyclog_legalcountry", null);
            }
            set {
                SetRelatedEntity("grm_grm_countries_grm_kyclog_legalcountry", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_kyclog_createdby")]
        public SystemUser lk_grm_kyclog_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_kyclog_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_kyclog_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_kyclog_createdonbehalfby")]
        public SystemUser lk_grm_kyclog_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_kyclog_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_kyclog_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_kyclog_modifiedby")]
        public SystemUser lk_grm_kyclog_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_kyclog_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_kyclog_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_kyclog_modifiedonbehalfby")]
        public SystemUser lk_grm_kyclog_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_kyclog_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_kyclog_modifiedonbehalfby", null, value);
            }
        }
        
        public static grm_kyclog Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_kyclog,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Legal Structure</para>
    /// </summary>
    [EntityLogicalName("grm_legalstructure")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_legalstructure : ExtendedEntity<grm_legalstructureState, grm_legalstructure_statuscode> {
        
        public const string EntityLogicalName = "grm_legalstructure";
        
        public const int EntityTypeCode = 10312;
        
        public grm_legalstructure() : 
                base(EntityLogicalName) {
        }
        
        public grm_legalstructure(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_legalstructureid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_legalstructureid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Legal Structure</para>
        /// </summary>
        [AttributeLogicalName("grm_legalstructureid")]
        [DisplayName("Legal Structure")]
        public Guid? grm_legalstructureId {
            get {
                return GetAttributeValue<Guid?>("grm_legalstructureid");
            }
            set {
                SetId("grm_legalstructureid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Score</para>
        /// </summary>
        [AttributeLogicalName("grm_score")]
        [DisplayName("Score")]
        public decimal? grm_Score {
            get {
                return GetAttributeValue<decimal?>("grm_score");
            }
            set {
                SetAttributeValue("grm_score", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk</para>
        /// </summary>
        [AttributeLogicalName("grm_risk")]
        [DisplayName("Risk")]
        public grm_risklevel? grm_risk {
            get {
                return GetOptionSetValue<grm_risklevel>("grm_risk");
            }
            set {
                SetOptionSetValue("grm_risk", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Legal Structure</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_legalstructureState? statecode {
            get {
                return GetOptionSetValue<grm_legalstructureState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Legal Structure</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_legalstructure_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_legalstructure_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_legalstructure_account")]
        public IEnumerable<Account> grm_grm_legalstructure_account {
            get {
                return GetRelatedEntities<Account>("grm_grm_legalstructure_account", null);
            }
            set {
                SetRelatedEntities("grm_grm_legalstructure_account", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_legalstructure_createdby")]
        public SystemUser lk_grm_legalstructure_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_legalstructure_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_legalstructure_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_legalstructure_createdonbehalfby")]
        public SystemUser lk_grm_legalstructure_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_legalstructure_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_legalstructure_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_legalstructure_modifiedby")]
        public SystemUser lk_grm_legalstructure_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_legalstructure_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_legalstructure_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_legalstructure_modifiedonbehalfby")]
        public SystemUser lk_grm_legalstructure_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_legalstructure_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_legalstructure_modifiedonbehalfby", null, value);
            }
        }
        
        public static grm_legalstructure Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_legalstructure,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Mifid</para>
    /// </summary>
    [EntityLogicalName("grm_mifid")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_mifid : ExtendedEntity<grm_mifidState, grm_mifid_statuscode> {
        
        public const string EntityLogicalName = "grm_mifid";
        
        public const int EntityTypeCode = 10381;
        
        public grm_mifid() : 
                base(EntityLogicalName) {
        }
        
        public grm_mifid(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_mifidid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_mifidid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Mifid</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidid")]
        [DisplayName("Mifid")]
        public Guid? grm_mifidId {
            get {
                return GetAttributeValue<Guid?>("grm_mifidid");
            }
            set {
                SetId("grm_mifidid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Classification Comments</para>
        /// </summary>
        [AttributeLogicalName("grm_classificationcomments")]
        [DisplayName("Classification Comments")]
        public string grm_ClassificationComments {
            get {
                return GetAttributeValue<string>("grm_classificationcomments");
            }
            set {
                SetAttributeValue("grm_classificationcomments", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company Type</para>
        /// </summary>
        [AttributeLogicalName("grm_companytype")]
        [DisplayName("Company Type")]
        public grm_companytype? grm_CompanyType {
            get {
                return GetOptionSetValue<grm_companytype>("grm_companytype");
            }
            set {
                SetOptionSetValue("grm_companytype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Inherent Classification</para>
        /// </summary>
        [AttributeLogicalName("grm_inherentclassification")]
        [DisplayName("Inherent Classification")]
        public grm_classification? grm_InherentClassification {
            get {
                return GetOptionSetValue<grm_classification>("grm_inherentclassification");
            }
            set {
                SetOptionSetValue("grm_inherentclassification", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Product Info Sent</para>
        /// </summary>
        [AttributeLogicalName("grm_productinfosent")]
        [DisplayName("Product Info Sent")]
        public bool? grm_ProductInfoSent {
            get {
                return GetAttributeValue<bool?>("grm_productinfosent");
            }
            set {
                SetAttributeValue("grm_productinfosent", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Product(s) Determined</para>
        /// </summary>
        [AttributeLogicalName("grm_productsdetermined")]
        [DisplayName("Product(s) Determined")]
        public bool? grm_ProductsDetermined {
            get {
                return GetAttributeValue<bool?>("grm_productsdetermined");
            }
            set {
                SetAttributeValue("grm_productsdetermined", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Questionnaire Sent</para>
        /// </summary>
        [AttributeLogicalName("grm_questionnairesent")]
        [DisplayName("Questionnaire Sent")]
        public bool? grm_QuestionnaireSent {
            get {
                return GetAttributeValue<bool?>("grm_questionnairesent");
            }
            set {
                SetAttributeValue("grm_questionnairesent", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Residual Classification</para>
        /// </summary>
        [AttributeLogicalName("grm_residualclassification")]
        [DisplayName("Residual Classification")]
        public grm_classification? grm_ResidualClassification {
            get {
                return GetOptionSetValue<grm_classification>("grm_residualclassification");
            }
            set {
                SetOptionSetValue("grm_residualclassification", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Service(s) Selected</para>
        /// </summary>
        [AttributeLogicalName("grm_servicesselected")]
        [DisplayName("Service(s) Selected")]
        public bool? grm_ServicesSelected {
            get {
                return GetAttributeValue<bool?>("grm_servicesselected");
            }
            set {
                SetAttributeValue("grm_servicesselected", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company</para>
        /// </summary>
        [AttributeLogicalName("grm_company")]
        [DisplayName("Company")]
        public EntityReference grm_company {
            get {
                return GetAttributeValue<EntityReference>("grm_company");
            }
            set {
                SetAttributeValue("grm_company", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Primary Contact</para>
        /// </summary>
        [AttributeLogicalName("grm_primarycontact")]
        [DisplayName("Primary Contact")]
        public EntityReference grm_primarycontact {
            get {
                return GetAttributeValue<EntityReference>("grm_primarycontact");
            }
            set {
                SetAttributeValue("grm_primarycontact", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the process associated with the entity.</para>
        /// <para>Display Name: Process Id</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process Id")]
        public Guid? processid {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the stage where the entity is located.</para>
        /// <para>Display Name: (Deprecated) Stage Id</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Stage Id")]
        public Guid? stageid {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Mifid</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_mifidState? statecode {
            get {
                return GetOptionSetValue<grm_mifidState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Mifid</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_mifid_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_mifid_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string traversedpath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_grm_mifid")]
        public BusinessUnit business_unit_grm_mifid {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_grm_mifid", null);
            }
            set {
                SetRelatedEntity("business_unit_grm_mifid", null, value);
            }
        }
        
        [AttributeLogicalName("grm_company")]
        [RelationshipSchemaName("grm_account_grm_mifid_company")]
        public Account grm_account_grm_mifid_company {
            get {
                return GetRelatedEntity<Account>("grm_account_grm_mifid_company", null);
            }
            set {
                SetRelatedEntity("grm_account_grm_mifid_company", null, value);
            }
        }
        
        [AttributeLogicalName("grm_primarycontact")]
        [RelationshipSchemaName("grm_contact_grm_mifid_primarycontact")]
        public Contact grm_contact_grm_mifid_primarycontact {
            get {
                return GetRelatedEntity<Contact>("grm_contact_grm_mifid_primarycontact", null);
            }
            set {
                SetRelatedEntity("grm_contact_grm_mifid_primarycontact", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_mifid_grm_mifidproduct_MiFIDregarding")]
        public IEnumerable<grm_mifidproduct> grm_grm_mifid_grm_mifidproduct_MiFIDregarding {
            get {
                return GetRelatedEntities<grm_mifidproduct>("grm_grm_mifid_grm_mifidproduct_MiFIDregarding", null);
            }
            set {
                SetRelatedEntities("grm_grm_mifid_grm_mifidproduct_MiFIDregarding", null, value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_mifid_grm_mifidservices_MiFIDregarding")]
        public IEnumerable<grm_mifidservices> grm_grm_mifid_grm_mifidservices_MiFIDregarding {
            get {
                return GetRelatedEntities<grm_mifidservices>("grm_grm_mifid_grm_mifidservices_MiFIDregarding", null);
            }
            set {
                SetRelatedEntities("grm_grm_mifid_grm_mifidservices_MiFIDregarding", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_mifid_createdby")]
        public SystemUser lk_grm_mifid_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifid_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifid_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_mifid_createdonbehalfby")]
        public SystemUser lk_grm_mifid_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifid_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifid_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_mifid_modifiedby")]
        public SystemUser lk_grm_mifid_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifid_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifid_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_mifid_modifiedonbehalfby")]
        public SystemUser lk_grm_mifid_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifid_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifid_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_grm_mifid")]
        public SystemUser user_grm_mifid {
            get {
                return GetRelatedEntity<SystemUser>("user_grm_mifid", null);
            }
            set {
                SetRelatedEntity("user_grm_mifid", null, value);
            }
        }
        
        public static grm_mifid Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_mifid,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: MiFID Product</para>
    /// </summary>
    [EntityLogicalName("grm_mifidproduct")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_mifidproduct : ExtendedEntity<grm_mifidproductState, grm_mifidproduct_statuscode> {
        
        public const string EntityLogicalName = "grm_mifidproduct";
        
        public const int EntityTypeCode = 10384;
        
        public grm_mifidproduct() : 
                base(EntityLogicalName) {
        }
        
        public grm_mifidproduct(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_mifidproductid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_mifidproductid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: MiFID Product</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidproductid")]
        [DisplayName("MiFID Product")]
        public Guid? grm_mifidproductId {
            get {
                return GetAttributeValue<Guid?>("grm_mifidproductid");
            }
            set {
                SetId("grm_mifidproductid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Approved</para>
        /// </summary>
        [AttributeLogicalName("grm_approved")]
        [DisplayName("Approved")]
        public bool? grm_Approved {
            get {
                return GetAttributeValue<bool?>("grm_approved");
            }
            set {
                SetAttributeValue("grm_approved", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Comments</para>
        /// </summary>
        [AttributeLogicalName("grm_comments")]
        [DisplayName("Comments")]
        public string grm_Comments {
            get {
                return GetAttributeValue<string>("grm_comments");
            }
            set {
                SetAttributeValue("grm_comments", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Complexity</para>
        /// </summary>
        [AttributeLogicalName("grm_complexity")]
        [DisplayName("Complexity")]
        public grm_productcomplexity? grm_Complexity {
            get {
                return GetOptionSetValue<grm_productcomplexity>("grm_complexity");
            }
            set {
                SetOptionSetValue("grm_complexity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Liquidity</para>
        /// </summary>
        [AttributeLogicalName("grm_liquidity")]
        [DisplayName("Liquidity")]
        public grm_productliquidity? grm_Liquidity {
            get {
                return GetOptionSetValue<grm_productliquidity>("grm_liquidity");
            }
            set {
                SetOptionSetValue("grm_liquidity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: MiFID Regarding</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidregarding")]
        [DisplayName("MiFID Regarding")]
        public EntityReference grm_MiFIDregarding {
            get {
                return GetAttributeValue<EntityReference>("grm_mifidregarding");
            }
            set {
                SetAttributeValue("grm_mifidregarding", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Product</para>
        /// </summary>
        [AttributeLogicalName("grm_productid")]
        [DisplayName("Product")]
        public EntityReference grm_productid {
            get {
                return GetAttributeValue<EntityReference>("grm_productid");
            }
            set {
                SetAttributeValue("grm_productid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the MiFID Product</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_mifidproductState? statecode {
            get {
                return GetOptionSetValue<grm_mifidproductState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the MiFID Product</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_mifidproduct_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_mifidproduct_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_grm_mifidproduct")]
        public BusinessUnit business_unit_grm_mifidproduct {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_grm_mifidproduct", null);
            }
            set {
                SetRelatedEntity("business_unit_grm_mifidproduct", null, value);
            }
        }
        
        [AttributeLogicalName("grm_mifidregarding")]
        [RelationshipSchemaName("grm_grm_mifid_grm_mifidproduct_MiFIDregarding")]
        public grm_mifid grm_grm_mifid_grm_mifidproduct_MiFIDregarding {
            get {
                return GetRelatedEntity<grm_mifid>("grm_grm_mifid_grm_mifidproduct_MiFIDregarding", null);
            }
            set {
                SetRelatedEntity("grm_grm_mifid_grm_mifidproduct_MiFIDregarding", null, value);
            }
        }
        
        [AttributeLogicalName("grm_productid")]
        [RelationshipSchemaName("grm_mifidproduct_productid_Product")]
        public Product grm_mifidproduct_productid_Product {
            get {
                return GetRelatedEntity<Product>("grm_mifidproduct_productid_Product", null);
            }
            set {
                SetRelatedEntity("grm_mifidproduct_productid_Product", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_mifidproduct_createdby")]
        public SystemUser lk_grm_mifidproduct_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifidproduct_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifidproduct_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_mifidproduct_createdonbehalfby")]
        public SystemUser lk_grm_mifidproduct_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifidproduct_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifidproduct_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_mifidproduct_modifiedby")]
        public SystemUser lk_grm_mifidproduct_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifidproduct_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifidproduct_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_mifidproduct_modifiedonbehalfby")]
        public SystemUser lk_grm_mifidproduct_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifidproduct_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifidproduct_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_grm_mifidproduct")]
        public SystemUser user_grm_mifidproduct {
            get {
                return GetRelatedEntity<SystemUser>("user_grm_mifidproduct", null);
            }
            set {
                SetRelatedEntity("user_grm_mifidproduct", null, value);
            }
        }
        
        public static grm_mifidproduct Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_mifidproduct,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Mifid Services</para>
    /// </summary>
    [EntityLogicalName("grm_mifidservices")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_mifidservices : ExtendedEntity<grm_mifidservicesState, grm_mifidservices_statuscode> {
        
        public const string EntityLogicalName = "grm_mifidservices";
        
        public const int EntityTypeCode = 10382;
        
        public grm_mifidservices() : 
                base(EntityLogicalName) {
        }
        
        public grm_mifidservices(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_mifidservicesid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_mifidservicesid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Mifid Services</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidservicesid")]
        [DisplayName("Mifid Services")]
        public Guid? grm_mifidservicesId {
            get {
                return GetAttributeValue<Guid?>("grm_mifidservicesid");
            }
            set {
                SetId("grm_mifidservicesid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: MiFID regarding</para>
        /// </summary>
        [AttributeLogicalName("grm_mifidregarding")]
        [DisplayName("MiFID regarding")]
        public EntityReference grm_MiFIDregarding {
            get {
                return GetAttributeValue<EntityReference>("grm_mifidregarding");
            }
            set {
                SetAttributeValue("grm_mifidregarding", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("grm_service")]
        [DisplayName("Service")]
        public EntityReference grm_Service {
            get {
                return GetAttributeValue<EntityReference>("grm_service");
            }
            set {
                SetAttributeValue("grm_service", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Test Type</para>
        /// </summary>
        [AttributeLogicalName("grm_testtype")]
        [DisplayName("Test Type")]
        public grm_testtype? grm_TestType {
            get {
                return GetOptionSetValue<grm_testtype>("grm_testtype");
            }
            set {
                SetOptionSetValue("grm_testtype", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Mifid Services</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_mifidservicesState? statecode {
            get {
                return GetOptionSetValue<grm_mifidservicesState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Mifid Services</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_mifidservices_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_mifidservices_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_mifidservices_grm_mifidservices_Service", EntityRole.Referenced)]
        public IEnumerable<grm_mifidservices> Referencedgrm_grm_mifidservices_grm_mifidservices_Service {
            get {
                return GetRelatedEntities<grm_mifidservices>("grm_grm_mifidservices_grm_mifidservices_Service", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("grm_grm_mifidservices_grm_mifidservices_Service", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("grm_service")]
        [RelationshipSchemaName("grm_grm_mifidservices_grm_mifidservices_Service", EntityRole.Referencing)]
        public grm_mifidservices Referencinggrm_grm_mifidservices_grm_mifidservices_Service {
            get {
                return GetRelatedEntity<grm_mifidservices>("grm_grm_mifidservices_grm_mifidservices_Service", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("grm_grm_mifidservices_grm_mifidservices_Service", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_grm_mifidservices")]
        public BusinessUnit business_unit_grm_mifidservices {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_grm_mifidservices", null);
            }
            set {
                SetRelatedEntity("business_unit_grm_mifidservices", null, value);
            }
        }
        
        [AttributeLogicalName("grm_mifidregarding")]
        [RelationshipSchemaName("grm_grm_mifid_grm_mifidservices_MiFIDregarding")]
        public grm_mifid grm_grm_mifid_grm_mifidservices_MiFIDregarding {
            get {
                return GetRelatedEntity<grm_mifid>("grm_grm_mifid_grm_mifidservices_MiFIDregarding", null);
            }
            set {
                SetRelatedEntity("grm_grm_mifid_grm_mifidservices_MiFIDregarding", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_mifidservices_createdby")]
        public SystemUser lk_grm_mifidservices_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifidservices_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifidservices_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_mifidservices_createdonbehalfby")]
        public SystemUser lk_grm_mifidservices_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifidservices_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifidservices_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_mifidservices_modifiedby")]
        public SystemUser lk_grm_mifidservices_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifidservices_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifidservices_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_mifidservices_modifiedonbehalfby")]
        public SystemUser lk_grm_mifidservices_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_mifidservices_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_mifidservices_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_grm_mifidservices")]
        public SystemUser user_grm_mifidservices {
            get {
                return GetRelatedEntity<SystemUser>("user_grm_mifidservices", null);
            }
            set {
                SetRelatedEntity("user_grm_mifidservices", null, value);
            }
        }
        
        public static grm_mifidservices Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_mifidservices,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Ownership Structure</para>
    /// </summary>
    [EntityLogicalName("grm_ownershipstructure")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class grm_ownershipstructure : ExtendedEntity<grm_ownershipstructureState, grm_ownershipstructure_statuscode> {
        
        public const string EntityLogicalName = "grm_ownershipstructure";
        
        public const int EntityTypeCode = 10314;
        
        public grm_ownershipstructure() : 
                base(EntityLogicalName) {
        }
        
        public grm_ownershipstructure(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("grm_name");
            }
        }
        
        [AttributeLogicalName("grm_ownershipstructureid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("grm_ownershipstructureid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Ownership Structure</para>
        /// </summary>
        [AttributeLogicalName("grm_ownershipstructureid")]
        [DisplayName("Ownership Structure")]
        public Guid? grm_ownershipstructureId {
            get {
                return GetAttributeValue<Guid?>("grm_ownershipstructureid");
            }
            set {
                SetId("grm_ownershipstructureid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Score</para>
        /// </summary>
        [AttributeLogicalName("grm_score")]
        [DisplayName("Score")]
        public decimal? grm_Score {
            get {
                return GetAttributeValue<decimal?>("grm_score");
            }
            set {
                SetAttributeValue("grm_score", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("grm_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string grm_name {
            get {
                return GetAttributeValue<string>("grm_name");
            }
            set {
                SetAttributeValue("grm_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Risk</para>
        /// </summary>
        [AttributeLogicalName("grm_risk")]
        [DisplayName("Risk")]
        public grm_risklevel? grm_risk {
            get {
                return GetOptionSetValue<grm_risklevel>("grm_risk");
            }
            set {
                SetOptionSetValue("grm_risk", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Ownership Structure</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public grm_ownershipstructureState? statecode {
            get {
                return GetOptionSetValue<grm_ownershipstructureState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Ownership Structure</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public grm_ownershipstructure_statuscode? statuscode {
            get {
                return GetOptionSetValue<grm_ownershipstructure_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("grm_grm_ownershipstructure_account")]
        public IEnumerable<Account> grm_grm_ownershipstructure_account {
            get {
                return GetRelatedEntities<Account>("grm_grm_ownershipstructure_account", null);
            }
            set {
                SetRelatedEntities("grm_grm_ownershipstructure_account", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_grm_ownershipstructure_createdby")]
        public SystemUser lk_grm_ownershipstructure_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_ownershipstructure_createdby", null);
            }
            set {
                SetRelatedEntity("lk_grm_ownershipstructure_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_grm_ownershipstructure_createdonbehalfby")]
        public SystemUser lk_grm_ownershipstructure_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_ownershipstructure_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_ownershipstructure_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_grm_ownershipstructure_modifiedby")]
        public SystemUser lk_grm_ownershipstructure_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_ownershipstructure_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_grm_ownershipstructure_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_grm_ownershipstructure_modifiedonbehalfby")]
        public SystemUser lk_grm_ownershipstructure_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_grm_ownershipstructure_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_grm_ownershipstructure_modifiedonbehalfby", null, value);
            }
        }
        
        public static grm_ownershipstructure Retrieve(IOrganizationService service, Guid id, params Expression<Func<grm_ownershipstructure,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Base entity for process Onboarding</para>
    /// <para>Display Name: Onboarding</para>
    /// </summary>
    [EntityLogicalName("new_onboarding")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class new_onboarding : ExtendedEntity<new_onboardingState, new_onboarding_statuscode> {
        
        public const string EntityLogicalName = "new_onboarding";
        
        public const int EntityTypeCode = 10299;
        
        public new_onboarding() : 
                base(EntityLogicalName) {
        }
        
        public new_onboarding(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("bpf_name");
            }
        }
        
        [AttributeLogicalName("businessprocessflowinstanceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("businessprocessflowinstanceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Onboarding</para>
        /// </summary>
        [AttributeLogicalName("businessprocessflowinstanceid")]
        [DisplayName("Onboarding")]
        public Guid? BusinessProcessFlowInstanceId {
            get {
                return GetAttributeValue<Guid?>("businessprocessflowinstanceid");
            }
            set {
                SetId("businessprocessflowinstanceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the active stage for the Business Process Flow instance.</para>
        /// <para>Display Name: Active Stage</para>
        /// </summary>
        [AttributeLogicalName("activestageid")]
        [DisplayName("Active Stage")]
        public EntityReference ActiveStageId {
            get {
                return GetAttributeValue<EntityReference>("activestageid");
            }
            set {
                SetAttributeValue("activestageid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when current active stage is started</para>
        /// <para>Display Name: Active Stage Started On</para>
        /// </summary>
        [AttributeLogicalName("activestagestartedon")]
        [DisplayName("Active Stage Started On")]
        public DateTime? ActiveStageStartedOn {
            get {
                return GetAttributeValue<DateTime?>("activestagestartedon");
            }
            set {
                SetAttributeValue("activestagestartedon", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when Business Process Flow instance is completed.</para>
        /// <para>Display Name: Completed On</para>
        /// </summary>
        [AttributeLogicalName("completedon")]
        [DisplayName("Completed On")]
        public DateTime? CompletedOn {
            get {
                return GetAttributeValue<DateTime?>("completedon");
            }
            set {
                SetAttributeValue("completedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Description</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("bpf_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("bpf_name");
            }
            set {
                SetAttributeValue("bpf_name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the workflow associated to the Business Process Flow instance.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public EntityReference ProcessId {
            get {
                return GetAttributeValue<EntityReference>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Comma delimited string of process stage ids that represent visited stages of the Business Process Flow instance.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Duration of Business Process Flow</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("bpf_duration")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? bpf_Duration {
            get {
                return GetAttributeValue<int?>("bpf_duration");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("bpf_accountid")]
        [DisplayName("Account")]
        public EntityReference bpf_accountid {
            get {
                return GetAttributeValue<EntityReference>("bpf_accountid");
            }
            set {
                SetAttributeValue("bpf_accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Description</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("bpf_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string bpf_name {
            get {
                return GetAttributeValue<string>("bpf_name");
            }
            set {
                SetAttributeValue("bpf_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Onboarding</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public new_onboardingState? statecode {
            get {
                return GetOptionSetValue<new_onboardingState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Onboarding</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public new_onboarding_statuscode? statuscode {
            get {
                return GetOptionSetValue<new_onboarding_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("bpf_accountid")]
        [RelationshipSchemaName("bpf_account_new_onboarding")]
        public Account bpf_account_new_onboarding {
            get {
                return GetRelatedEntity<Account>("bpf_account_new_onboarding", null);
            }
            set {
                SetRelatedEntity("bpf_account_new_onboarding", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_new_onboarding_createdby")]
        public SystemUser lk_new_onboarding_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_new_onboarding_createdby", null);
            }
            set {
                SetRelatedEntity("lk_new_onboarding_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_new_onboarding_createdonbehalfby")]
        public SystemUser lk_new_onboarding_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_new_onboarding_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_new_onboarding_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_new_onboarding_modifiedby")]
        public SystemUser lk_new_onboarding_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_new_onboarding_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_new_onboarding_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_new_onboarding_modifiedonbehalfby")]
        public SystemUser lk_new_onboarding_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_new_onboarding_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_new_onboarding_modifiedonbehalfby", null, value);
            }
        }
        
        public static new_onboarding Retrieve(IOrganizationService service, Guid id, params Expression<Func<new_onboarding,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    public partial class Xrm : ExtendedOrganizationServiceContext {
        
        public Xrm(IOrganizationService service) : 
                base(service) {
        }
        
        public IQueryable<Account> AccountSet {
            get {
                return CreateQuery<Account>();
            }
        }
        
        public IQueryable<BusinessUnit> BusinessUnitSet {
            get {
                return CreateQuery<BusinessUnit>();
            }
        }
        
        public IQueryable<Contact> ContactSet {
            get {
                return CreateQuery<Contact>();
            }
        }
        
        public IQueryable<Product> ProductSet {
            get {
                return CreateQuery<Product>();
            }
        }
        
        public IQueryable<SavedQuery> SavedQuerySet {
            get {
                return CreateQuery<SavedQuery>();
            }
        }
        
        public IQueryable<SystemUser> SystemUserSet {
            get {
                return CreateQuery<SystemUser>();
            }
        }
        
        public IQueryable<Task> TaskSet {
            get {
                return CreateQuery<Task>();
            }
        }
        
        public IQueryable<grm_account_grm_assets> grm_account_grm_assetsSet {
            get {
                return CreateQuery<grm_account_grm_assets>();
            }
        }
        
        public IQueryable<grm_amlkycrelationship> grm_amlkycrelationshipSet {
            get {
                return CreateQuery<grm_amlkycrelationship>();
            }
        }
        
        public IQueryable<grm_api_configuration> grm_api_configurationSet {
            get {
                return CreateQuery<grm_api_configuration>();
            }
        }
        
        public IQueryable<grm_assets> grm_assetsSet {
            get {
                return CreateQuery<grm_assets>();
            }
        }
        
        public IQueryable<grm_clientservice> grm_clientserviceSet {
            get {
                return CreateQuery<grm_clientservice>();
            }
        }
        
        public IQueryable<grm_commodities> grm_commoditiesSet {
            get {
                return CreateQuery<grm_commodities>();
            }
        }
        
        public IQueryable<grm_countries> grm_countriesSet {
            get {
                return CreateQuery<grm_countries>();
            }
        }
        
        public IQueryable<grm_industry> grm_industrySet {
            get {
                return CreateQuery<grm_industry>();
            }
        }
        
        public IQueryable<grm_kyc_update> grm_kyc_updateSet {
            get {
                return CreateQuery<grm_kyc_update>();
            }
        }
        
        public IQueryable<grm_kyclog> grm_kyclogSet {
            get {
                return CreateQuery<grm_kyclog>();
            }
        }
        
        public IQueryable<grm_legalstructure> grm_legalstructureSet {
            get {
                return CreateQuery<grm_legalstructure>();
            }
        }
        
        public IQueryable<grm_mifid> grm_mifidSet {
            get {
                return CreateQuery<grm_mifid>();
            }
        }
        
        public IQueryable<grm_mifidproduct> grm_mifidproductSet {
            get {
                return CreateQuery<grm_mifidproduct>();
            }
        }
        
        public IQueryable<grm_mifidservices> grm_mifidservicesSet {
            get {
                return CreateQuery<grm_mifidservices>();
            }
        }
        
        public IQueryable<grm_ownershipstructure> grm_ownershipstructureSet {
            get {
                return CreateQuery<grm_ownershipstructure>();
            }
        }
        
        public IQueryable<new_onboarding> new_onboardingSet {
            get {
                return CreateQuery<new_onboarding>();
            }
        }
    }
    
    [DataContract()]
    public enum AccountState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Account_AccountCategoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Preferred Customer", Index=0)]
        PreferredCustomer = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=1)]
        Standard = 2,
    }
    
    [DataContract()]
    public enum Account_AccountClassificationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_AccountRatingCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Account_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Account_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_BusinessTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=0)]
        Competitor = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Consultant", Index=1)]
        Consultant = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Customer", Index=2)]
        Customer = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Investor", Index=3)]
        Investor = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Partner", Index=4)]
        Partner = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=5)]
        Influencer = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Press", Index=6)]
        Press = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Prospect", Index=7)]
        Prospect = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Reseller", Index=8)]
        Reseller = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Supplier", Index=9)]
        Supplier = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Vendor", Index=10)]
        Vendor = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=11)]
        Other = 12,
    }
    
    [DataContract()]
    public enum Account_IndustryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Accounting", Index=0)]
        Accounting = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Agriculture and Non-petrol Natural Resource Extraction", Index=1)]
        AgricultureandNonpetrolNaturalResourceExtraction = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Broadcasting Printing and Publishing", Index=2)]
        BroadcastingPrintingandPublishing = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Brokers", Index=3)]
        Brokers = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Building Supply Retail", Index=4)]
        BuildingSupplyRetail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Business Services", Index=5)]
        BusinessServices = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Consulting", Index=6)]
        Consulting = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Consumer Services", Index=7)]
        ConsumerServices = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Design, Direction and Creative Management", Index=8)]
        DesignDirectionandCreativeManagement = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Distributors, Dispatchers and Processors", Index=9)]
        DistributorsDispatchersandProcessors = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Doctor\'s Offices and Clinics", Index=10)]
        DoctorsOfficesandClinics = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Durable Manufacturing", Index=11)]
        DurableManufacturing = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Eating and Drinking Places", Index=12)]
        EatingandDrinkingPlaces = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Entertainment Retail", Index=13)]
        EntertainmentRetail = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Equipment Rental and Leasing", Index=14)]
        EquipmentRentalandLeasing = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Financial", Index=15)]
        Financial = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Food and Tobacco Processing", Index=16)]
        FoodandTobaccoProcessing = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Capital Intensive Processing", Index=17)]
        InboundCapitalIntensiveProcessing = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Repair and Services", Index=18)]
        InboundRepairandServices = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Insurance", Index=19)]
        Insurance = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Legal Services", Index=20)]
        LegalServices = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Non-Durable Merchandise Retail", Index=21)]
        NonDurableMerchandiseRetail = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Outbound Consumer Service", Index=22)]
        OutboundConsumerService = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Petrochemical Extraction and Distribution", Index=23)]
        PetrochemicalExtractionandDistribution = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Service Retail", Index=24)]
        ServiceRetail = 25,
        
        [EnumMember()]
        [OptionSetMetadata("SIG Affiliations", Index=25)]
        SIGAffiliations = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Social Services", Index=26)]
        SocialServices = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Special Outbound Trade Contractors", Index=27)]
        SpecialOutboundTradeContractors = 28,
        
        [EnumMember()]
        [OptionSetMetadata("Specialty Realty", Index=28)]
        SpecialtyRealty = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Transportation", Index=29)]
        Transportation = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Utility Creation and Distribution", Index=30)]
        UtilityCreationandDistribution = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Vehicle Retail", Index=31)]
        VehicleRetail = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Wholesale", Index=32)]
        Wholesale = 33,
    }
    
    [DataContract()]
    public enum Account_OwnershipCode {
        
        [EnumMember()]
        [OptionSetMetadata("Public", Index=0)]
        Public = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Private", Index=1)]
        Private = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Subsidiary", Index=2)]
        Subsidiary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sunday", Index=0)]
        Sunday = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Monday", Index=1)]
        Monday = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tuesday", Index=2)]
        Tuesday = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Wednesday", Index=3)]
        Wednesday = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Thursday", Index=4)]
        Thursday = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Friday", Index=5)]
        Friday = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Saturday", Index=6)]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morning", Index=0)]
        Morning = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Afternoon", Index=1)]
        Afternoon = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Evening", Index=2)]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Account_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=4)]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Account_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum Account_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_grm_derivatives {
        
        [EnumMember()]
        [OptionSetMetadata("Forward", Index=0, Color="#0000ff")]
        Forward = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Swap", Index=1, Color="#0000ff")]
        Swap = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Option", Index=2, Color="#0000ff")]
        Option = 172300002,
    }
    
    [DataContract()]
    public enum Account_grm_expectedtradesprmonth {
        
        [EnumMember()]
        [OptionSetMetadata("0-10", Index=0, Color="#0000ff")]
        _010 = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("0-50", Index=1, Color="#0000ff")]
        _050 = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("50-100", Index=2, Color="#0000ff")]
        _50100 = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("100+", Index=3, Color="#0000ff")]
        _100 = 172300003,
    }
    
    [DataContract()]
    public enum Account_grm_financials {
        
        [EnumMember()]
        [OptionSetMetadata("None Available", Index=0, Color="#0000ff")]
        NoneAvailable = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Obtainable", Index=1, Color="#0000ff")]
        Obtainable = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Only MRC", Index=2, Color="#0000ff")]
        OnlyMRC = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=3, Color="#0000ff")]
        Received = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("Item", Index=4, Color="#0000ff")]
        Item = 172300004,
    }
    
    [DataContract()]
    public enum Account_grm_fuelsurcharge {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Color="#0000ff")]
        None = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Partly", Index=1, Color="#0000ff")]
        Partly = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("All", Index=2, Color="#0000ff")]
        All = 172300002,
    }
    
    [DataContract()]
    public enum Account_grm_globaldep {
        
        [EnumMember()]
        [OptionSetMetadata("Paris", Index=0, Color="#0000ff")]
        Paris = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Middelfart", Index=1, Color="#0000ff")]
        Middelfart = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Singapore", Index=3, Color="#0000ff")]
        Singapore = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("Copenhagen", Index=2, Color="#0000ff")]
        Copenhagen = 172300003,
    }
    
    [DataContract()]
    public enum Account_grm_grmshareofhedgin {
        
        [EnumMember()]
        [OptionSetMetadata("<10", Index=0, Color="#0000ff")]
        _10 = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("10-25", Index=1, Color="#0000ff")]
        _1025 = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("26-50", Index=2, Color="#0000ff")]
        _2650 = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("51-75", Index=3, Color="#0000ff")]
        _5175 = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("76-99", Index=4, Color="#0000ff")]
        _7699 = 172300004,
        
        [EnumMember()]
        [OptionSetMetadata("100", Index=5, Color="#0000ff")]
        _100 = 172300005,
    }
    
    [DataContract()]
    public enum Account_grm_groups {
        
        [EnumMember()]
        [OptionSetMetadata("Bio", Index=0, Color="#0000ff")]
        Bio = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Crude", Index=1, Color="#0000ff")]
        Crude = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("FO", Index=2, Color="#0000ff")]
        FO = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("Gasoil", Index=3, Color="#0000ff")]
        Gasoil = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("Gadoline", Index=4, Color="#0000ff")]
        Gadoline = 172300004,
        
        [EnumMember()]
        [OptionSetMetadata("Jet", Index=5, Color="#0000ff")]
        Jet = 172300005,
        
        [EnumMember()]
        [OptionSetMetadata("Naptha", Index=6, Color="#0000ff")]
        Naptha = 172300006,
        
        [EnumMember()]
        [OptionSetMetadata("ULSD", Index=8, Color="#0000ff")]
        ULSD = 172300007,
        
        [EnumMember()]
        [OptionSetMetadata("Propane", Index=7, Color="#0000ff")]
        Propane = 172300008,
    }
    
    [DataContract()]
    public enum Account_grm_hedgingperiodupto {
        
        [EnumMember()]
        [OptionSetMetadata("3 months", Index=0, Color="#0000ff")]
        _3months = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("6 months", Index=1, Color="#0000ff")]
        _6months = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("12 months", Index=2, Color="#0000ff")]
        _12months = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("18 months", Index=3, Color="#0000ff")]
        _18months = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("24 months", Index=4, Color="#0000ff")]
        _24months = 172300004,
        
        [EnumMember()]
        [OptionSetMetadata("> 2 years", Index=5, Color="#0000ff")]
        _2years = 172300005,
    }
    
    [DataContract()]
    public enum Account_grm_leistatus {
        
        [EnumMember()]
        [OptionSetMetadata("Counterpart", Index=3, Color="#0000ff")]
        Counterpart = 100000003,
        
        [EnumMember()]
        [OptionSetMetadata("Pending", Index=0, Color="#0000ff")]
        Pending = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Signed", Index=1, Color="#0000ff")]
        Signed = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=2, Color="#0000ff")]
        Rejected = 172300002,
    }
    
    [DataContract()]
    public enum Account_grm_oilconsumptionmtyear {
        
        [EnumMember()]
        [OptionSetMetadata("<250", Index=0, Color="#0000ff")]
        _250 = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("250-500", Index=1, Color="#0000ff")]
        _250500 = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("500-1,000", Index=2, Color="#0000ff")]
        _5001000 = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("1,000-5,000", Index=3, Color="#0000ff")]
        _10005000 = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("5,000-10,000", Index=4, Color="#0000ff")]
        _500010000 = 172300004,
        
        [EnumMember()]
        [OptionSetMetadata("10,000-20,000", Index=5, Color="#0000ff")]
        _1000020000 = 172300005,
        
        [EnumMember()]
        [OptionSetMetadata("20,000-30,000", Index=6, Color="#0000ff")]
        _2000030000 = 172300006,
        
        [EnumMember()]
        [OptionSetMetadata("30,000-40,000", Index=7, Color="#0000ff")]
        _3000040000 = 172300007,
        
        [EnumMember()]
        [OptionSetMetadata("40,000-50,000", Index=8, Color="#0000ff")]
        _4000050000 = 172300008,
        
        [EnumMember()]
        [OptionSetMetadata("50,000-60,000", Index=9, Color="#0000ff")]
        _5000060000 = 172300009,
        
        [EnumMember()]
        [OptionSetMetadata("60,000-70,000", Index=10, Color="#0000ff")]
        _6000070000 = 172300010,
        
        [EnumMember()]
        [OptionSetMetadata("70,000-80,000", Index=11, Color="#0000ff")]
        _7000080000 = 172300011,
        
        [EnumMember()]
        [OptionSetMetadata("80,000-90,000", Index=12, Color="#0000ff")]
        _8000090000 = 172300012,
        
        [EnumMember()]
        [OptionSetMetadata("90,000-100,000", Index=13, Color="#0000ff")]
        _90000100000 = 172300013,
        
        [EnumMember()]
        [OptionSetMetadata("100,000-200,000", Index=14, Color="#0000ff")]
        _100000200000 = 172300014,
        
        [EnumMember()]
        [OptionSetMetadata("200,000-300,000", Index=15, Color="#0000ff")]
        _200000300000 = 172300015,
        
        [EnumMember()]
        [OptionSetMetadata("300,000-400,000", Index=16, Color="#0000ff")]
        _300000400000 = 172300016,
        
        [EnumMember()]
        [OptionSetMetadata("400,000-500,000", Index=17, Color="#0000ff")]
        _400000500000 = 172300017,
        
        [EnumMember()]
        [OptionSetMetadata(">500,000", Index=18, Color="#0000ff")]
        _500000 = 172300018,
    }
    
    [DataContract()]
    public enum Account_grm_postition {
        
        [EnumMember()]
        [OptionSetMetadata("Long", Index=0, Color="#0000ff")]
        Long = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Short", Index=1, Color="#0000ff")]
        Short = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Both", Index=2, Color="#0000ff")]
        Both = 172300002,
    }
    
    [DataContract()]
    public enum Account_grm_potentialmtyear {
        
        [EnumMember()]
        [OptionSetMetadata("<250", Index=0, Color="#0000ff")]
        _250 = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("250-500", Index=1, Color="#0000ff")]
        _250500 = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("500-1,000", Index=2, Color="#0000ff")]
        _5001000 = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("1,000-5,000", Index=3, Color="#0000ff")]
        _10005000 = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("5,000-10,000", Index=4, Color="#0000ff")]
        _500010000 = 172300004,
        
        [EnumMember()]
        [OptionSetMetadata("10,000-20,000", Index=5, Color="#0000ff")]
        _1000020000 = 172300005,
        
        [EnumMember()]
        [OptionSetMetadata("20,000-30,000", Index=6, Color="#0000ff")]
        _2000030000 = 172300006,
        
        [EnumMember()]
        [OptionSetMetadata("30,000-40,000", Index=7, Color="#0000ff")]
        _3000040000 = 172300007,
        
        [EnumMember()]
        [OptionSetMetadata("40,000-50,000", Index=8, Color="#0000ff")]
        _4000050000 = 172300008,
        
        [EnumMember()]
        [OptionSetMetadata("50,000-60,000", Index=9, Color="#0000ff")]
        _5000060000 = 172300009,
        
        [EnumMember()]
        [OptionSetMetadata("60,000-70,000", Index=10, Color="#0000ff")]
        _6000070000 = 172300010,
        
        [EnumMember()]
        [OptionSetMetadata("70,000-80,000", Index=11, Color="#0000ff")]
        _7000080000 = 172300011,
        
        [EnumMember()]
        [OptionSetMetadata("80,000-90,000", Index=12, Color="#0000ff")]
        _8000090000 = 172300012,
        
        [EnumMember()]
        [OptionSetMetadata("90,000-100,000", Index=13, Color="#0000ff")]
        _90000100000 = 172300013,
        
        [EnumMember()]
        [OptionSetMetadata("100,000-200,000", Index=14, Color="#0000ff")]
        _100000200000 = 172300014,
        
        [EnumMember()]
        [OptionSetMetadata("200,000-300,000", Index=15, Color="#0000ff")]
        _200000300000 = 172300015,
        
        [EnumMember()]
        [OptionSetMetadata("300,000-400,000", Index=16, Color="#0000ff")]
        _300000400000 = 172300016,
        
        [EnumMember()]
        [OptionSetMetadata("400,000-500,000", Index=17, Color="#0000ff")]
        _400000500000 = 172300017,
        
        [EnumMember()]
        [OptionSetMetadata(">500,000", Index=18, Color="#0000ff")]
        _500000 = 172300018,
    }
    
    [DataContract()]
    public enum Account_grm_purposeofaccount {
        
        [EnumMember()]
        [OptionSetMetadata("Hedging", Index=0, Color="#0000ff")]
        Hedging = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Hedging and speculation", Index=1, Color="#0000ff")]
        Hedgingandspeculation = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Speculation", Index=2, Color="#0000ff")]
        Speculation = 3,
    }
    
    [DataContract()]
    public enum Account_grm_purposeofhedging {
        
        [EnumMember()]
        [OptionSetMetadata("Strategic", Index=0, Color="#0000ff")]
        Strategic = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunistic", Index=1, Color="#0000ff")]
        Opportunistic = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Contracts", Index=2, Color="#0000ff")]
        Contracts = 172300002,
    }
    
    [DataContract()]
    public enum Account_grm_redflag {
        
        [EnumMember()]
        [OptionSetMetadata("Country", Index=0, Color="#0000ff")]
        Country = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Owners", Index=1, Color="#0000ff")]
        Owners = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Management", Index=2, Color="#0000ff")]
        Management = 172300002,
    }
    
    [DataContract()]
    public enum Account_grm_tenor {
        
        [EnumMember()]
        [OptionSetMetadata("0-3 months", Index=0, Color="#0000ff")]
        _03months = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("3-6 months", Index=1, Color="#0000ff")]
        _36months = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("6-12 months", Index=2, Color="#0000ff")]
        _612months = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("12-18 months", Index=3, Color="#0000ff")]
        _1218months = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("18+ months", Index=4, Color="#0000ff")]
        _18months = 172300004,
    }
    
    [DataContract()]
    public enum Account_grm_tradedirection {
        
        [EnumMember()]
        [OptionSetMetadata("Long", Index=0, Color="#0000ff")]
        Long = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Short", Index=1, Color="#0000ff")]
        Short = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Both", Index=2, Color="#0000ff")]
        Both = 172300002,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum ContactState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Contact_AccountRoleCode {
        
        [EnumMember()]
        [OptionSetMetadata("Decision Maker", Index=0)]
        DecisionMaker = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Employee", Index=1)]
        Employee = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=2)]
        Influencer = 3,
    }
    
    [DataContract()]
    public enum Contact_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Contact_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Contact_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Contact_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_EducationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_FamilyStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Single", Index=0)]
        Single = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Married", Index=1)]
        Married = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Divorced", Index=2)]
        Divorced = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Widowed", Index=3)]
        Widowed = 4,
    }
    
    [DataContract()]
    public enum Contact_GenderCode {
        
        [EnumMember()]
        [OptionSetMetadata("Male", Index=0)]
        Male = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Female", Index=1)]
        Female = 2,
    }
    
    [DataContract()]
    public enum Contact_HasChildrenCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_LeadSourceCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sunday", Index=0)]
        Sunday = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Monday", Index=1)]
        Monday = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tuesday", Index=2)]
        Tuesday = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Wednesday", Index=3)]
        Wednesday = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Thursday", Index=4)]
        Thursday = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Friday", Index=5)]
        Friday = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Saturday", Index=6)]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morning", Index=0)]
        Morning = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Afternoon", Index=1)]
        Afternoon = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Evening", Index=2)]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Contact_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=4)]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Contact_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum Contact_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_grm_greetings {
        
        [EnumMember()]
        [OptionSetMetadata("Christmas card and present MDF", Index=1, Color="#0000ff")]
        ChristmascardandpresentMDF = 100000001,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=6, Color="#0000ff")]
        None = 100000002,
        
        [EnumMember()]
        [OptionSetMetadata("Christmas card", Index=0, Color="#0000ff")]
        Christmascard = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Christmas card and present SING", Index=2, Color="#0000ff")]
        ChristmascardandpresentSING = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("Mooncake + Christmas card Singapore", Index=3, Color="#0000ff")]
        MooncakeChristmascardSingapore = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("Mooncake + Christmas present Singapore", Index=4, Color="#0000ff")]
        MooncakeChristmaspresentSingapore = 172300004,
        
        [EnumMember()]
        [OptionSetMetadata("Mooncake Singapore", Index=5, Color="#0000ff")]
        MooncakeSingapore = 172300005,
    }
    
    [DataContract()]
    public enum Contact_grm_pep {
        
        [EnumMember()]
        [OptionSetMetadata("No", Index=0, Color="#0000ff")]
        No = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Yes", Index=1, Color="#0000ff")]
        Yes = 172300001,
    }
    
    [DataContract()]
    public enum Contact_msdyn_orgchangestatus {
        
        [EnumMember()]
        [OptionSetMetadata("No Feedback", Index=0, Color="#0000ff")]
        NoFeedback = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Not at Company", Index=1, Color="#0000ff")]
        NotatCompany = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ignore", Index=2, Color="#0000ff")]
        Ignore = 2,
    }
    
    [DataContract()]
    public enum ProductState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Retired", Index=1)]
        Retired = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=2)]
        Draft = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Under Revision", Index=3)]
        UnderRevision = 3,
    }
    
    [DataContract()]
    public enum Product_ProductStructure {
        
        [EnumMember()]
        [OptionSetMetadata("Product", Index=0)]
        Product = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Product Family", Index=1)]
        ProductFamily = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Product Bundle", Index=2)]
        ProductBundle = 3,
    }
    
    [DataContract()]
    public enum Product_ProductTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sales Inventory", Index=0)]
        SalesInventory = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Miscellaneous Charges", Index=1)]
        MiscellaneousCharges = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Services", Index=2)]
        Services = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Flat Fees", Index=3)]
        FlatFees = 4,
    }
    
    [DataContract()]
    public enum Product_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=2)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Retired", Index=1)]
        Retired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Under Revision", Index=3)]
        UnderRevision = 3,
    }
    
    [DataContract()]
    public enum SavedQueryState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum SavedQuery_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum SystemUser_AccessMode {
        
        [EnumMember()]
        [OptionSetMetadata("Read-Write", Index=0)]
        ReadWrite = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Read", Index=2)]
        Read = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Support User", Index=3)]
        SupportUser = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Non-interactive", Index=4)]
        Noninteractive = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Delegated Admin", Index=5)]
        DelegatedAdmin = 5,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_CALType {
        
        [EnumMember()]
        [OptionSetMetadata("Professional", Index=0)]
        Professional = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Basic", Index=2)]
        Basic = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Device Professional", Index=3)]
        DeviceProfessional = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Device Basic", Index=4)]
        DeviceBasic = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Essential", Index=5)]
        Essential = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Device Essential", Index=6)]
        DeviceEssential = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Enterprise", Index=7)]
        Enterprise = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Device Enterprise", Index=8)]
        DeviceEnterprise = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Sales", Index=9)]
        Sales = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=10)]
        Service = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service", Index=11)]
        FieldService = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Project Service", Index=12)]
        ProjectService = 12,
    }
    
    [DataContract()]
    public enum SystemUser_DeletedState {
        
        [EnumMember()]
        [OptionSetMetadata("Not deleted", Index=0)]
        Notdeleted = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1)]
        Softdeleted = 1,
    }
    
    [DataContract()]
    public enum SystemUser_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum SystemUser_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2)]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=3)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum SystemUser_InviteStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Not Sent", Index=0)]
        InvitationNotSent = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Invited", Index=1)]
        Invited = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Near Expired", Index=2)]
        InvitationNearExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Expired", Index=3)]
        InvitationExpired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Accepted", Index=4)]
        InvitationAccepted = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Rejected", Index=5)]
        InvitationRejected = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Revoked", Index=6)]
        InvitationRevoked = 6,
    }
    
    [DataContract()]
    public enum SystemUser_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2)]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredAddressCode {
        
        [EnumMember()]
        [OptionSetMetadata("Mailing Address", Index=0)]
        MailingAddress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Address", Index=1)]
        OtherAddress = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredEmailCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredPhoneCode {
        
        [EnumMember()]
        [OptionSetMetadata("Main Phone", Index=0)]
        MainPhone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Phone", Index=1)]
        OtherPhone = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Home Phone", Index=2)]
        HomePhone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Phone", Index=3)]
        MobilePhone = 4,
    }
    
    [DataContract()]
    public enum TaskState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Task_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum Task_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Started", Index=0)]
        NotStarted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=1)]
        InProgress = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting on someone else", Index=2)]
        Waitingonsomeoneelse = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=3)]
        Completed = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4)]
        Canceled = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Deferred", Index=5)]
        Deferred = 7,
    }
    
    [DataContract()]
    public enum grm_amlkycrelationshipState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_amlkycrelationship_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_api_configurationState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_api_configuration_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_assetsState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_assets_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_clientserviceState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_clientservice_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_commoditiesState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_commodities_grm_commodity {
        
        [EnumMember()]
        [OptionSetMetadata("Coal", Index=0, Color="#0000ff")]
        Coal = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Emission", Index=1, Color="#0000ff")]
        Emission = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("FFA", Index=2, Color="#0000ff")]
        FFA = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("Gas", Index=3, Color="#0000ff")]
        Gas = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("LPG", Index=4, Color="#0000ff")]
        LPG = 172300004,
        
        [EnumMember()]
        [OptionSetMetadata("Oil", Index=5, Color="#0000ff")]
        Oil = 172300005,
    }
    
    [DataContract()]
    public enum grm_commodities_grm_periode {
        
        [EnumMember()]
        [OptionSetMetadata("Month", Index=0, Color="#0000ff")]
        Month = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Quater", Index=1, Color="#0000ff")]
        Quater = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Year", Index=2, Color="#0000ff")]
        Year = 172300002,
    }
    
    [DataContract()]
    public enum grm_commodities_grm_unit {
        
        [EnumMember()]
        [OptionSetMetadata("MT", Index=0, Color="#0000ff")]
        MT = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("MWh", Index=1, Color="#0000ff")]
        MWh = 172300001,
    }
    
    [DataContract()]
    public enum grm_commodities_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_countriesState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_countries_grm_risklevel {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Color="#0000ff")]
        Low = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Medium", Index=1, Color="#0000ff")]
        Medium = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Color="#0000ff")]
        High = 172300002,
    }
    
    [DataContract()]
    public enum grm_countries_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_industryState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_industry_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_kyc_updateState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_kyc_update_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Color="#0000ff")]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1, Color="#0000ff")]
        Completed = 2,
    }
    
    [DataContract()]
    public enum grm_kyclogState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_kyclog_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_legalstructureState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_legalstructure_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_mifidState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_mifid_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_mifidproductState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_mifidproduct_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_mifidservicesState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_mifidservices_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum grm_ownershipstructureState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum grm_ownershipstructure_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum new_onboardingState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum new_onboarding_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Finished", Index=1)]
        Finished = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Aborted", Index=2)]
        Aborted = 3,
    }
    
    [DataContract()]
    public enum grm_conclusion {
        
        [EnumMember()]
        [OptionSetMetadata("Concerns", Index=0, Color="#0000ff")]
        Concerns = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("No Concerns", Index=1, Color="#0000ff")]
        NoConcerns = 172300001,
    }
    
    [DataContract()]
    public enum grm_documents {
        
        [EnumMember()]
        [OptionSetMetadata("In process", Index=0, Color="#0000ff")]
        Inprocess = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Signed", Index=1, Color="#0000ff")]
        Signed = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Cleared", Index=2, Color="#0000ff")]
        Cleared = 172300002,
    }
    
    [DataContract()]
    public enum grm_receiveddone {
        
        [EnumMember()]
        [OptionSetMetadata("Yes", Index=0, Color="#0000ff")]
        Yes = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("No", Index=1, Color="#0000ff")]
        No = 172300001,
    }
    
    [DataContract()]
    public enum grm_risklevel {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0, Color="#0000ff")]
        Low = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Medium", Index=1, Color="#0000ff")]
        Medium = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2, Color="#0000ff")]
        High = 172300002,
    }
    
    [DataContract()]
    public enum grm_productcomplexity {
        
        [EnumMember()]
        [OptionSetMetadata("Complex", Index=0, Color="#0000ff")]
        Complex = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Non-complex", Index=1, Color="#0000ff")]
        Noncomplex = 172300001,
    }
    
    [DataContract()]
    public enum grm_producthierarchy {
        
        [EnumMember()]
        [OptionSetMetadata("PH1", Index=0)]
        PH1 = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("PH2", Index=1)]
        PH2 = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("PH3", Index=2)]
        PH3 = 172300002,
    }
    
    [DataContract()]
    public enum grm_productliquidity {
        
        [EnumMember()]
        [OptionSetMetadata("Liquid", Index=0, Color="#0000ff")]
        Liquid = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Non-liquid", Index=1, Color="#0000ff")]
        Nonliquid = 172300001,
    }
    
    [DataContract()]
    public enum grm_riskclassification {
        
        [EnumMember()]
        [OptionSetMetadata("Medium", Index=0)]
        Medium = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=1)]
        High = 172300001,
    }
    
    [DataContract()]
    public enum componentstate {
        
        [EnumMember()]
        [OptionSetMetadata("Published", Index=0)]
        Published = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Unpublished", Index=1)]
        Unpublished = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted", Index=2)]
        Deleted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted Unpublished", Index=3)]
        DeletedUnpublished = 3,
    }
    
    [DataContract()]
    public enum activitypointer_activitytypecode {
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=4)]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=2)]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=0)]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Case Resolution", Index=10)]
        CaseResolution = 4206,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=3)]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Close", Index=12)]
        OpportunityClose = 4208,
        
        [EnumMember()]
        [OptionSetMetadata("Order Close", Index=13)]
        OrderClose = 4209,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=1)]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Close", Index=14)]
        QuoteClose = 4211,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=5)]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=11)]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=6)]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Response", Index=9)]
        CampaignResponse = 4401,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=8)]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Quick Campaign", Index=7)]
        QuickCampaign = 4406,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert", Index=15)]
        CustomerVoicealert = 10228,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey invite", Index=16)]
        CustomerVoicesurveyinvite = 10238,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey response", Index=17)]
        CustomerVoicesurveyresponse = 10240,
    }
    
    [DataContract()]
    public enum grm_amlkycrelationshiptype {
        
        [EnumMember()]
        [OptionSetMetadata("Beneficial Owner", Index=0)]
        BeneficialOwner = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Director", Index=1)]
        Director = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Both", Index=2)]
        Both = 172300002,
    }
    
    [DataContract()]
    public enum grm_mifidservicegroup {
        
        [EnumMember()]
        [OptionSetMetadata("Reception & Transmission", Index=0, Color="#0000ff")]
        ReceptionTransmission = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Execution on behalf of client", Index=1, Color="#0000ff")]
        Executiononbehalfofclient = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Dealing on own account", Index=2, Color="#0000ff")]
        Dealingonownaccount = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("Portofoliop Management", Index=3, Color="#0000ff")]
        PortofoliopManagement = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("Investment advicer", Index=4, Color="#0000ff")]
        Investmentadvicer = 172300004,
    }
    
    [DataContract()]
    public enum grm_testtype {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Color="#0000ff")]
        None = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Appropiateness", Index=1, Color="#0000ff")]
        Appropiateness = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Suitability", Index=2, Color="#0000ff")]
        Suitability = 172300002,
    }
    
    [DataContract()]
    public enum grm_kyc_update_received_not_applicable {
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=0)]
        Received = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Not applicable", Index=1)]
        Notapplicable = 172300001,
    }
    
    [DataContract()]
    public enum grm_kycu_update_findings {
        
        [EnumMember()]
        [OptionSetMetadata("Updated", Index=0)]
        Updated = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("No change", Index=1)]
        Nochange = 172300001,
    }
    
    [DataContract()]
    public enum grm_yesno {
        
        [EnumMember()]
        [OptionSetMetadata("Yes", Index=0)]
        Yes = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("No", Index=1)]
        No = 172300001,
    }
    
    [DataContract()]
    public enum grm_classification {
        
        [EnumMember()]
        [OptionSetMetadata("Retail", Index=0, Color="#0000ff")]
        Retail = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Professional", Index=1, Color="#0000ff")]
        Professional = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Eligible Counteroart", Index=2, Color="#0000ff")]
        EligibleCounteroart = 172300002,
    }
    
    [DataContract()]
    public enum grm_companytype {
        
        [EnumMember()]
        [OptionSetMetadata("Central banks and supranational institutions", Index=0, Color="#0000ff")]
        Centralbanksandsupranationalinstitutions = 172300000,
        
        [EnumMember()]
        [OptionSetMetadata("Commodity dealers and ‘locals’ on exchanges", Index=1, Color="#0000ff")]
        Commoditydealersandlocalsonexchanges = 172300001,
        
        [EnumMember()]
        [OptionSetMetadata("Credit institutions", Index=2, Color="#0000ff")]
        Creditinstitutions = 172300002,
        
        [EnumMember()]
        [OptionSetMetadata("Insurance companies", Index=3, Color="#0000ff")]
        Insurancecompanies = 172300003,
        
        [EnumMember()]
        [OptionSetMetadata("Investment firms", Index=4, Color="#0000ff")]
        Investmentfirms = 172300004,
        
        [EnumMember()]
        [OptionSetMetadata("National governments and their corresponding offices, including public bodies tha" +
            "t deal with public debt", Index=5, Color="#0000ff")]
        Nationalgovernmentsandtheircorrespondingofficesincludingpublicbodiesthatdealwithpublicdebt = 172300006,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=6, Color="#0000ff")]
        Other = 172300007,
        
        [EnumMember()]
        [OptionSetMetadata("Other financial institutions authorised or regulated under Community legislation " +
            "or the national law of a member state", Index=7, Color="#0000ff")]
        OtherfinancialinstitutionsauthorisedorregulatedunderCommunitylegislationorthenationallawofamemberstate = 172300008,
        
        [EnumMember()]
        [OptionSetMetadata("UCITS and their management companies", Index=8, Color="#0000ff")]
        UCITSandtheirmanagementcompanies = 172300009,
    }
}
